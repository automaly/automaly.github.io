[{"content":" MB and PL certificates practice labs # MB-920-Microsoft-Dynamics-365-Fundamentals-Finance-and-Operations-Apps\nMB-300-Microsoft-Dynamics-365-Core-Finance-and-Operations\nMB-320: Microsoft Dynamics 365 Supply Chain Management, Manufacturing\nMB-330: Microsoft Dynamics 365 Supply Chain Management Functional Consultant\nMB-500-Microsoft-Dynamics-365-Finance-and-Operations-Apps-Developer\nPL-900-Microsoft-Power-Platform-Fundamentals\nPL-100: Microsoft Power Platform App Maker\nPL-200-Power-Platform-Functional-Consultant\nPL-400_Microsoft-Power-Platform-Developer\nPL-600-Microsoft-Power-Platform-Solution-Architect\n","externalUrl":null,"permalink":"/cert-learn/learning-certificate-lab/","section":"Dynamics 365 Finance Operation Certificate","summary":"\u003ch1 class=\"relative group\"\u003eMB and PL certificates practice labs \n    \u003cdiv id=\"mb-and-pl-certificates-practice-labs\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline\" href=\"#mb-and-pl-certificates-practice-labs\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h1\u003e\n\u003cp\u003e\u003ca\n  href=\"/docs/MB-920\"\u003eMB-920-Microsoft-Dynamics-365-Fundamentals-Finance-and-Operations-Apps\u003c/a\u003e\u003c/p\u003e","title":"Lab","type":"cert-learn"},{"content":"Business app learning\n","date":"5 February 2023","externalUrl":null,"permalink":"/cert-learn/biz-app-learning/","section":"Dynamics 365 Finance Operation Certificate","summary":"\u003cp\u003eBusiness app learning\u003c/p\u003e","title":"Certificates","type":"cert-learn"},{"content":"","date":"18 August 2025","externalUrl":null,"permalink":"/","section":"","summary":"","title":"","type":"page"},{"content":"A quick example of how to start using author taxonomies in your articles.\n","date":"18 August 2025","externalUrl":null,"permalink":"/authors/","section":"Authors Taxonomy Listing Example","summary":"\u003cp\u003eA quick example of how to start using author taxonomies in your articles.\u003c/p\u003e","title":"Authors Taxonomy Listing Example","type":"authors"},{"content":"","date":"18 August 2025","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":" Custom from staging to target Exporting large amounts of data Handling errors messages Creating logs in View excecution log Creating logs in View staging data Entity methods mapEntityToDataSource Custom from staging to target # When importing data into AX using data entities, sometimes there is no way to match data structure between data source (xml file, excel spredsheet, etc) and AX table. For instance:\nSingle line from a spredsheel source needs to be split amoung table header and table line in D365. Records creation is assisted by some class and cannot be directly created by DMF (Data Management Framework). From your data entity, create a new static field following the below template:\nKindly note this is a personal quick recommendation. Obviously this code can be improved.\npublic static container copyCustomStagingToTarget(DMFDefinitionGroupExecution _dmfDefinitionGroupExecution) { CustCustomerStaging staging; CustCustomerStaging stagingUpd; // Iterate through all records with have not been processed while select forupdate staging where staging.ExecutionId == _dmfDefinitionGroupExecution.ExecutionId \u0026amp;\u0026amp; (staging.TransferStatus == DMFTransferStatus::NotStarted || staging.TransferStatus == DMFTransferStatus::Validated) { try { ttsbegin; // Do your stuff staging.TransferStatus = DMFTransferStatus::Completed; staging.update(); ttscommit; } catch (Exception::Error) { error(\u0026#34;Something wrong has happened.\u0026#34;); } } ttsbegin; update_recordset staging setting TransferStatus = DMFTransferStatus::Error where staging.DefinitionGroup == _dmfDefinitionGroupExecution.DefinitionGroup \u0026amp;\u0026amp; staging.ExecutionId == _dmfDefinitionGroupExecution.ExecutionId \u0026amp;\u0026amp; (staging.TransferStatus == DMFTransferStatus::NotStarted || staging.TransferStatus == DMFTransferStatus::Validated); ttscommit; // Method returns a container containing the quantities of inserted and updated records. select count(RecId) from staging where staging.DefinitionGroup == _dmfDefinitionGroupExecution.DefinitionGroup \u0026amp;\u0026amp; staging.ExecutionId == _dmfDefinitionGroupExecution.ExecutionId \u0026amp;\u0026amp; staging.TransferStatus == DMFTransferStatus::Completed; return [staging.RecId, 0]; } In order to copyCustomStagingToTarget be executed, you need to set field Set-based processing as TRUE.\nData management workspace \u0026gt; Data entities button\nExporting large amounts of data # A list of few things to take into consideration before exporting a millions of records:\nDo your best to skip staging. This wont be possible if your entity has any computed field or container field. Data management will info about any other field type that is preventing your to skip staging. When exporting to a BYOD, make sure you have enough DTU assigned to your target Azure database. Handling errors messages # Basically there are two types of data entities errors messages: from View excecution log message and View staging data message. View excecution log displays messages in macro way e.g. \u0026ldquo;Could not connect into system X\u0026rdquo;, while View staging data displays messages to each distinct staging table record.\nCreating logs in View excecution log # Any message printed during DMF execcution (info, warning and error) will end up being displayed in View excecution log area.\nCreating logs in View staging data # To display custom log message to specifics staging records, use the following snippet:\nDMFStagingValidationLog::insertLogs(_dmfDefinitionGroupExecution.DefinitionGroup, _dmfDefinitionGroupExecution.ExecutionId, DMFEntity::find(_dmfDefinitionGroupExecution.Entity), staging.RecId, \u0026#34;\u0026#34;, \u0026#34;My custom log message\u0026#34;, DMFSourceTarget::Target); Entity methods # mapEntityToDataSource # Direction: Importing Purpose: When importing, use it to fill either datasource or entity fields based on entity fields. Example: In CustCustomerEntity.mapEntityToDataSource(), EmployeeResponsibleNumber field value is used to retrive worker record id and set it into MainContactWorker field from entity itself. ","date":"18 August 2025","externalUrl":null,"permalink":"/posts/2025-08-18-data-entity-tips/","section":"Posts","summary":"Comprehensive overview of integration patterns and capabilities between Dynamics 365 applications and Microsoft Dataverse for seamless data connectivity.","title":"Data Entity Tips","type":"posts"},{"content":"","date":"18 August 2025","externalUrl":null,"permalink":"/categories/dataverse/","section":"Categories","summary":"","title":"Dataverse","type":"categories"},{"content":"","date":"18 August 2025","externalUrl":null,"permalink":"/tags/dataverse/","section":"Tags","summary":"","title":"Dataverse","type":"tags"},{"content":"","date":"18 August 2025","externalUrl":null,"permalink":"/series/dev/","section":"Series","summary":"","title":"Dev","type":"series"},{"content":"Software engineer focused on Dynamics 365 Finance \u0026amp; Operations and the Microsoft business stack (Power Platform, Azure) with 10+ years delivering business-critical systems across APAC and the U.S. Built, deployed, and supported AX 2009/2012 (AX5/AX6) and D365FO, with strengths in Financial Services and Supply Chain. Based in Los Angeles, CA.\nD365FO (Dev/Tech) # X++, Chain of Command, extensions (forms/tables/classes), Data Entities (DMF), Electronic Reporting (ER), workflows \u0026amp; batch, SSRS, performance tuning (Trace Parser, LCS, query tuning), security \u0026amp; ALM (LCS, models/projects, ISV mgmt).\nIntegrations \u0026amp; Data # OData, DMF Recurring Integrations \u0026amp; Package API, Business Events → Azure (Functions/Service Bus/Event Grid), Dual-write; F\u0026amp;O ↔ Dataverse patterns.\nAnalytics # Synapse Link from F\u0026amp;O via Dataverse → ADLS/Fabric lakehouse, Power BI via connector/TDS endpoint; Parquet/Delta patterns\nAutomation \u0026amp; DevOps # Azure DevOps YAML CI/CD for D365FO builds/releases; RSAT in pipelines; scripted cross-environment DB copy/refresh; environment provisioning (LCS API/PowerShell); Key Vault; App Insights/Log Analytics.\nAP \u0026amp; Globalization # Invoice Capture (OCR → review/correct → post), Electronic Invoicing (RCS/Globalization Studio), ER configurations, tax calc service patterns.\nPower Platform # Model-driven \u0026amp; canvas apps, Dataverse schema, Power Automate (approvals/integrations), governance (DLP/CoE), Synapse Link → Fabric analytics hand-off.\nCopilot / AI # Extend F\u0026amp;O Copilot with client actions/plugins (surface X++ logic), Copilot Studio/low-code plugins, Dataverse-backed MCP actions.\nAzure # Functions, Logic Apps, Storage/ADLS Gen2, Data Factory/Synapse, Managed Identity, Key Vault, App Insights; ARM/Bicep; API design \u0026amp; Postman.\nTooling # Git/Azure Repos, branching/PRs, RSAT, SQL Server/SSMS, PowerShell, ER/Config designer, LCS admin.\nDetails Minimize the footprint of changes — lower merge pain across partners, upgrades, and hot-fixes. Change at the right layer — prefer highest applicable level: class → table → form data source field/method → form control. Use field groups — drive forms from field groups to reduce maintenance and improve upgrade resilience. Prioritize maintainability — design for clean upgrades and low technical debt. Service-oriented design — favor clear service boundaries for scalability and integrations. Code reuse — modular, testable components for faster delivery and easier QA. Best practices — apply D365 design patterns and coding standards consistently. ","date":"18 August 2025","externalUrl":null,"permalink":"/authors/max/","section":"Authors Taxonomy Listing Example","summary":"\u003cp\u003eSoftware engineer focused on Dynamics 365 Finance \u0026amp; Operations and the Microsoft business stack (Power Platform, Azure) with 10+ years delivering business-critical systems across APAC and the U.S. Built, deployed, and supported AX 2009/2012 (AX5/AX6) and D365FO, with strengths in Financial Services and Supply Chain. Based in Los Angeles, CA.\u003c/p\u003e","title":"Max Nguyen","type":"authors"},{"content":"","date":"18 August 2025","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"},{"content":"","date":"18 August 2025","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"1 January 2025","externalUrl":null,"permalink":"/tags/business-documents/","section":"Tags","summary":"","title":"Business-Documents","type":"tags"},{"content":"Dataverse and Dynamics 365 applications provide a rich set of integration options to address different business and technical scenarios. The different approaches allow for a flexible design to increase automation, improve processes optimization, reduce costs and increase security. On a very high level, the integration options can be grouped based on the application they can be used for:\nDynamics 365 for Finance and operations apps (e.g. DMF) Dynamics 365 for Customer Engagement / Dataverse (e.g. Plug-ins) Both (e.g. events) Another popular categorizations is based on the flow direction (In vs Out) or the decoupling pattern (synchronous vs asynchronous). The scope of this presentation are Dataverse and Dynamics 365 apps. We will explore the integration options in more detail in the following slides.\nimport DocusaurusSvg from \u0026lsquo;./images/FinOps-integration.drawio.svg\u0026rsquo;;\nEndpoint Apps Direction Latency Operations Batching available Volume Error handling Best Suited for OData FO In Sync CRUDA N Low/Medium No Low to medium volume, a real-time, system to system integration Web API DV In Sync Async CRUDA Y Low/High Extensible OData v4 RESTful endpoint for any programming language that supports HTTP requests and authentication using OAuth 2.0. Custom Service FO In/Out Sync CRUDA Y Low/Medium No Low to medium volume, a real-time, system to system integration Package API FO In/Out Async CRU Y High Yes High volume asynchronous import/ export Recurring Integration FO In/Out Async CRU Y High Yes High volume asynchronous import/ export Business Data Events FO DV Out Async R N High Yes High volume status event notifications to subscribers, workflows, and Out integrations Synapse Link FO DV Out Async R Y High Log High volume data integration for Analytics Virtual table FO DV In/Out Sync CRUD N N/A No Integration of data residing in external systems without data replication. SQL/TDS endpoint DV Out Sync R N Low/Medium No Read only access, respects Dataverse security. Should be used for analytics with PBI. Plug-in DV Out Sync Asyncronous CRUD Y Low/Medium Medium/High Yes Event handler that executes in response to a specific event raised during processing of a Dataverse data operation. When running in sync mode, it executes as part of database transaction. Webhook DV Out Syncronous \u0026amp; Async CUD N Low/Medium Yes Sends POST requests with JSON payload to an external service. Name Type Description name string Name of the resource path string Path to the resource Factors to consider when choosing a pattern # Your Title with some Markdown syntax!\nSynchronous: Integration is triggered with an immediate response required. Asynchronous: Integration is triggered with a delayed response required. Near Real-Time: Minimal latency (less than 1 min) is allowed between trigger and transmission. Scheduled Batch: Integration will occur on a scheduled basis with a pre-determined recurrence.\nblock-beta id1 space id2 space id3 id1(\"Near realtime\") id2(\"Async\") id3(\"Sync\") style id1 fill:#b4c6f4,stroke:#333,stroke-width:4px;fontSize:15 style id2 fill:#1392b4,stroke:#333,stroke-width:4px;fontSize:15 style id3 fill:#ffb900,stroke:#333,stroke-width:4px;fontSize:15 graph TD; A--\u003eB; A--\u003eC; B--\u003eD; C--\u003eD; mindmap root((FinOps)) Origins Long history ::icon(fa fa-book) Popularisation British popular psychology author Tony Buzan Research On effectivenessand features On Automatic creation Uses Creative techniques Strategic planning Argument mapping Tools Pen and paper Mermaid OData - Data Entity # Odata is an open source protocol to serve and consume interoperable data using common query operations with RESTful APIs. D365FO exposes all its public data entities as OData endpoints which can then be accessed using following URI format :\nhttps://\u0026lt;d365fourl\u0026gt;/data/\u0026lt;dataentity\u0026gt;\nOData provides a quick, codeless data integration method with many data query options and CRUD operations. You can use its open standard query string language to query your data and do data manipulations using standard Odata CRUD commands, all using just simple and open standard REST calls. If you would like to call a custom method within your data entity, this is also supported by exposing custom actions with your OData entities, so the commands are also extendable to a certain point.\nYou can definitely use OData for your own integration projects, but there are also many OData-Ready software available today, and these can directly be connected to D365FO Odata endpoints. Microsoft Power BI also supports OData connection and you can connect Power BI using OData if you feel lazy with setting up faster data integration possibilities methods, like Entity Store and Data Lake integrations.\nAlthough it looks like the optimum way of data integration with D365FO, there are some drawbacks involved. OData queries and data operations are executed really slow and data reading may take ages if you try to retrieve a large entity. OData is mainly designed for simple CRUD operations and simpler queries. If you need to execute complex queries, like complex joins and lookups for example, you may start to hit its limits.. Although you can add some custom actions to extend available OData commands with your own ones, complex operations and business logic unfortunately do not go very well with it. It may be required to place this complex logic on consumer application if you decided to integrate it using OData.\nThere is also a rather new feature of D365FO to throttle calls to OData endpoints by giving priorities to them, to avoid system lockdowns that might be caused by frequent OData calls. You can read more about it from the link below :\nhttps://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/data-entities/priority-based-throttling\nRemember you can also use OData endpoints in Azure API manager, just like custom services which I will mention soon.\nADVANTAGES Open and standard data integration protocol with many data inquiry and CRUD commands out of the box Support for extending with custom data actions OData-ready software can directly be integrated using existing endpoints DISADVANTAGES Slow… Not suitable to be used with complex business logic and queries More info: https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/data-entities/odata\n","date":"1 January 2025","externalUrl":null,"permalink":"/posts/d365-and-dataverse-integration-overview/","section":"Posts","summary":"Comprehensive overview of integration patterns and capabilities between Dynamics 365 applications and Microsoft Dataverse for seamless data connectivity.","title":"D365 and Dataverse - Integration Overview","type":"posts"},{"content":"","date":"1 January 2025","externalUrl":null,"permalink":"/tags/data-model/","section":"Tags","summary":"","title":"Data-Model","type":"tags"},{"content":"","date":"1 January 2025","externalUrl":null,"permalink":"/categories/development/","section":"Categories","summary":"","title":"Development","type":"categories"},{"content":" Document Reporting Services # Organizations have a lot of data. When an organization grows, its ability to provide context for all that data becomes increasingly crucial. Reports can organize data in a meaningful way. finance and operations apps include reporting tools to help you create reports for your organizations, SQL Server Reporting Services (SSRS), Microsoft Power BI, and Microsoft Excel reports. You can use these reporting tools to visualize a data set in many ways, including as a tabular layout with collapsible tables and by using dashboards. Throughout this module, you will build a foundation to design, create, and modify reports.\nThis article describes the integrated reporting solution that are available. This solution simplifies service administration, increases developer productivity, and provides an enhanced report viewing experience for users.\nDocument Reporting Services # Document Reporting Services are based on Microsoft SQL Server Reporting Services (SSRS). In the current version of the application, these services are hosted in the Microsoft Azure Compute service. If you\u0026rsquo;re developing in a one-box environment, the services also run locally in the Azure Compute Emulator.\nService deployment – Local vs. cloud # In a one-box environment, developers can create, modify, and preview reports, from end to end, by using Microsoft Visual Studio. A separate process isn\u0026rsquo;t required in order to add reports to the application\u0026rsquo;s metadata store. Changes to reports are packaged together with other solution updates and then deployed to the cloud after development is completed in the local environment.\nViewing reports # The enhanced report viewing experience that provides for end users is the same as the report preview experience in Microsoft Visual Studio. You no longer use a separate design preview in Visual Studio. Instead, just press Ctrl+F5 to build and preview the report in an Internet Explorer window. The report appears exactly as it would appear in the client. Even the user\u0026rsquo;s parameter experience is the same. The following image shows an example of a report preview that is opened from Visual Studio.\nService administration prerequisites # The following table compares the service administration prerequisites for Microsoft Dynamics AX 2012 and the current version of the application.\nAX 2012 The current version of the application A report development environment has the following prerequisites:* SSRS must be installed.* SSRS must be configured by using Reporting Services Configuration Manager.* SSRS extensions for the application must be installed. Reporting services run in the Azure compute emulator, together with the application server. Therefore, there are no SSRS service administration prerequisites. After reports have been deployed to the local reporting services, they can be accessed from the client. Developing application reports # The process for developing a report in the current version is easier than it is in AX 2012, because you can create and validate a reporting solution entirely in Visual Studio. The following table describes how the application simplifies the basic procedure for adding an automatic design report that is based on a query.\nAX 2012 The current version of the application 1. In the application, create a query in the Application Object Tree (AOT). 1. In Visual Studio, create a reporting project and the query. 2. In Visual Studio, create a reporting project, and add the query to it. 2. Edit the report in Visual Studio. 3. Edit the report in the Visual Studio model editor. 3. In Visual Studio, add the report to a menu item, and set the menu item as a startup object. 4. Preview the report design in Visual Studio by using the model editor toolbar. 4. Use the AOT to deploy the report to the report server. 5. Use Visual Studio to add the report to the AOT. 5. Press Ctrl+F5 to verify the report in the application. NOTE: There is no longer a separate preview of the report design from the model editor. 6. Use the AOT in the client to create a menu item for the report, and add the menu item to a menu. 6. When the whole solution is completed, deploy it to the cloud in one package. 7. Use the AOT to deploy the report to the report server. 8. Verify the report in the client. ","date":"1 January 2025","externalUrl":null,"permalink":"/posts/business-doc/","section":"Posts","summary":"Complete guide to SQL Server Reporting Services (SSRS) for creating and managing business documents and reports in Dynamics 365 Finance Operations.","title":"Document Reporting Services (SSRS)","type":"posts"},{"content":"Provides tightly coupled, bidirectional integration between Dataverse and Finance and Operations apps.\nDirection Outbound/Inbound Tightly-coupled, bi-directional integration for master and reference data. Latency\nLatency Syncronous/Asynchronous Data replication across Dataverse and finance and operation apps for Create and Update events. Also available are play, pause, and catchup modes to support the system during online and offline/asynchronous modes.\nVolumes Low volume Dual-write initial sync can be a tool leveraged with data migration (see guidance matrix.) Dual-write live sync works in the context of one transaction and with high numbers of cascading records (e.g., customers with multiple related addresses) performance testing is recommended.\n","date":"1 January 2025","externalUrl":null,"permalink":"/posts/dualwrite/","section":"Posts","summary":"Learn about dual write functionality in Dynamics 365 Finance and Operations for bidirectional data integration between Dataverse and F\u0026amp;O apps. Covers synchronous/asynchronous modes and volume considerations.","title":"Dual write","type":"posts"},{"content":"","date":"1 January 2025","externalUrl":null,"permalink":"/categories/dualwrite/","section":"Categories","summary":"","title":"Dualwrite","type":"categories"},{"content":"","date":"1 January 2025","externalUrl":null,"permalink":"/categories/reporting/","section":"Categories","summary":"","title":"Reporting","type":"categories"},{"content":"","date":"1 January 2025","externalUrl":null,"permalink":"/tags/reporting/","section":"Tags","summary":"","title":"Reporting","type":"tags"},{"content":"","date":"1 January 2025","externalUrl":null,"permalink":"/tags/ssrs/","section":"Tags","summary":"","title":"Ssrs","type":"tags"},{"content":"","date":"1 January 2025","externalUrl":null,"permalink":"/tags/visual-studio/","section":"Tags","summary":"","title":"Visual-Studio","type":"tags"},{"content":"","date":"11 May 2024","externalUrl":null,"permalink":"/categories/cheatsheet/","section":"Categories","summary":"","title":"Cheatsheet","type":"categories"},{"content":"","date":"11 May 2024","externalUrl":null,"permalink":"/tags/cheatsheet/","section":"Tags","summary":"","title":"Cheatsheet","type":"tags"},{"content":"","date":"11 May 2024","externalUrl":null,"permalink":"/authors/kome/","section":"Authors Taxonomy Listing Example","summary":"","title":"Kome Hoang","type":"authors"},{"content":"","date":"11 May 2024","externalUrl":null,"permalink":"/tags/sql/","section":"Tags","summary":"","title":"SQL","type":"tags"},{"content":" SQL Datatype # SQL Datatype Description String CHAR(size) A fixed-length string containing numbers, letters or special characters. Length may vary from 0-255. VARCHAR(size) Variable-length string where the length may vary from 0-65535. Similar to CHAR. TEXT(size) Can contain a string of size up to 65536 bytes. TINY TEXT Can contain a string of up to 255 characters. MEDIUM TEXT Can contain a string of up to 16777215 characters. LONG TEXT Can contain a string of up to 4294967295 characters. BINARY(size) Similar to CHAR() but stores binary byte strings. VARBINARY(size) Similar to VARCHAR() but stores binary byte strings. BLOB(size) Holds blobs up to 65536 bytes. TINYBLOB It is used for Binary Large Objects and has a maximum size of 255bytes. MEDIUMBLOB Holds blobs up to 16777215 bytes. LONGBLOB Holds blobs up to 4294967295 bytes. Numberic BIT(size) Bit-value type, where size varies from 1 to 64. Default value: 1 INT(size) Integer with values in the signed range of -2147483648 to 2147483647 and values in the unsigned range of 0 to 4294967295. TINYINT(size) Integer with values in the signed range of -128 to 127 and values in the unsigned range of 0 to 255. SMALLINT(size) Integer with values in the signed range of -32768 to 32767 and values in the unsigned range of 0 to 65535. MEDIUMINT(size) Integer with values in the signed range of -8388608 to 8388607 and values in the unsigned range of 0 to 16777215. BIGINT(size) Integer with values in the signed range of 9223372036854775808 to 9223372036854775807 and values in the unsigned range of 0 to 18446744073709551615. BOOLEAN Boolean values where 0 is considered as FALSE and non-zero values are considered TRUE. FLOAT (p) The floating-point number is stored. If the precision parameter is set between 0 to 24, the type is FLOAT() else if it lies between 25 to 53, the datatype is DOUBLE() Date \u0026amp; Time DATE Stores date in YYYY-MM-DD format with dates in the range of \u0026lsquo;1000-01-01\u0026rsquo; to \u0026lsquo;9999-12-31\u0026rsquo;. TIME(fsp) Stores time in hh:mm:ss format with times in the range of \u0026lsquo;-838:59:59\u0026rsquo; to \u0026lsquo;838:59:59\u0026rsquo;. DATETIME(fsp) Stores a combination of date and time in YYYY-MM-DD and hh:mm:ss format, with values in the range of \u0026lsquo;1000-01-01 00:00:00\u0026rsquo; to \u0026lsquo;9999-12-31 23:59:59\u0026rsquo;. TIMESTAMP(fsp) It stores values relative to the UnixEpoch, basically a Unix Timestamp. Values lie in the range of \u0026lsquo;1970-01-01 00:00:01\u0026rsquo; UTC to \u0026lsquo;2038-01-09 03:14:07\u0026rsquo; UTC. YEAR Stores values of years as a 4digit number format, with a range lying between -1901 to 2155. SQL Command # mindmap root[SQL Command] id[Data Definition\u0026lt;br/\u0026gt; Language] CREATE DROP ALTER TRUNCATE id[Data Manipulation Language] INSERT UPDATE DELETE [Transaction Control Language] COMMIT ROLLBACK SAVEPOINT [Data Query Language] SELECT [Data Control Language] Grant Revoke SQL Constraints # * `NOT NULL`: Specifies that this column cannot store a NULL value. CREATE TABLE student ( id INT(8) NOT NULL, name VARCHAR(30) NOT NULL, address VARCHAR(50) ); * `UNIQUE`: Specifies that this column can have only Unique values, i.e the values cannot be repeated in the column. CREATE TABLE Student ( ID int(8) UNIQUE, NAME varchar(10) NOT NULL, ADDRESS varchar(20) ); ","date":"11 May 2024","externalUrl":null,"permalink":"/posts/sql-cheat-sheet/","section":"Posts","summary":"Complete SQL reference guide covering data types, commands, constraints, and syntax. Essential cheat sheet for database development and management.","title":"SQL cheatsheet","type":"posts"},{"content":"","date":"11 May 2024","externalUrl":null,"permalink":"/tags/truncate/","section":"Tags","summary":"","title":"Truncate","type":"tags"},{"content":" We can use the tableTruncate method from SqlDataDictionary to truncate a table in FinOps, useful for a huge SQL table.\npublic static void main(Args _args) { DictTable dictTable = new DictTable(tablenum(KA_TBYTDStaging)); if (dictTable \u0026amp;\u0026amp; dictTable.enabled()) { str sqlTableName = dictTable.name(DbBackend::Sql); SqlDataDictionary sqlTable = new SqlDataDictionary(); if (sqlTable.tableExist(sqlTableName)) { new SqlDataDictionaryPermission(methodstr(SqlDataDictionary, tableTruncate)).assert(); sqlTable.tableTruncate(tablenum(KA_TBYTDStaging), false); CodeAccessPermission::revertAssert(); } } } ","date":"11 May 2024","externalUrl":null,"permalink":"/posts/truncate-a-table-xpp/","section":"Posts","summary":"Learn how to truncate large SQL tables efficiently in Dynamics 365 Finance and Operations using X++ SqlDataDictionary class. Includes proper permission handling and security considerations.","title":"Truncate a table using X++","type":"posts"},{"content":"","date":"11 May 2024","externalUrl":null,"permalink":"/categories/xpp/","section":"Categories","summary":"","title":"Xpp","type":"categories"},{"content":"","date":"11 May 2024","externalUrl":null,"permalink":"/tags/xpp/","section":"Tags","summary":"","title":"Xpp","type":"tags"},{"content":"","date":"6 May 2024","externalUrl":null,"permalink":"/books/","section":"","summary":"","title":"","type":"books"},{"content":"","date":"6 May 2024","externalUrl":null,"permalink":"/tags/fiction/","section":"Tags","summary":"","title":"Fiction","type":"tags"},{"content":"","date":"6 May 2024","externalUrl":null,"permalink":"/tags/historical/","section":"Tags","summary":"","title":"Historical","type":"tags"},{"content":"In the vaulted Gothic towers of Notre-Dame Cathedral lives Quasimodo, the hunchbacked bellringer. Mocked and shunned for his appearance, he is pitied only by Esmerelda, a beautiful gypsy dancer to whom he becomes completely devoted. Esmerelda, however, has also attracted the attention of the sinister archdeacon Claude Frollo, and when she rejects his lecherous approaches, Frollo hatches a plot to destroy her, that only Quasimodo can prevent. Victor Hugo\u0026rsquo;s sensational, evocative novel brings life to the medieval Paris he loved, and mourns its passing in one of the greatest historical romances of the nineteenth century.\n","date":"6 May 2024","externalUrl":null,"permalink":"/books/the-hunchback-of-notre-dame/","section":"","summary":"\u003cp\u003eIn the vaulted Gothic towers of \u003cstrong\u003eNotre-Dame Cathedral\u003c/strong\u003e lives Quasimodo, the hunchbacked bellringer. Mocked and shunned for his appearance, he is pitied only by Esmerelda, a beautiful gypsy dancer to whom he becomes completely devoted. Esmerelda, however, has also attracted the attention of the sinister archdeacon Claude Frollo, and when she rejects his lecherous approaches, Frollo hatches a plot to destroy her, that only Quasimodo can prevent. Victor Hugo\u0026rsquo;s sensational, evocative novel brings life to the medieval Paris he loved, and mourns its passing in one of the greatest historical romances of the nineteenth century.\u003c/p\u003e","title":"The Hunchback of Notre Dame","type":"books"},{"content":"","date":"5 May 2024","externalUrl":null,"permalink":"/categories/d365fo.tools/","section":"Categories","summary":"","title":"D365fo.tools","type":"categories"},{"content":"","date":"5 May 2024","externalUrl":null,"permalink":"/tags/sqlpackage/","section":"Tags","summary":"","title":"SqlPackage","type":"tags"},{"content":"If you are using d365fo.tools to Import a bacpac file into a Tier1 environment and you got an error\nError output was Error importing database:An error occurred during deployment plan generation. Deployment cannot continue. The Element or Annotation class SqlStatistic does not contain the Property class AutoDrop. The d365fo.tools use Invoke-D365InstallSqlPackage to install SqlPackage, but its version is not up to date, compare to the bacpac files generated from LCS database export. To solve the issue, we need to downlaod the latest version as a zip file, unblock, unzip and replace files in the SqlPackage folder C:\\Temp\\d365fo.tools\\SqlPackage with the new version.\n","date":"5 May 2024","externalUrl":null,"permalink":"/posts/import-a-bacpac-file-into-a-tier1-environment/","section":"Posts","summary":"Troubleshooting guide for resolving SqlPackage SqlStatistic AutoDrop property errors when importing BACPAC files in D365 Finance Operations using d365fo.tools.","title":"SqlPackage - The Element or Annotation class SqlStatistic does not contain the Property class AutoDrop","type":"posts"},{"content":"","date":"5 May 2024","externalUrl":null,"permalink":"/tags/troubleshoot/","section":"Tags","summary":"","title":"Troubleshoot","type":"tags"},{"content":"","date":"2 May 2024","externalUrl":null,"permalink":"/tags/self-update/","section":"Tags","summary":"","title":"Self-Update","type":"tags"},{"content":" Login to LCS – and select the F\u0026amp;O environment that is enabled for Synapse Link Validate the platform version of the environment under Environment version information as shown bellow. If the platform version of your environment is lower than corresponding rows bellow – for example above environment platform version is 7.0.7036.113 and required version is 7.0.7036.133 or Higher. The above environment must be updated to the latest quality update. Application (Platform) Required platform version PQU schedule 10.0.36 (PU 60) 7.0.7036.133 or Higher 10.0.36 PQU-3 (January 22, 2023 to February 25, 2024) 10.0.37 (PU 61) 7.0.7068.109 or Higher 10.0.37 PQU-2 January 8, 2024 to February 11, 2024 10.0.38 (PU 62) 7.0.7120.59 or Higher There are two ways to update the F\u0026amp;O environment with quality update. Self-update using the latest quality update and second wait for the PQU (Proactive quality update) to be pushed to your environment by Microsoft\nAbove table list out the PQU schedule when your environment will receive the PQU, based on the PQU schedule Release schedule for PQU\nCustomer can also self-update the environment by self-applying the latest quality update instead of waiting for PQU, follow the steps bellow to self-update to latest quality update Reference documentation\nIn the LCS environment page, go to Available updates section and click on view update. Click on save package. Click on Save package, on the Save package to asset library dialog opens, give a name and click on Save package. This action will save the latest cumulative version to your LCS project Asset library. Follow the steps to apply update to cloud environment Apply updates to cloud environments - Finance \u0026amp; Operations | Dynamics 365 | Microsoft Learn ","date":"2 May 2024","externalUrl":null,"permalink":"/posts/self-update-to-latest-quality-update/","section":"Posts","summary":"Step-by-step guide for performing self-updates to the latest quality updates in Dynamics 365 Finance Operations using LCS environment management.","title":"Self-Update to latest quality update","type":"posts"},{"content":"","date":"2 May 2024","externalUrl":null,"permalink":"/categories/update/","section":"Categories","summary":"","title":"Update","type":"categories"},{"content":"The French Revolution is an historical event unlike any other. It is more than just a topic of intellectual interest: it has become part of a moral and political heritage. But after two centuries, this central event in French history has usually been thought of in much the same terms as it was by its contemporaries. There have been many accounts of the French Revolution, and though their opinions differ, they have often been commemorative or anniversary interpretations of the original event. The dividing line of revolutionary historiography, in intellectual terms, is therefore not between the right and the left, but between commemorative and conceptual history, as exemplified respectively in the works of Michelet and Tocquevifle. In this book, François Furet analyses how an event like the French Revolution can be conceptualised, and identifies the radically new changes the Revolution produced as well as the continuity it provided, albeit under the appearance of change. This question has become a riddle for the European left, answered neither by Marx nor by the theorists of our own century. In his analysis of the tragic relevance of the Revolution, Furet both refers to contemporary experience and discusses various elements in the work of Alexis de Tocclueville and that of Augustin Cochin, which has never been systematically applied by historians of the Revolution. Furet\u0026rsquo;s book is based on the complementary ideas of these two writers in an attempt to cut through the apparent and misleading clarity of various contradictory views of the Revolution, and to help decipher some of the enigmatic problems of revolutionary ideology. It will be of value to historians of modern Europe and their students; to political, social and economic historians; to sociologists; and to students of political thought.\n","date":"12 January 2024","externalUrl":null,"permalink":"/books/interpreting-the-french-revolution/","section":"","summary":"\u003cp\u003eThe French Revolution is an historical event \u003cstrong\u003eunlike any other\u003c/strong\u003e. It is more than just a topic of intellectual interest: it has become part of a moral and political heritage. But after two centuries, this central event in French history has usually been thought of in much the same terms as it was by its contemporaries. There have been many accounts of the French Revolution, and though their opinions differ, they have often been commemorative or anniversary interpretations of the original event. The dividing line of revolutionary historiography, in intellectual terms, is therefore not between the right and the left, but between commemorative and conceptual history, as exemplified respectively in the works of Michelet and Tocquevifle. In this book, François Furet analyses how an event like the French Revolution can be conceptualised, and identifies the radically new changes the Revolution produced as well as the continuity it provided, albeit under the appearance of change. This question has become a riddle for the European left, answered neither by Marx nor by the theorists of our own century. In his analysis of the tragic relevance of the Revolution, Furet both refers to contemporary experience and discusses various elements in the work of Alexis de Tocclueville and that of Augustin Cochin, which has never been systematically applied by historians of the Revolution. Furet\u0026rsquo;s book is based on the complementary ideas of these two writers in an attempt to cut through the apparent and misleading clarity of various contradictory views of the Revolution, and to help decipher some of the enigmatic problems of revolutionary ideology. It will be of value to historians of modern Europe and their students; to political, social and economic historians; to sociologists; and to students of political thought.\u003c/p\u003e","title":"Interpreting the French Revolution","type":"books"},{"content":"","date":"12 January 2024","externalUrl":null,"permalink":"/tags/nonfiction/","section":"Tags","summary":"","title":"Nonfiction","type":"tags"},{"content":"","date":"12 January 2024","externalUrl":null,"permalink":"/tags/revolution/","section":"Tags","summary":"","title":"Revolution","type":"tags"},{"content":"","date":"7 January 2024","externalUrl":null,"permalink":"/tags/error/","section":"Tags","summary":"","title":"Error","type":"tags"},{"content":"","date":"7 January 2024","externalUrl":null,"permalink":"/tags/throw/","section":"Tags","summary":"","title":"Throw","type":"tags"},{"content":" References # X++ exception handling How to # Prerequisite # For the purpose of testing, I had this data set of CustGroup. This can also be found on Legal Entity USRT of demo data comes with a new environment of Dynamics 365 Finance.\nCustomer group Description 10 Wholesale customers 20 Major customers 30 Retail customers 40 Internet customers 50 Employees 80 Wholesale customers 90 Wholesale customers I added two new buttons on CustGroup form:\nBulk update Desc: This button will loop through each and all records in the above table and update the Description to Description + + Updated except one containing \u0026ldquo;Employee\u0026rdquo;. They will become like below. Customer group Description 10 Wholesale customers + Updated 20 Major customers + Updated 30 Retail customers + Updated 40 Internet customers + Updated 50 Employees 80 Wholesale customers + Updated 90 Wholesale customers + Updated Reverse Bulk update Desc: This button will update all Description back to its original by removing the word + Updated. Let\u0026rsquo;s do it # When we don\u0026rsquo;t use throw # In the extension class named CustGroup_ButtonHandlers, I put these codes which will handle the event of clicking those two buttons.\nThis type of FormControlEventHandler will only be needed when you are extending a standard form. For a totally custom form, you can add a Clicked() method method for any buttons on the form. internal final class CustGroup_ButtonHandlers { [FormControlEventHandler(formControlStr(CustGroup, BulkUpdateDesc), FormControlEventType::Clicked)] public static void BulkUpdateDesc_OnClicked(FormControl sender, FormControlEventArgs e) { FormDataSource custGroupDS = sender.formRun().dataSource(formDataSourceStr(CustGroup, CustGroup)); ttsbegin; for( CustGroup custGroup = custGroupDS.getFirst() ? custGroupDS.getFirst() : custGroupDS.cursor() ; custGroup ; custGroup = custGroupDS.getNext() ) { if(strContains(custGroup.Name, \u0026#34;Employees\u0026#34;)) { // Show an error here but do not stop the loop error(\u0026#34;This group\u0026#39;s name contains \\\u0026#34;Employees\\\u0026#34;. Operation skipped but continue until the end of loop.\u0026#34;); // Continue the loop by (1) skipping below code and (2) getting the next record from the DS continue; } custGroup.Name = custGroup.Name + \u0026#34; + Updated\u0026#34;; custGroup.doUpdate(); } ttscommit; custGroupDS.research(true); } [FormControlEventHandler(formControlStr(CustGroup, BulkRevUpdateDesc), FormControlEventType::Clicked)] public static void BulkRevUpdateDesc_OnClicked(FormControl sender, FormControlEventArgs e) { FormDataSource custGroupDS = sender.formRun().dataSource(formDataSourceStr(CustGroup, CustGroup)); ttsbegin; for( CustGroup custGroup = custGroupDS.getFirst() ? custGroupDS.getFirst() : custGroupDS.cursor() ; custGroup ; custGroup = custGroupDS.getNext() ) { custGroup.Name = strReplace(custGroup.Name, \u0026#34; + Updated\u0026#34;, \u0026#34;\u0026#34;); custGroup.doUpdate(); } ttscommit; custGroupDS.research(true); } } Notice the part\nif(strContains(custGroup.Name, \u0026#34;Employees\u0026#34;)) { // Show an error here but do not stop the loop error(\u0026#34;This group\u0026#39;s name contains \\\u0026#34;Employees\\\u0026#34;. Operation skipped but continue until the end of loop.\u0026#34;); // Continue the loop by (1) skipping below code and (2) getting the next record from the DS continue; } This part will do the job of updating the Description of the CustGroup record. Yet, I am calling error to display a message (which is speicifed as an \u0026ldquo;error\u0026rdquo;) to users.\nNow, let\u0026rsquo;s click the Bulk update Desc button. You will see the error message and the updated description. We can tell that the loop was not stopped.\nWhen we use throw # Let\u0026rsquo;s change the part mentioned above to this one. Notice that we now will use throw before error.\nif(strContains(custGroup.Name, \u0026#34;Employees\u0026#34;)) { // Show an error here and break the loop throw error(\u0026#34;This group\u0026#39;s name contains \\\u0026#34;Employees\\\u0026#34;. Operation broken.\u0026#34;); // Below code line is actually never called because the throw will stop the code execution immediately continue; } Clicking Bulk update Desc will result in this.\nYet, upon refreshing the form, we will see that no transaction within the same tts level was actually committed.\nNow if we bring the tts inside the loop.\n{ if(strContains(custGroup.Name, \u0026#34;Employees\u0026#34;)) { // Show an error here and break the loop throw error(\u0026#34;This group\u0026#39;s name contains \\\u0026#34;Employees\\\u0026#34;. Operation broken.\u0026#34;); // Below code line is actually never called because the throw will stop the code execution immediately continue; } ttsbegin; custGroup.Name = custGroup.Name + \u0026#34; + Updated\u0026#34;; custGroup.doUpdate(); ttscommit; } Upop refreshing the form, we will see what transaction were commited and what part of the loop was broken.\nSo, that\u0026rsquo;s how throw works in X++.\n","date":"7 January 2024","externalUrl":null,"permalink":"/posts/throw-behaviour-in-xpp/","section":"Posts","summary":"Master X++ exception handling with practical examples showing the difference between error() and throw error() statements. Learn how throw affects transaction control and loop execution in Dynamics 365.","title":"Throw behaviour in Xpp","type":"posts"},{"content":"","date":"7 January 2024","externalUrl":null,"permalink":"/categories/x++/","section":"Categories","summary":"","title":"X++","type":"categories"},{"content":"","date":"2 January 2024","externalUrl":null,"permalink":"/tags/coc-extension/","section":"Tags","summary":"","title":"Coc-Extension","type":"tags"},{"content":"","date":"2 January 2024","externalUrl":null,"permalink":"/tags/event-handlers/","section":"Tags","summary":"","title":"Event-Handlers","type":"tags"},{"content":"","date":"2 January 2024","externalUrl":null,"permalink":"/categories/finops/","section":"Categories","summary":"","title":"FinOps","type":"categories"},{"content":"","date":"2 January 2024","externalUrl":null,"permalink":"/tags/kusto/","section":"Tags","summary":"","title":"Kusto","type":"tags"},{"content":" References # Use pre-processed RDP classes Microsoft Dynamics AX 2012 White Paper: Report Programming Model How to # Pre-process RDP has become very commonplace these days, especially to ones who work with SSRS reports on Dynamics 365 FO a lot.\nRecently, I faced an issue when no data was inserted into or modififed in my temporary table during run-time despite the fact that RDP class (and its related ones within the same framework) was executed successfully. Even debugging did not show me what was going wrong. There was simply no SQL statements in the trace that I captured.\nTurned out that I will need to take ownership of the temp table instance before manipulating any data in it.\nMy code used to be (when it did not work):\ninternal final class CSG_PostedServiveOrderWithoutInvDP extends SrsReportDataProviderPreProcessTempDB { CSG_PostedServiveOrderWithoutInvTmp tmpTable; [SRSReportDataSetAttribute(tableStr(CSG_PostedServiveOrderWithoutInvTmp))] public CSG_PostedServiveOrderWithoutInvTmp getTmpTable() { select tmpTable; return tmpTable; } public void processReport() { ttsbegin; this.populateTmpTable(); ttscommit; } private void populateTmpTable() { // Insert data to tmp table here. } } I would need to call out to SrsReportDataProviderPreProcessTempDB.takeOwnershipOfTempTable() to have it work.\nMy code then became:\ninternal final class CSG_PostedServiveOrderWithoutInvDP extends SrsReportDataProviderPreProcessTempDB { CSG_PostedServiveOrderWithoutInvTmp tmpTable; [SRSReportDataSetAttribute(tableStr(CSG_PostedServiveOrderWithoutInvTmp))] public CSG_PostedServiveOrderWithoutInvTmp getTmpTable() { select tmpTable; return tmpTable; } public void processReport() { ttsbegin; // Take ownership of each and all tmpTable before using them in the RDP this.takeOwnershipTmp(); // Data manipulation then can be conducted without an issue this.populateTmpTable(); ttscommit; } private void takeOwnershipTmp() { // Take ownership of the current instance of tmpTable here this.takeOwnershipOfTempTable(tmpTable); } private void populateTmpTable() { // Insert data to tmp table here. } } The code behind the SrsReportDataProviderPreProcessTempDB.takeOwnershipOfTempTable() is as below (for ones who might want to implement their own framework):\n/// \u0026lt;summary\u0026gt; /// Takes ownership of the given temp table. /// \u0026lt;/summary\u0026gt; /// \u0026lt;param name=\u0026#34;_tempDbTable\u0026#34;\u0026gt; /// The table to take ownership of. /// \u0026lt;/param\u0026gt; public void takeOwnershipOfTempTable(Common _tempDbTable) { DictTable dictTable; TableId tableId; #SRSFramework if (!this.parmUseDefaultTransactionOnly()) { _tempDbTable.setConnection(this.parmUserConnection()); } tableId = _tempDbTable.TableId; dictTable = new DictTable(tableId); if(!dictTable) { throw error(strFmt(\u0026#34;@SYS4007193\u0026#34;, tableId2name(tableId))); } new ExecutePermission().assert(); dictTable.callObject(#TempDBMethodName_TakeOwnership, _tempDbTable, true); CodeAccessPermission::revertAssert(); } ","date":"2 January 2024","externalUrl":null,"permalink":"/posts/nodataintmptableforpreprocessreport/","section":"Posts","summary":"Troubleshoot SSRS report preprocessing issues in Dynamics 365 Finance and Operations. Learn why takeOwnershipOfTempTable() is required for temporary table manipulation in RDP classes.","title":"No data is inserted/modified in temporary table when processing an SRS report using Pre-process","type":"posts"},{"content":"","date":"2 January 2024","externalUrl":null,"permalink":"/tags/parameters/","section":"Tags","summary":"","title":"Parameters","type":"tags"},{"content":"","date":"2 January 2024","externalUrl":null,"permalink":"/categories/power-bi/","section":"Categories","summary":"","title":"Power BI","type":"categories"},{"content":"","date":"2 January 2024","externalUrl":null,"permalink":"/tags/power-bi/","section":"Tags","summary":"","title":"Power BI","type":"tags"},{"content":"","date":"2 January 2024","externalUrl":null,"permalink":"/tags/pre-process/","section":"Tags","summary":"","title":"Pre-Process","type":"tags"},{"content":"","date":"2 January 2024","externalUrl":null,"permalink":"/tags/srs/","section":"Tags","summary":"","title":"SRS","type":"tags"},{"content":" References # Use Azure Data Explorer data in Power BI .create function command Azure Data Explorer Kusto Query Language (KQL) How to # Let\u0026rsquo;s create demo data for testing # For the purpose of testing and demonstrating, I will create a new table in my testing ADX cluster (everyone can create their own free cluster following Create a free Azure Data Explorer cluster). Let\u0026rsquo;s call it UserAsset.\nThe table will have two fields:\nUser - type string NumberOfLaptop - type integer The script is as below.\n.create table UserAsset ( User: string , NumberOfLaptop: int ) Then, we will put some demo data into the table.\n.ingest inline into table UserAsset \u0026lt;| Max,2 Kome,1 We will have the table and its data like below.\nUserAsset | project User , NumberOfLaptop , IngestedOn = ingestion_time() | order by NumberOfLaptop desc Get data from Azure Data Explorer (ADX) to Power BI (PBI) # Simple enough, we then can use the very Kusto query (KQ) in PBI Desktop to get such data.\nWe can copy the query here.\nUpon clicking OK and transform the data, we will have the data available. Notice that whole KQ will be put as plain text in the source.\nUsing Kusto function to simplify the process # Now, we can create a function to get data from ADX to PBI Desktop.\n.create function GetDataForPBI() { UserAsset | project User , NumberOfLaptop , IngestedOn = ingestion_time() | order by NumberOfLaptop desc } Then, we can simply call the function from PBI to get the data instead of calling the whole query.\nEnhacing data by altering the function # We can even passing parameters to the functions to alter the data. In this case, let\u0026rsquo;s try adding some texts to User. My function would become as below:\nTaking a boolean input _addText, it is defaulted to false If _addText is true, add some text to User Else, leave User as it is Notice that we will need to use create-or-alter because the function is existing already.\n.create-or-alter function GetDataForPBI(_addText:bool = false) { UserAsset | extend User = iff( _addText , strcat( User , \u0026#34;-AddedText\u0026#34; ) , User ) | project User , NumberOfLaptop , IngestedOn = ingestion_time() | order by NumberOfLaptop desc } Then, we can call the function from PBI and add the parameter to see how the data is reflected.\nWe can even add new columns from ADX and the new data will be reflected on PBI. For example, I will add a column (with emoji) to indicate someone is owning more than one laptop.\nMy function will become as below.\n.create-or-alter function GetDataForPBI(_addText:bool = false) { UserAsset | extend User = iff( _addText , strcat( User , \u0026#34;-AddedText\u0026#34; ) , User ) | project User , NumberOfLaptop , IngestedOn = ingestion_time() , OwningMoreThanOneLaptop = iff( NumberOfLaptop \u0026gt; 1 , \u0026#34;💻+\u0026#34; , \u0026#34;\u0026#34; ) | order by NumberOfLaptop desc } Upon refreshing the source, we can see the new column coming up.\n","date":"2 January 2024","externalUrl":null,"permalink":"/posts/kustovspbi/","section":"Posts","summary":"Learn how to create and use Azure Data Explorer (ADX) Kusto functions as Power BI data sources. Simplify data access and enhance reporting with parameterized functions.","title":"Using Kusto functions in Power BI datasource","type":"posts"},{"content":" References # XppPrePostArgs Class (Microsoft.Dynamics.Ax.Xpp) How to # Take a very safe table to play around: CustGroup (Customer Group), we will see how we can utilise XppPrePostArgs here to save a parameter before the update is commited to the database and then take it out for us to execute futher logic.\nThe tricky part is that such table does not even have an update method.\nNormally saying, if a method is available on the common, we can navigate to the design of it and copy the Pre- and Post-Event Handler from here.\nYet, in our example here, such method - update - is not available. So, we can simply make a Class extension to wrap the common.update() method. The code can be as simple as below.\n[ExtensionOf(tableStr(CustGroup))] final class CustGroup_Extension { public void update() { next update(); } } We will then take the original value of CustGroup.Name and save it to the instance of XppPrePostArgs. This part will be under the Pre-Event method. The code is as below.\nconst static str OrigNameFld = \u0026#34;OrigName\u0026#34;; [PreHandlerFor(classStr(CustGroup_Extension), methodStr(CustGroup_Extension, update))] public static void CustGroup_Extension_Pre_update(XppPrePostArgs args) { // Get custGroup buffer // No super() has been called, so the changes have not been committed CustGroup custGroup = args.getThis(); // Get original value of field Name Description origName = custGroup.orig().Name; // Save the value to args args.setArg( OrigNameFld , origName ); } After the changes are commited to the database, we will take the saved parm out and execute our logic. In this case, I will assess if the new CustGroup.Name contains \u0026quot;Kome\u0026quot;, if it does, revert it back to its original value and throw message. This part will be under Post-Event method. The code is as below (I will show the whole class so we can see how the parm is passed by using setArg and getArg)\ninternal final class CustGroup_EventHandlers { const static str OrigNameFld = \u0026#34;OrigName\u0026#34;; [PreHandlerFor(classStr(CustGroup_Extension), methodStr(CustGroup_Extension, update))] public static void CustGroup_Extension_Pre_update(XppPrePostArgs args) { // Get custGroup buffer // No super() has been called, so the changes have not been committed CustGroup custGroup = args.getThis(); // Get original value of field Name Description origName = custGroup.orig().Name; // Save the value to args args.setArg( OrigNameFld , origName ); } [PostHandlerFor(classStr(CustGroup_Extension), methodStr(CustGroup_Extension, update))] public static void CustGroup_Extension_Post_update(XppPrePostArgs args) { // Get custGroup buffer and its column Name after updated CustGroup newCustGroup = args.getThis(); Description newName = newCustGroup.Name; // Assess and revert if(Global::strContains(newName, \u0026#34;Kome\u0026#34;)) { ttsbegin; { // Get the saved parm here and set it to the field value newCustGroup.Name = args.getArg(OrigNameFld); newCustGroup.doUpdate(); } ttscommit; Global::info(strFmt(\u0026#34;New description - \\\u0026#34;%1\\\u0026#34; - contains \\\u0026#34;Kome\\\u0026#34;. Reverted to its original.\u0026#34;, newName)); } } } And, so, we can test it out by setting a new Description for a Customer group\u0026hellip;\n\u0026hellip;upon clicking on button Save, the original value will be updated and a message will be thrown.\n","date":"2 January 2024","externalUrl":null,"permalink":"/posts/trickxppprepostarg/","section":"Posts","summary":"Master XppPrePostArgs class in Dynamics 365 for passing parameters between pre- and post-event handlers. Practical example with CustGroup table extension and method wrapping.","title":"Using XppPrePostArgs to pass parameters through a method","type":"posts"},{"content":"","date":"2 January 2024","externalUrl":null,"permalink":"/tags/xppprepostargs/","section":"Tags","summary":"","title":"Xppprepostargs","type":"tags"},{"content":"","date":"26 December 2023","externalUrl":null,"permalink":"/categories/development-tools/","section":"Categories","summary":"","title":"Development Tools","type":"categories"},{"content":"","date":"26 December 2023","externalUrl":null,"permalink":"/tags/development-tools/","section":"Tags","summary":"","title":"Development Tools","type":"tags"},{"content":"Open Run\nVS2017 and prior %UserProfile%/Documents/Visual Studio 2015\\settings\\\nVS2019 and later %UserProfile%/Documents/Visual Studio Dynamics 365\nOpen DynamicsDevConfig.XML, change the default model in DefaultModelForNewProjects property\n\u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;utf-8\u0026#34;?\u0026gt; \u0026lt;DynamicsDevConfig xmlns:i=\u0026#34;http://www.w3.org/2001/XMLSchema-instance\u0026#34; xmlns=\u0026#34;http://schemas.microsoft.com/dynamics/2012/03/development/configuration\u0026#34;\u0026gt; \u0026lt;AddInPaths xmlns:d2p1=\u0026#34;http://schemas.microsoft.com/2003/10/Serialization/Arrays\u0026#34;\u0026gt; \u0026lt;d2p1:string\u0026gt;T:\\Bin\\AddInExtensions\u0026lt;/d2p1:string\u0026gt; ........ \u0026lt;DBSyncInBuild\u0026gt;true\u0026lt;/DBSyncInBuild\u0026gt; \u0026lt;DatabaseServer\u0026gt;localhost\u0026lt;/DatabaseServer\u0026gt; \u0026lt;DefaultCompany\u0026gt;\u0026lt;/DefaultCompany\u0026gt; // highlight-next-line \u0026lt;DefaultModelForNewProjects\u0026gt;FleetManagement\u0026lt;/DefaultModelForNewProjects\u0026gt; \u0026lt;DefaultWebBrowser\u0026gt;Google Chrome\u0026lt;/DefaultWebBrowser\u0026gt; \u0026lt;DisableBPCheck\u0026gt;false\u0026lt;/DisableBPCheck\u0026gt; \u0026lt;DisableFormStaticCompile\u0026gt;false\u0026lt;/DisableFormStaticCompile\u0026gt; \u0026lt;EmitTraceEvents\u0026gt;true\u0026lt;/EmitTraceEvents\u0026gt; \u0026lt;EnableNativeDebugging\u0026gt;false\u0026lt;/EnableNativeDebugging\u0026gt; \u0026lt;EnableOfflineAuthentication\u0026gt;true\u0026lt;/EnableOfflineAuthentication\u0026gt; \u0026lt;EnableSymbolLoadingForSolutionOnly\u0026gt;true\u0026lt;/EnableSymbolLoadingForSolutionOnly\u0026gt; \u0026lt;FallbackToNativeSync\u0026gt;false\u0026lt;/FallbackToNativeSync\u0026gt; ....... \u0026lt;/DynamicsDevConfig\u0026gt; ","date":"26 December 2023","externalUrl":null,"permalink":"/posts/set-default-model-for-d365-project/","section":"Posts","summary":"Configure the default model for new Dynamics 365 Finance and Operations projects by modifying DynamicsDevConfig.XML. Quick Visual Studio development environment setup guide.","title":"Set default model for Dynamics 365 Finance Operations project","type":"posts"},{"content":"","date":"25 December 2023","externalUrl":null,"permalink":"/categories/business-document/","section":"Categories","summary":"","title":"Business Document","type":"categories"},{"content":"Normally, we don\u0026rsquo;t do any coding with SSRS query based report. This code below will show you how to create parms and manipulate the query for SSRS query based report.\n[ DataContract, SysOperationGroup(\u0026#39;GroupId\u0026#39;, \u0026#34;Group label\u0026#34;, \u0026#39;1\u0026#39;), SrsReportName(\u0026#39;DEV_Tax1099.Report\u0026#39;), SysOperationContractProcessing(classStr(DEV_SSRSGlobal_UIBuilder), SysOperationDataContractProcessingMode::CreateUIBuilderForRootContractOnly) ] public class DEV_SSRSGlobal_Contract extends SrsReportRdlDataContract implements SysOperationValidatable { ExchangeRateTypeName exchangeRateTypeName; CompanyBankAccount companyBankAccount; NoYesId useCurrentDate; FromDate fromDate; ToDate toDate; [ DataMemberAttribute(identifierStr(ExchangeRateTypeName)), SysOperationDisplayOrderAttribute(\u0026#39;1\u0026#39;) ] public ExchangeRateTypeName parmExchangeRateTypeName(ExchangeRateTypeName _exchangeRateTypeName = exchangeRateTypeName) { exchangeRateTypeName = _exchangeRateTypeName; return exchangeRateTypeName; } [ DataMemberAttribute(identifierStr(CompanyBankAccount)), SysOperationDisplayOrderAttribute(\u0026#39;2\u0026#39;) ] public CompanyBankAccount parmBankAccount(CompanyBankAccount _companyBankAccount = companyBankAccount) { companyBankAccount = _companyBankAccount; return companyBankAccount; } [ DataMemberAttribute(identifierStr(UseCurrentDate)), SysOperationLabelAttribute(literalstr(\u0026#34;Use current date\u0026#34;)), SysOperationHelpTextAttribute(literalstr(\u0026#34;Help text\u0026#34;)), SysOperationDisplayOrderAttribute(\u0026#39;3\u0026#39;) ] public NoYesId parmUseCurrentDate(NoYesId _useCurrentDate = useCurrentDate) { useCurrentDate = _useCurrentDate; return useCurrentDate; } [ DataMemberAttribute(identifierStr(FromDate)), SysOperationLabelAttribute(literalstr(\u0026#34;From date label\u0026#34;)), SysOperationHelpTextAttribute(literalstr(\u0026#34;Help text\u0026#34;)), SysOperationGroupMemberAttribute(\u0026#39;GroupId\u0026#39;), SysOperationDisplayOrderAttribute(\u0026#39;1\u0026#39;) ] public FromDate parmFromDate(FromDate _fromDate = fromDate) { fromDate = _fromDate; return fromDate; } [ DataMemberAttribute(identifierStr(ToDate)), SysOperationLabelAttribute(literalstr(\u0026#34;To date label\u0026#34;)), SysOperationHelpTextAttribute(literalstr(\u0026#34;Help text\u0026#34;)), SysOperationGroupMemberAttribute(\u0026#39;GroupId\u0026#39;), SysOperationDisplayOrderAttribute(\u0026#39;2\u0026#39;) ] public ToDate parmToDate(ToDate _toDate = toDate) { toDate = _toDate; return toDate; } public boolean validate() { boolean ret = true; if (!exchangeRateTypeName) { ret = checkFailed(\u0026#34;exchangeRateTypeName should be specified\u0026#34;); } if (!companyBankAccount) { ret = checkFailed(\u0026#34;companyBankAccount should be specified\u0026#34;); } return ret; } } Using UIBuilder class, we can control the parm behaviour and set default value.\n[ SysOperationContractProcessing(classstr(DEV_SSRSGlobal_Contract), SysOperationDataContractProcessingMode::CreateUIBuilderForRootContractOnly) ] internal final class DEV_SSRSGlobal_UIBuilder extends SysOperationAutomaticUIBuilder { private DialogField dialogBankID, dialogExrateType, dialogfromdate, dialogtodate; /// \u0026lt;summary\u0026gt; /// Builds the dialog for the \u0026lt;c\u0026gt;\u0026lt;/c\u0026gt; SSRS report. /// \u0026lt;/summary\u0026gt; protected DialogField addDialogField(IdentifierName _methodName, Object _dataContract = this.dataContractObject()) { DialogField ret; DEV_SSRSGlobal_Contract dataContract = this.dataContractObject() as DEV_SSRSGlobal_Contract; switch (_methodName) { case methodStr(DEV_SSRSGlobal_Contract, parmExchangeRateTypeName): dialogExrateType = this.dialog().addFieldValue(extendedTypeStr(ExchangeRateTypeName), dataContract.parmExchangeRateTypeName(), \u0026#34;Currency Exchange Rate Type\u0026#34;); // highlight-next-line dialogExrateType.allowEdit(NoYes::No); ret = dialogExrateType; break; case methodStr(DEV_SSRSGlobal_Contract, parmBankAccount): dialogBankID = this.dialog().addFieldValue(extendedTypeStr(CompanyBankAccount), dataContract.parmBankAccount(),\u0026#34;Bank Account\u0026#34;); ret = dialogBankID; break; case methodStr(DEV_SSRSGlobal_Contract, parmFromDate): dialogfromdate = this.dialog().addFieldValue(extendedTypeStr(TransDate), dataContract.parmFromDate(), \u0026#34;From Date\u0026#34;); ret = dialogfromdate; break; case methodStr(DEV_SSRSGlobal_Contract, parmToDate): dialogtodate = this.dialog().addFieldValue(extendedTypeStr(TransDate), dataContract.parmToDate(),\u0026#34;To Date\u0026#34;); ret = dialogtodate; break; } return ret; } /// \u0026lt;summary\u0026gt; /// Transfers data from the dialog into the data contract object. /// \u0026lt;/summary\u0026gt; public void getFromDialog() { super(); DEV_SSRSGlobal_Contract contract = this.dataContractObject(); contract.parmExchangeRateTypeName(dialogExrateType.value()); contract.parmBankAccount(dialogBankID.value()); contract.parmFromDate(dialogfromdate.value()); contract.parmToDate(dialogtodate.value()); } } We can manipulate the query using preRunModifyContract method in Controller class.\ninternal final class DEV_SSRSGlobal_Controller extends SrsReportRunController { #define.ReportName(\u0026#39;DEV_Tax1099.Report\u0026#39;) #define.parmYear(\u0026#39;Year\u0026#39;) /// \u0026lt;summary\u0026gt; /// Override this method to change the report contract before running the report. /// \u0026lt;/summary\u0026gt; // highlight-next-line protected void preRunModifyContract() { Query query; Map queryContracts; MapEnumerator mapEnum; str queryKey; DEV_SSRSGlobal_Contract contract = this.parmReportContract().parmRdlContract() as DEV_SSRSGlobal_Contract; //Year year = contract.getValue(#parmYear); //date fromDate = mkDate(Tax1099Constants::FirstDay, Tax1099Constants::FirstMonth, year); //date toDate = mkDate(Tax1099Constants::LastDay, Tax1099Constants::LastMonth, year); date fromdate = contract.parmFromDate(); date toDate = contract.parmToDate(); queryContracts = this.parmReportContract().parmQueryContracts(); if(queryContracts) { mapEnum = queryContracts.getEnumerator(); while(mapEnum.moveNext()) { queryKey = mapEnum.currentKey(); query = queryContracts.lookup(queryKey); SysQuery::findOrCreateRange(query.dataSourceTable(tableNum(VendSettlementTax1099)), fieldNum(VendSettlementTax1099, TransDate)).value(queryRange(fromDate, toDate)); } } super(); } public static void main(Args _args) { DEV_SSRSGlobal_Controller controller = new DEV_SSRSGlobal_Controller(); controller.parmReportName(#ReportName); controller.parmArgs(_args); controller.startOperation(); } } ","date":"25 December 2023","externalUrl":null,"permalink":"/posts/create-parameters-manipulate-query-for-ssrs-type-query/","section":"Posts","summary":"Build custom SSRS query-based reports in Dynamics 365 Finance and Operations with parameters and query manipulation. Complete guide with contract, UIBuilder, and controller classes.","title":"Create parameters, manipulate query for SSRS type query","type":"posts"},{"content":"","date":"25 December 2023","externalUrl":null,"permalink":"/tags/development/","section":"Tags","summary":"","title":"Development","type":"tags"},{"content":"","date":"25 December 2023","externalUrl":null,"permalink":"/tags/programming/","section":"Tags","summary":"","title":"Programming","type":"tags"},{"content":"","date":"25 December 2023","externalUrl":null,"permalink":"/tags/query/","section":"Tags","summary":"","title":"Query","type":"tags"},{"content":"","date":"25 December 2023","externalUrl":null,"permalink":"/categories/ssrs/","section":"Categories","summary":"","title":"SSRS","type":"categories"},{"content":"","date":"22 December 2023","externalUrl":null,"permalink":"/tags/delete-button/","section":"Tags","summary":"","title":"Delete Button","type":"tags"},{"content":"","date":"22 December 2023","externalUrl":null,"permalink":"/categories/form/","section":"Categories","summary":"","title":"Form","type":"categories"},{"content":"","date":"22 December 2023","externalUrl":null,"permalink":"/tags/new-button/","section":"Tags","summary":"","title":"New Button","type":"tags"},{"content":"","date":"21 December 2023","externalUrl":null,"permalink":"/tags/buttons/","section":"Tags","summary":"","title":"Buttons","type":"tags"},{"content":"","date":"21 December 2023","externalUrl":null,"permalink":"/tags/form/","section":"Tags","summary":"","title":"Form","type":"tags"},{"content":"We can change the form design property Show Delete Button, Show New Button to No.\nOr using X++ code in form\u0026rsquo;s init method\n[Form] public class DEV_TestForm extends FormRun { public void init() { this.form().design().showNewButton(0); this.form().design().showDeleteButton(0); super(); } } For COC Extension\n[ExtensionOf(formStr(SMAServiceOrderTable))] final class SMAServiceOrderTable_Form_DEV_Extension { public void init() { this.form().design().showNewButton(0); this.form().design().showDeleteButton(0); next init(); } } ","date":"21 December 2023","externalUrl":null,"permalink":"/posts/how-to-hide-new-and-delete-buttons-in-form-1/","section":"Posts","summary":"Hide New and Delete buttons in Dynamics 365 Finance and Operations forms using design properties or X++ code. Includes CoC extension examples for standard form customization.","title":"How to hide New and Delete buttons (command buttons) in form","type":"posts"},{"content":"","date":"21 December 2023","externalUrl":null,"permalink":"/tags/ui-customization/","section":"Tags","summary":"","title":"Ui-Customization","type":"tags"},{"content":"","date":"4 July 2023","externalUrl":null,"permalink":"/categories/configuration/","section":"Categories","summary":"","title":"Configuration","type":"categories"},{"content":"","date":"4 July 2023","externalUrl":null,"permalink":"/tags/metadata-search/","section":"Tags","summary":"","title":"Metadata Search","type":"tags"},{"content":" Microsoft Dynamics 365 Commerce - Component Overview ","date":"4 July 2023","externalUrl":null,"permalink":"/posts/microsoft-dynamics-365-commerce-component-overview/","section":"Posts","summary":"Visual overview of Microsoft Dynamics 365 Commerce architecture and component structure. Understand the key components and their relationships in the Commerce ecosystem.","title":"Microsoft Dynamics 365 Commerce - Component Overview","type":"posts"},{"content":"The Ancien Régime and the Revolution is a comparison of revolutionary France and the despotic rule it toppled. Alexis de Tocqueville (1805–59) is an objective observer of both periods – providing a merciless critique of the ancien régime, with its venality, oppression and inequality, yet acknowledging the reforms introduced under Louis XVI, and claiming that the post-Revolution state was in many ways as tyrannical as that of the King; its once lofty and egalitarian ideals corrupted and forgotten. Writing in the 1850s, Tocqueville wished to expose the return to despotism he witnessed in his own time under Napoleon III, by illuminating the grand, but ultimately doomed, call to liberty made by the French people in 1789. His eloquent and instructive study raises questions about liberty, nationalism and justice that remain urgent today.\n","date":"1 April 2023","externalUrl":null,"permalink":"/books/the-ancien-r%C3%A9gime-and-the-revolution/","section":"","summary":"\u003cp\u003eThe Ancien Régime and the Revolution is a comparison of \u003cstrong\u003erevolutionary France\u003c/strong\u003e and the despotic rule it toppled. Alexis de Tocqueville (1805–59) is an objective observer of both periods – providing a merciless critique of the ancien régime, with its venality, oppression and inequality, yet acknowledging the reforms introduced under Louis XVI, and claiming that the post-Revolution state was in many ways as tyrannical as that of the King; its once lofty and egalitarian ideals corrupted and forgotten. Writing in the 1850s, Tocqueville wished to expose the return to despotism he witnessed in his own time under Napoleon III, by illuminating the grand, but ultimately doomed, call to liberty made by the French people in 1789. His eloquent and instructive study raises questions about liberty, nationalism and justice that remain urgent today.\u003c/p\u003e","title":"The Ancien Régime and the Revolution","type":"books"},{"content":"","date":"14 February 2023","externalUrl":null,"permalink":"/tags/dynamics-365-finance/","section":"Tags","summary":"","title":"Dynamics 365 Finance","type":"tags"},{"content":" Microsoft ecosystem supporting Dynamics 365 Finance ","date":"14 February 2023","externalUrl":null,"permalink":"/posts/microsoft-ecosystem-supporting-dynamics-365-finance/","section":"Posts","summary":"Visual diagram showing the comprehensive Microsoft ecosystem and technologies that support Dynamics 365 Finance and Operations. Understand integration points and supporting services.","title":"Microsoft ecosystem supporting Dynamics 365 Finance","type":"posts"},{"content":"","date":"5 February 2023","externalUrl":null,"permalink":"/categories/certificate/","section":"Categories","summary":"","title":"Certificate","type":"categories"},{"content":"","date":"5 February 2023","externalUrl":null,"permalink":"/tags/finance--scm/","section":"Tags","summary":"","title":"Finance \u0026 SCM","type":"tags"},{"content":"","date":"5 February 2023","externalUrl":null,"permalink":"/tags/mb-220/","section":"Tags","summary":"","title":"MB-220","type":"tags"},{"content":"Documentation https://learn.microsoft.com/en-us/dynamics365/marketing/overview\nBasic: Learn the fundamentals of Microsoft Dynamics 365 Marketing\nExam/Learning Path: https://docs.microsoft.com/certifications/exams/mb-220\nLearning Path Module Week Set up Dynamics 365 Marketing and configure advanced settings Set up and manage Dynamics 365 Marketing 1 Advanced configuration for Dynamics 365 Marketing 2 Review domain authentication, email best practices, and GDPR in Dynamics 365 Marketing 3 Work with core features in Dynamics 365 Marketing Manage assets and content settings in Dynamics 365 Marketing 4 Manage customers in Dynamics 365 Marketing 4 Manage forms and pages in Dynamics 365 Marketing 5 Manage emails, segments, and journeys in Dynamics 365 Marketing 6 Manage content, event triggers, and journeys in real-time marketing with Dynamics 365 Marketing 7 Manage subscription centers and double opt-in in Dynamics 365 Marketing 8 Manage website visits, redirect URLs, and social postings in Dynamics 365 Marketing 8 Manage events in Dynamics 365 Marketing Create an on-site event in Dynamics 365 Marketing 9 Create a webinar event in Dynamics 365 Marketing 10 Promote events, manage registration and check-ins, and review results in Dynamics 365 Marketing 11 Advanced event management features in Dynamics 365 Marketing 11 Analyze insights in Dynamics 365 Marketing Evaluate marketing initiatives with analytics in Dynamics 365 Marketing 12 Access and interpret analytics with Dynamics 365 Marketing 13 Review the marketing calendar in Dynamics 365 Marketing 13 ","date":"5 February 2023","externalUrl":null,"permalink":"/cert-learn/biz-app-learning/2023-02-05-mb-220/","section":"Dynamics 365 Finance Operation Certificate","summary":"\u003cp\u003e\u003cstrong\u003eDocumentation\u003c/strong\u003e \u003ca\n  href=\"https://learn.microsoft.com/en-us/dynamics365/marketing/overview\"\n    target=\"_blank\"\n  \u003ehttps://learn.microsoft.com/en-us/dynamics365/marketing/overview\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBasic:\u003c/strong\u003e \u003ca\n  href=\"https://learn.microsoft.com/en-us/training/paths/learn-fundamentals-of-microsoft-dynamics-365-marketing/\"\n    target=\"_blank\"\n  \u003eLearn the fundamentals of Microsoft Dynamics 365 Marketing\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eExam/Learning Path:\u003c/strong\u003e \u003ca\n  href=\"https://docs.microsoft.com/certifications/exams/mb-220\"\n    target=\"_blank\"\n  \u003ehttps://docs.microsoft.com/certifications/exams/mb-220\u003c/a\u003e\u003c/p\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003e\u003cstrong\u003eLearning Path\u003c/strong\u003e\u003c/th\u003e\n          \u003cth\u003e\u003cstrong\u003eModule\u003c/strong\u003e\u003c/th\u003e\n          \u003cth\u003e\u003cstrong\u003eWeek\u003c/strong\u003e\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/paths/get-started-with-marketing/\"\n    target=\"_blank\"\n  \u003eSet up Dynamics 365 Marketing and configure advanced settings\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/get-started-set-up-and-manage/\"\n    target=\"_blank\"\n  \u003eSet up and manage Dynamics 365 Marketing\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e1\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/get-started-advanced-configuration/\"\n    target=\"_blank\"\n  \u003eAdvanced configuration for Dynamics 365 Marketing\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e2\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/review-authentication-dynamics-365-marketing/\"\n    target=\"_blank\"\n  \u003eReview domain authentication, email best practices, and GDPR in Dynamics 365 Marketing\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e3\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/paths/work-core-features-marketing/\"\n    target=\"_blank\"\n  \u003eWork with core features in Dynamics 365 Marketing\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/manage-assets-content-settings/\"\n    target=\"_blank\"\n  \u003eManage assets and content settings in Dynamics 365 Marketing\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e4\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/manage-customers/\"\n    target=\"_blank\"\n  \u003eManage customers in Dynamics 365 Marketing\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e4\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/manage-forms-pages-subscriptions/\"\n    target=\"_blank\"\n  \u003eManage forms and pages in Dynamics 365 Marketing\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e5\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/manage-emails-journey/\"\n    target=\"_blank\"\n  \u003eManage emails, segments, and journeys in Dynamics 365 Marketing\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e6\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/manage-content-event-triggers-journeys/\"\n    target=\"_blank\"\n  \u003eManage content, event triggers, and journeys in real-time marketing with Dynamics 365 Marketing\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e7\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/manage-subscription-centers-double-opt/\"\n    target=\"_blank\"\n  \u003eManage subscription centers and double opt-in in Dynamics 365 Marketing\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e8\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/manage-websites-redirects-social/\"\n    target=\"_blank\"\n  \u003eManage website visits, redirect URLs, and social postings in Dynamics 365 Marketing\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e8\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/paths/manage-events-dynamics-365-marketing/\"\n    target=\"_blank\"\n  \u003eManage events in Dynamics 365 Marketing\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/create-event-marketing/\"\n    target=\"_blank\"\n  \u003eCreate an on-site event in Dynamics 365 Marketing\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e9\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/create-webinar-event-dynamics-365-marketing/\"\n    target=\"_blank\"\n  \u003eCreate a webinar event in Dynamics 365 Marketing\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e10\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/promote-events-dynamics-365-marketing/\"\n    target=\"_blank\"\n  \u003ePromote events, manage registration and check-ins, and review results in Dynamics 365 Marketing\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e11\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/advanced-event-management-marketing/\"\n    target=\"_blank\"\n  \u003eAdvanced event management features in Dynamics 365 Marketing\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e11\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/paths/analyze-marketing-insights/\"\n    target=\"_blank\"\n  \u003eAnalyze insights in Dynamics 365 Marketing\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/analyze-insights-marketing/\"\n    target=\"_blank\"\n  \u003eEvaluate marketing initiatives with analytics in Dynamics 365 Marketing\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e12\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/access-interpret-analytics-marketing/\"\n    target=\"_blank\"\n  \u003eAccess and interpret analytics with Dynamics 365 Marketing\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e13\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/marketing-calendar/\"\n    target=\"_blank\"\n  \u003eReview the marketing calendar in Dynamics 365 Marketing\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e13\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e","title":"MB-220: Microsoft Dynamics 365 Marketing Functional Consultant","type":"cert-learn"},{"content":"","date":"5 February 2023","externalUrl":null,"permalink":"/tags/mb-300/","section":"Tags","summary":"","title":"MB-300","type":"tags"},{"content":"Exam/Learning Path: https://docs.microsoft.com/certifications/exams/mb-300\nLearning Path Module Week Get started with Finance and Operations apps Introduction to Microsoft Dynamics 365 1 Navigate Finance and Operations apps 2 Get started with Dynamics 365 Finance 3 Get started with Dynamics 365 Supply Chain Management 4 Get started with production control in Dynamics 365 Supply Chain Management 5 Get help and learn more about Finance and Operations apps 6 Use Lifecycle Services to design and plan an implementation of Finance and Operations apps Get started with Lifecycle Services for Finance and Operations apps 7 Design and plan an implementation of Finance and Operations apps 8 Translate Dynamics 365 apps and documentation with Dynamics 365 Translation Service 9 Configure your organization in Finance and Operations apps Plan and configure the global address book in Finance and Operations apps 10 Plan and implement legal entities in Finance and Operations apps 11 Plan and implement security in Finance and Operations apps 12 Set up batch jobs in Finance and Operations apps 13 Work with workflows in Finance and Operations apps 14 Design and build mobile apps for Finance and Operations apps 15 Personalize Finance and Operations apps 16 Implement common integration features in Finance and Operations apps 17 Feature management in Finance and Operations apps 18 Migrate data and go live with Finance and Operations apps Prepare data for migration to Finance and Operations apps 19 Work with data management in Finance and Operations apps 20 Perform user acceptance testing in Finance and Operations apps 21 Prepare to go-live with Finance and Operations apps 22 Configure and work with analytics and reporting in Finance and Operations apps Work with analytics and reporting in Finance and Operations apps 23 Configure electronic reporting in Dynamics 365 Finance 24 ","date":"5 February 2023","externalUrl":null,"permalink":"/cert-learn/biz-app-learning/2023-02-05-mb-300/","section":"Dynamics 365 Finance Operation Certificate","summary":"\u003cp\u003e\u003cstrong\u003eExam/Learning Path:\u003c/strong\u003e \u003ca\n  href=\"https://docs.microsoft.com/certifications/exams/mb-300\"\n    target=\"_blank\"\n  \u003ehttps://docs.microsoft.com/certifications/exams/mb-300\u003c/a\u003e\u003c/p\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003e\u003cstrong\u003eLearning Path\u003c/strong\u003e\u003c/th\u003e\n          \u003cth\u003e\u003cstrong\u003eModule\u003c/strong\u003e\u003c/th\u003e\n          \u003cth\u003e\u003cstrong\u003eWeek\u003c/strong\u003e\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/paths/get-started-finance-operations/\"\n    target=\"_blank\"\n  \u003eGet started with Finance and Operations apps\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/dynamics-365-introduction/\"\n    target=\"_blank\"\n  \u003eIntroduction to Microsoft Dynamics 365\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e1\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/navigate-finance-operations/\"\n    target=\"_blank\"\n  \u003eNavigate Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e2\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/get-started-financial-management-dyn365-finance/\"\n    target=\"_blank\"\n  \u003eGet started with Dynamics 365 Finance\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e3\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/get-started-supply-chain-management-dyn365-supply-chain-mgmt/\"\n    target=\"_blank\"\n  \u003eGet started with Dynamics 365 Supply Chain Management\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e4\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/get-started-production-control-dyn365-supply-chain-mgmt/\"\n    target=\"_blank\"\n  \u003eGet started with production control in Dynamics 365 Supply Chain Management\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e5\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/get-help-finance-operations/\"\n    target=\"_blank\"\n  \u003eGet help and learn more about Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e6\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/paths/use-lcs-design-plan-implementation-finance-operations/\"\n    target=\"_blank\"\n  \u003eUse Lifecycle Services to design and plan an implementation of Finance and Operations apps\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/get-started-lifecycle-services-finance-operations/\"\n    target=\"_blank\"\n  \u003eGet started with Lifecycle Services for Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e7\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/design-plan-implementation-finance-operations/\"\n    target=\"_blank\"\n  \u003eDesign and plan an implementation of Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e8\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/dynamics-translation-service/\"\n    target=\"_blank\"\n  \u003eTranslate Dynamics 365 apps and documentation with Dynamics 365 Translation Service\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e9\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/paths/configure-your-organization-finance-ops/\"\n    target=\"_blank\"\n  \u003eConfigure your organization in Finance and Operations apps\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/plan-config-global-address-book-finance-operations/\"\n    target=\"_blank\"\n  \u003ePlan and configure the global address book in Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e10\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/plan-implement-legal-entities-finance-operations/\"\n    target=\"_blank\"\n  \u003ePlan and implement legal entities in Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e11\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/plan-implement-security-finance-operations/\"\n    target=\"_blank\"\n  \u003ePlan and implement security in Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e12\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/setup-batch-jobs-finance-operations/\"\n    target=\"_blank\"\n  \u003eSet up batch jobs in Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e13\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/create-use-workflows-finance-operations/\"\n    target=\"_blank\"\n  \u003eWork with workflows in Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e14\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/design-build-mobile-apps-finance-operations/\"\n    target=\"_blank\"\n  \u003eDesign and build mobile apps for Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e15\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/personalize-finance-operations/\"\n    target=\"_blank\"\n  \u003ePersonalize Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e16\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/implement-common-integration-features-finance-ops/\"\n    target=\"_blank\"\n  \u003eImplement common integration features in Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e17\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/feature-management-finance-operations/\"\n    target=\"_blank\"\n  \u003eFeature management in Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e18\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/paths/migrate-data-go-live-finance-operations/\"\n    target=\"_blank\"\n  \u003eMigrate data and go live with Finance and Operations apps\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/prepare-data-migration-finance-operations/\"\n    target=\"_blank\"\n  \u003ePrepare data for migration to Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e19\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/work-data-management-finance-operations/\"\n    target=\"_blank\"\n  \u003eWork with data management in Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e20\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/perform-uat-finance-operations/\"\n    target=\"_blank\"\n  \u003ePerform user acceptance testing in Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e21\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/prepare-go-live-finance-operations/\"\n    target=\"_blank\"\n  \u003ePrepare to go-live with Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e22\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/paths/configure-analytics-reporting-finance-operations/\"\n    target=\"_blank\"\n  \u003eConfigure and work with analytics and reporting in Finance and Operations apps\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/work-analytics-reporting-finance-operations/\"\n    target=\"_blank\"\n  \u003eWork with analytics and reporting in Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e23\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/configure-electronic-reporting-finance-operations/\"\n    target=\"_blank\"\n  \u003eConfigure electronic reporting in Dynamics 365 Finance\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e24\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e","title":"MB-300 Microsoft Dynamics 365: Core Finance and Operations","type":"cert-learn"},{"content":"","date":"5 February 2023","externalUrl":null,"permalink":"/tags/mb-310/","section":"Tags","summary":"","title":"MB-310","type":"tags"},{"content":" MB-310: Microsoft Dynamics 365 Finance Functional Consultant # Exam/Learning Path: https://docs.microsoft.com/certifications/exams/mb-310\nLearning Path Module Week Configure and use the general ledger in Dynamics 365 Finance Get started with Dynamics 365 Finance 1 Configure currencies in Dynamics 365 Finance 2 Create fiscal calendars, years, and periods in Dynamics 365 Finance 3 Configure chart of accounts in Dynamics 365 Finance 4 Configure ledgers and journals in Dynamics 365 Finance 5 Perform general ledger daily procedures in Dynamics 365 Finance 6 Intercompany accounting in Dynamics 365 Finance 7 Configure ledger allocations and accruals in Dynamics 365 Finance 8 Configure and perform periodic processes in Dynamics 365 Finance 9 Configure and use cash and bank management, and sales tax in Dynamics 365 Finance Configure cash and bank management in Dynamics 365 Finance 10 Work with cash and bank management in Dynamics 365 Finance 11 Configure letters of credit and guarantees in Dynamics 365 Finance 12 Configure and process postdated checks in Dynamics 365 Finance 13 Configure taxes in Dynamics 365 Finance 14 Work with accounts payable in Dynamics 365 Finance Configure Accounts payable in Dynamics 365 Finance 15 Perform Accounts payable daily procedures in Dynamics 365 Finance 16 Work with accounting distributions, invoice validations and settlements in Dynamics 365 Finance 17 Set up and use Intelligent OCR for vendor invoices in Dynamics 365 Finance 18 Work with accounts receivable in Dynamics 365 Finance Configure accounts receivable in Dynamics 365 Finance 19 Perform accounts receivable daily procedures in Dynamics 365 Finance 20 Configure credit and collections in Dynamics 365 Finance 21 Process credit and collections in Dynamics 365 Finance 22 Configure and use budgeting in Dynamics 365 Finance Configure and use basic budgeting and budget control in Dynamics 365 Finance 23 Configure and use budget planning in Dynamics 365 Finance 24 Configure and manage fixed assets and Asset leasing in Dynamics 365 Finance Configure fixed assets management in Dynamics 365 Finance 25 Manage fixed assets in Dynamics 365 Finance 26 Set up Asset leasing in Dynamics 365 Finance 27 Work with Asset leasing in Dynamics 365 Finance 28 Get started with cost accounting for supply chains in Dynamics 365 Finance Get started with cost accounting in Dynamics 365 Finance 29 Work with Expense management in Dynamics 365 Project Operations Get started with Expense management in Dynamics 365 Project Operations 30 Set up and configure Expense management in Dynamics 365 Project Operations 31 Create and process expense reports in Dynamics 365 Project Operations 32 Work with travel requisitions in Dynamics 365 Project Operations 33 ","date":"5 February 2023","externalUrl":null,"permalink":"/cert-learn/biz-app-learning/2023-02-05-mb-310/","section":"Dynamics 365 Finance Operation Certificate","summary":"\u003ch1 class=\"relative group\"\u003eMB-310: Microsoft Dynamics 365 Finance Functional Consultant \n    \u003cdiv id=\"mb-310-microsoft-dynamics-365-finance-functional-consultant\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline\" href=\"#mb-310-microsoft-dynamics-365-finance-functional-consultant\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h1\u003e\n\u003cp\u003e\u003cstrong\u003eExam/Learning Path:\u003c/strong\u003e \u003ca\n  href=\"https://docs.microsoft.com/certifications/exams/mb-310\"\n    target=\"_blank\"\n  \u003ehttps://docs.microsoft.com/certifications/exams/mb-310\u003c/a\u003e\u003c/p\u003e","title":"MB-310: Microsoft Dynamics 365 Finance Functional Consultant","type":"cert-learn"},{"content":"","date":"5 February 2023","externalUrl":null,"permalink":"/tags/mb-500/","section":"Tags","summary":"","title":"MB-500","type":"tags"},{"content":"Exam/Learning Path: https://docs.microsoft.com/certifications/exams/mb-500\nLearning Path Module Week Introduction to developing with Finance and Operations apps Explore the ecosystem and main components of Finance and Operations apps 1 Explore the technical architecture of Finance and Operations apps 2 Explore design and deployment considerations for Finance and Operations apps 3 Manage Finance and Operations apps implementations by using Lifecycle Services 4 Work with performance and monitoring tools in Finance and Operations apps 5 Manage source code by using version control in Finance and Operations apps 6 Explore the test framework and tools in Finance and Operations apps 7 Explore reporting tools in Finance and Operations apps 8 Build Finance and Operations apps Start developing for Finance and Operations apps by using Visual Studio 9 Get started with development using X++ in Finance and Operations apps 10 Develop object-oriented code in Finance and Operations apps 11 Implement application lifecycle management in Finance and Operations apps 12 Build extended data types and enumerations for Finance and Operations apps 13 Build tables in Finance and Operations apps 14 Build forms and optimize form performance in Finance and Operations apps 15 Create classes in Finance and Operations apps 16 Build reports for Finance and Operations apps 17 Build workspaces in Finance and Operations apps 18 Implement role-based security in Finance and Operations apps 19 Apply basic performance optimization in Finance and Operations apps 20 Extend Finance and Operations apps Explore extensions and the extension framework in Finance and Operations apps 21 Extend elements in Finance and Operations apps 22 Consume business events in Finance and Operations apps 23 Connect to Finance and Operations apps Identify data integration patterns and scenarios in Finance and Operations apps 24 Implement data integration concepts and solutions for Finance and Operations apps 25 Implement the Data management package API for Finance and Operations apps 26 Data integrations with Finance and Operations apps 27 Prepare data for migration to Finance and Operations apps 28 Manage data sources with external data stores in Finance and Operations apps 29 Integrate Finance and Operations apps with Microsoft Azure 29 Connect to Microsoft Power Platform services with Finance and Operations apps 30 Migrate data and go live with Finance and Operations apps Prepare data for migration to Finance and Operations apps 31 Work with data management in Finance and Operations apps 32 Perform user acceptance testing in Finance and Operations apps 33 Prepare to go-live with Finance and Operations apps 34 ","date":"5 February 2023","externalUrl":null,"permalink":"/cert-learn/biz-app-learning/2023-02-05-mb-500/","section":"Dynamics 365 Finance Operation Certificate","summary":"\u003cp\u003e\u003cstrong\u003eExam/Learning Path:\u003c/strong\u003e \u003ca\n  href=\"https://docs.microsoft.com/certifications/exams/mb-500\"\n    target=\"_blank\"\n  \u003ehttps://docs.microsoft.com/certifications/exams/mb-500\u003c/a\u003e\u003c/p\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003e\u003cstrong\u003eLearning Path\u003c/strong\u003e\u003c/th\u003e\n          \u003cth\u003e\u003cstrong\u003eModule\u003c/strong\u003e\u003c/th\u003e\n          \u003cth\u003e\u003cstrong\u003eWeek\u003c/strong\u003e\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/paths/introduction-develop-finance-operations/\"\n    target=\"_blank\"\n  \u003eIntroduction to developing with Finance and Operations apps\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/explore-ecosystem-main-components-finance-operations/\"\n    target=\"_blank\"\n  \u003eExplore the ecosystem and main components of Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e1\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/explore-technical-architecture-finance-operations/\"\n    target=\"_blank\"\n  \u003eExplore the technical architecture of Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e2\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/design-deployment-finance-operations/\"\n    target=\"_blank\"\n  \u003eExplore design and deployment considerations for Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e3\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/manage-lifecycle-services-finance-operations/\"\n    target=\"_blank\"\n  \u003eManage Finance and Operations apps implementations by using Lifecycle Services\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e4\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/performance-monitoring-finance-operations/\"\n    target=\"_blank\"\n  \u003eWork with performance and monitoring tools in Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e5\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/manage-source-code-version-control-finance-operations/\"\n    target=\"_blank\"\n  \u003eManage source code by using version control in Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e6\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/explore-test-framework-tools-finance-operations/\"\n    target=\"_blank\"\n  \u003eExplore the test framework and tools in Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e7\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/explore-reporting-tools-finance-operations/\"\n    target=\"_blank\"\n  \u003eExplore reporting tools in Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e8\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/paths/build-finance-operations/\"\n    target=\"_blank\"\n  \u003eBuild Finance and Operations apps\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/customize-visual-studio-finance-operations/\"\n    target=\"_blank\"\n  \u003eStart developing for Finance and Operations apps by using Visual Studio\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e9\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/get-started-xpp-finance-operations/\"\n    target=\"_blank\"\n  \u003eGet started with development using X++ in Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e10\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/develop-object-oriented-code-finance-operations/\"\n    target=\"_blank\"\n  \u003eDevelop object-oriented code in Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e11\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/application-lifecycle-finance-operations/\"\n    target=\"_blank\"\n  \u003eImplement application lifecycle management in Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e12\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/build-edt-enums-finance-operations/\"\n    target=\"_blank\"\n  \u003eBuild extended data types and enumerations for Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e13\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/build-tables-finance-operations/\"\n    target=\"_blank\"\n  \u003eBuild tables in Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e14\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/build-forms-optimize-finance-operations/\"\n    target=\"_blank\"\n  \u003eBuild forms and optimize form performance in Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e15\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/create-classes-finance-operations/\"\n    target=\"_blank\"\n  \u003eCreate classes in Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e16\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/build-reports-finance-operations/\"\n    target=\"_blank\"\n  \u003eBuild reports for Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e17\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/build-workspaces-finance-operations/\"\n    target=\"_blank\"\n  \u003eBuild workspaces in Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e18\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/role-security-finance-operations/\"\n    target=\"_blank\"\n  \u003eImplement role-based security in Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e19\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/apply-basic-performance-optimization-finance-operations/\"\n    target=\"_blank\"\n  \u003eApply basic performance optimization in Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e20\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/paths/extending-finance-operations/\"\n    target=\"_blank\"\n  \u003eExtend Finance and Operations apps\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/explore-extensions-framework-finance-operations/\"\n    target=\"_blank\"\n  \u003eExplore extensions and the extension framework in Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e21\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/extend-elements-finance-operations/\"\n    target=\"_blank\"\n  \u003eExtend elements in Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e22\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/business-events-finance-operations/\"\n    target=\"_blank\"\n  \u003eConsume business events in Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e23\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/paths/connect-finance-operations/\"\n    target=\"_blank\"\n  \u003eConnect to Finance and Operations apps\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/integration-patterns-finance-operations/\"\n    target=\"_blank\"\n  \u003eIdentify data integration patterns and scenarios in Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e24\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/integration-concepts-finance-operations/\"\n    target=\"_blank\"\n  \u003eImplement data integration concepts and solutions for Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e25\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/data-package-api-finance-operations/\"\n    target=\"_blank\"\n  \u003eImplement the Data management package API for Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e26\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/data-integrations-finance-operations/\"\n    target=\"_blank\"\n  \u003eData integrations with Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e27\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/prepare-data-migration-finance-operations/\"\n    target=\"_blank\"\n  \u003ePrepare data for migration to Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e28\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/external-data-sources-finance-operations/\"\n    target=\"_blank\"\n  \u003eManage data sources with external data stores in Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e29\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/integrate-azure-finance-operations/\"\n    target=\"_blank\"\n  \u003eIntegrate Finance and Operations apps with Microsoft Azure\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e29\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/connect-power-platform-finance-operations/\"\n    target=\"_blank\"\n  \u003eConnect to Microsoft Power Platform services with Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e30\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/paths/migrate-data-go-live-finance-operations/\"\n    target=\"_blank\"\n  \u003eMigrate data and go live with Finance and Operations apps\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/prepare-data-migration-finance-operations/\"\n    target=\"_blank\"\n  \u003ePrepare data for migration to Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e31\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/work-data-management-finance-operations/\"\n    target=\"_blank\"\n  \u003eWork with data management in Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e32\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/perform-uat-finance-operations/\"\n    target=\"_blank\"\n  \u003ePerform user acceptance testing in Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e33\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/prepare-go-live-finance-operations/\"\n    target=\"_blank\"\n  \u003ePrepare to go-live with Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e34\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e","title":"MB-500: Microsoft Dynamics 365: Finance and Operations Apps Developer","type":"cert-learn"},{"content":"","date":"5 February 2023","externalUrl":null,"permalink":"/tags/mb-700/","section":"Tags","summary":"","title":"MB-700","type":"tags"},{"content":"Exam/Learning Path: https://docs.microsoft.com/certifications/exams/mb-700\nLearning Path Module Week Architect solutions for Dynamics 365 and Microsoft Power Platform Becoming a solution architect for Dynamics 365 and Microsoft Power Platform 1 Discover customer needs as a Solution Architect for Dynamics 365 and Microsoft Power Platform 2 Propose a solution as a Solution Architect for Microsoft Power Platform and Dynamics 365 2 Work with requirements as a solution architect for Microsoft Power Platform and Dynamics 365 3 Perform fit gap analysis 3 Use Lifecycle Services to design and plan an implementation of Finance and Operations apps Get started with Lifecycle Services for Finance and Operations apps 4 Design and plan an implementation of Finance and Operations apps 5 Translate Dynamics 365 apps and documentation with Dynamics 365 Translation Service 6 Migrate data and go live with Finance and Operations apps Prepare data for migration to Finance and Operations apps 7 Work with data management in Finance and Operations apps 8 Perform user acceptance testing in Finance and Operations apps 9 Prepare to go-live with Finance and Operations apps 10 Implement Finance and Operations apps Get started with a Finance and Operations implementation project 10 FastTrack Customer Success Program for Finance and Operations 11 Get started with Lifecycle Services for Finance and Operations apps 12 Design and plan an implementation of Finance and Operations apps 13 Perform user acceptance testing in Finance and Operations apps 14 Work with data management in Finance and Operations apps 15 Prepare data for migration to Finance and Operations apps 16 Implement application lifecycle management in Finance and Operations apps 17 Explore extensions and the extension framework in Finance and Operations apps 18 Consume business events in Finance and Operations apps 19 Identify data integration patterns and scenarios in Finance and Operations apps 20 Data integrations with Finance and Operations apps 21 Work with analytics and reporting in Finance and Operations apps 22 Introduction to Microsoft Power Platform 23 How to build a canvas app 24 Introduction to Dataverse 25 How to build a dashboard 25 How to build an automated solution 26 Design and build mobile apps for Finance and Operations apps 27 Updates and upgrades for Finance and Operations apps 28 Work with performance and monitoring tools in Finance and Operations apps 29 Plan and implement security in Finance and Operations apps 30 Implement role-based security in Finance and Operations apps 31 Prepare to go-live with Finance and Operations apps 31 Feature management in Finance and Operations apps 32 Use Success by Design for Dynamics 365 solutions Get started with Success by Design for Dynamics 365 33 Create a solution blueprint for Dynamics 365 solutions 34 Plan a testing strategy for your Dynamics 365 solution 35 Design data models for Dynamics 365 solutions 36 Business intelligence and analytics design for Dynamics 365 solutions 37 Gap solution design for Dynamics 365 solutions 37 Create a data migration strategy for Dynamics 365 solutions 38 Review the security model for your Dynamics 365 solutions 39 Integration design for Dynamics 365 solutions 40 Dual-write implementation for Dynamics 365 solutions 40 Implement a performance strategy for Dynamics 365 solutions 41 Cutover strategy for Dynamics 365 solutions 42 Post go-live strategy for Dynamics 365 solutions 42 Configure apps in Finance and Operations Get started with configuration and personalization in Finance and Operations apps 43 Configure your user interface in Finance and Operations apps 43 Configure your data in Finance and Operations apps 43 ","date":"5 February 2023","externalUrl":null,"permalink":"/cert-learn/biz-app-learning/2023-02-05-mb-700/","section":"Dynamics 365 Finance Operation Certificate","summary":"\u003cp\u003e\u003cstrong\u003eExam/Learning Path:\u003c/strong\u003e \u003ca\n  href=\"https://docs.microsoft.com/certifications/exams/mb-700\"\n    target=\"_blank\"\n  \u003ehttps://docs.microsoft.com/certifications/exams/mb-700\u003c/a\u003e\u003c/p\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003e\u003cstrong\u003eLearning Path\u003c/strong\u003e\u003c/th\u003e\n          \u003cth\u003e\u003cstrong\u003eModule\u003c/strong\u003e\u003c/th\u003e\n          \u003cth\u003e\u003cstrong\u003eWeek\u003c/strong\u003e\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/paths/become-solution-architect/\"\n    target=\"_blank\"\n  \u003eArchitect solutions for Dynamics 365 and Microsoft Power Platform\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/becoming-solution-architect/\"\n    target=\"_blank\"\n  \u003eBecoming a solution architect for Dynamics 365 and Microsoft Power Platform\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e1\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/discover-customer-needs/\"\n    target=\"_blank\"\n  \u003eDiscover customer needs as a Solution Architect for Dynamics 365 and Microsoft Power Platform\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e2\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/propose-solution/\"\n    target=\"_blank\"\n  \u003ePropose a solution as a Solution Architect for Microsoft Power Platform and Dynamics 365\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e2\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/work-with-requirements/\"\n    target=\"_blank\"\n  \u003eWork with requirements as a solution architect for Microsoft Power Platform and Dynamics 365\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e3\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/fit-gap-analysis/\"\n    target=\"_blank\"\n  \u003ePerform fit gap analysis\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e3\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/paths/use-lcs-design-plan-implementation-finance-operations/\"\n    target=\"_blank\"\n  \u003eUse Lifecycle Services to design and plan an implementation of Finance and Operations apps\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/get-started-lifecycle-services-finance-operations/\"\n    target=\"_blank\"\n  \u003eGet started with Lifecycle Services for Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e4\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/design-plan-implementation-finance-operations/\"\n    target=\"_blank\"\n  \u003eDesign and plan an implementation of Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e5\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/dynamics-translation-service/\"\n    target=\"_blank\"\n  \u003eTranslate Dynamics 365 apps and documentation with Dynamics 365 Translation Service\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e6\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/paths/migrate-data-go-live-finance-operations/\"\n    target=\"_blank\"\n  \u003eMigrate data and go live with Finance and Operations apps\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/prepare-data-migration-finance-operations/\"\n    target=\"_blank\"\n  \u003ePrepare data for migration to Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e7\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/work-data-management-finance-operations/\"\n    target=\"_blank\"\n  \u003eWork with data management in Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e8\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/perform-uat-finance-operations/\"\n    target=\"_blank\"\n  \u003ePerform user acceptance testing in Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e9\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/prepare-go-live-finance-operations/\"\n    target=\"_blank\"\n  \u003ePrepare to go-live with Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e10\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/paths/implement-finance-operations/\"\n    target=\"_blank\"\n  \u003eImplement Finance and Operations apps\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/get-started-implementation-project/\"\n    target=\"_blank\"\n  \u003eGet started with a Finance and Operations implementation project\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e10\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/fasttrack-customer-success-program/\"\n    target=\"_blank\"\n  \u003eFastTrack Customer Success Program for Finance and Operations\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e11\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/get-started-lifecycle-services-finance-operations/\"\n    target=\"_blank\"\n  \u003eGet started with Lifecycle Services for Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e12\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/design-plan-implementation-finance-operations/\"\n    target=\"_blank\"\n  \u003eDesign and plan an implementation of Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e13\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/perform-uat-finance-operations/\"\n    target=\"_blank\"\n  \u003ePerform user acceptance testing in Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e14\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/work-data-management-finance-operations/\"\n    target=\"_blank\"\n  \u003eWork with data management in Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e15\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/prepare-data-migration-finance-operations/\"\n    target=\"_blank\"\n  \u003ePrepare data for migration to Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e16\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/application-lifecycle-finance-operations/\"\n    target=\"_blank\"\n  \u003eImplement application lifecycle management in Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e17\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/explore-extensions-framework-finance-operations/\"\n    target=\"_blank\"\n  \u003eExplore extensions and the extension framework in Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e18\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/business-events-finance-operations/\"\n    target=\"_blank\"\n  \u003eConsume business events in Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e19\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/integration-patterns-finance-operations/\"\n    target=\"_blank\"\n  \u003eIdentify data integration patterns and scenarios in Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e20\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/data-integrations-finance-operations/\"\n    target=\"_blank\"\n  \u003eData integrations with Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e21\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/work-analytics-reporting-finance-operations/\"\n    target=\"_blank\"\n  \u003eWork with analytics and reporting in Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e22\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/introduction-power-platform/\"\n    target=\"_blank\"\n  \u003eIntroduction to Microsoft Power Platform\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e23\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/build-app-solution/\"\n    target=\"_blank\"\n  \u003eHow to build a canvas app\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e24\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/introduction-common-data-service/\"\n    target=\"_blank\"\n  \u003eIntroduction to Dataverse\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e25\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/build-simple-dashboard/\"\n    target=\"_blank\"\n  \u003eHow to build a dashboard\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e25\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/build-automated-solution/\"\n    target=\"_blank\"\n  \u003eHow to build an automated solution\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e26\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/design-build-mobile-apps-finance-operations/\"\n    target=\"_blank\"\n  \u003eDesign and build mobile apps for Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e27\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/upgrades-updates-finance-operations-apps/\"\n    target=\"_blank\"\n  \u003eUpdates and upgrades for Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e28\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/performance-monitoring-finance-operations/\"\n    target=\"_blank\"\n  \u003eWork with performance and monitoring tools in Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e29\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/plan-implement-security-finance-operations/\"\n    target=\"_blank\"\n  \u003ePlan and implement security in Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e30\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/role-security-finance-operations/\"\n    target=\"_blank\"\n  \u003eImplement role-based security in Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e31\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/prepare-go-live-finance-operations/\"\n    target=\"_blank\"\n  \u003ePrepare to go-live with Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e31\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/feature-management-finance-operations/\"\n    target=\"_blank\"\n  \u003eFeature management in Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e32\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/paths/use-success-design/\"\n    target=\"_blank\"\n  \u003eUse Success by Design for Dynamics 365 solutions\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/success-by-design/\"\n    target=\"_blank\"\n  \u003eGet started with Success by Design for Dynamics 365\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e33\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/solution-blueprint/\"\n    target=\"_blank\"\n  \u003eCreate a solution blueprint for Dynamics 365 solutions\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e34\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/test-strategy/\"\n    target=\"_blank\"\n  \u003ePlan a testing strategy for your Dynamics 365 solution\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e35\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/data-models/\"\n    target=\"_blank\"\n  \u003eDesign data models for Dynamics 365 solutions\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e36\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/bi-analytics-design-dynamics-365/\"\n    target=\"_blank\"\n  \u003eBusiness intelligence and analytics design for Dynamics 365 solutions\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e37\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/gap-solution-design-dynamics-365/\"\n    target=\"_blank\"\n  \u003eGap solution design for Dynamics 365 solutions\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e37\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/data-migration/\"\n    target=\"_blank\"\n  \u003eCreate a data migration strategy for Dynamics 365 solutions\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e38\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/fast-track-security/\"\n    target=\"_blank\"\n  \u003eReview the security model for your Dynamics 365 solutions\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e39\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/integration/\"\n    target=\"_blank\"\n  \u003eIntegration design for Dynamics 365 solutions\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e40\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/dual-write-dynamics-365/\"\n    target=\"_blank\"\n  \u003eDual-write implementation for Dynamics 365 solutions\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e40\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/solution-performance/\"\n    target=\"_blank\"\n  \u003eImplement a performance strategy for Dynamics 365 solutions\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e41\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/cutover-strategy-dynamics-365/\"\n    target=\"_blank\"\n  \u003eCutover strategy for Dynamics 365 solutions\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e42\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/post-go-live-dynamics-365/\"\n    target=\"_blank\"\n  \u003ePost go-live strategy for Dynamics 365 solutions\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e42\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/paths/config-d365-finance-operations-apps/\"\n    target=\"_blank\"\n  \u003eConfigure apps in Finance and Operations\u003c/a\u003e\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/introduce-configure-personalization-dynamics-365-finance-operations-apps/\"\n    target=\"_blank\"\n  \u003eGet started with configuration and personalization in Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e43\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/configure-your-ui-dynamics-365-finance-operations-apps/\"\n    target=\"_blank\"\n  \u003eConfigure your user interface in Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e43\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003ca\n  href=\"https://docs.microsoft.com/learn/modules/configure-your-data-dynamics-365-finance-operations-apps/\"\n    target=\"_blank\"\n  \u003eConfigure your data in Finance and Operations apps\u003c/a\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003cstrong\u003e43\u003c/strong\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e","title":"MB-700: Microsoft Dynamics 365: Finance and Operations Apps Solution Architect","type":"cert-learn"},{"content":"","date":"5 February 2023","externalUrl":null,"permalink":"/tags/microsoft-dynamics-365-marketing/","section":"Tags","summary":"","title":"Microsoft Dynamics 365 Marketing","type":"tags"},{"content":"","date":"2 February 2023","externalUrl":null,"permalink":"/tags/best-practices/","section":"Tags","summary":"","title":"Best Practices","type":"tags"},{"content":"","date":"2 February 2023","externalUrl":null,"permalink":"/tags/build-optimization/","section":"Tags","summary":"","title":"Build Optimization","type":"tags"},{"content":"","date":"2 February 2023","externalUrl":null,"permalink":"/tags/configuration/","section":"Tags","summary":"","title":"Configuration","type":"tags"},{"content":"","date":"2 February 2023","externalUrl":null,"permalink":"/tags/tips/","section":"Tags","summary":"","title":"Tips","type":"tags"},{"content":"","date":"2 February 2023","externalUrl":null,"permalink":"/tags/toolbar/","section":"Tags","summary":"","title":"Toolbar","type":"tags"},{"content":"","date":"2 February 2023","externalUrl":null,"permalink":"/categories/tools--tips/","section":"Categories","summary":"","title":"Tools \u0026 Tips","type":"categories"},{"content":"","date":"2 February 2023","externalUrl":null,"permalink":"/categories/visual-studio/","section":"Categories","summary":"","title":"Visual Studio","type":"categories"},{"content":"Some configurations that you should make for Visual studio in newly deplopyed FinOps environments.\n1. Show line number # Open Visual studio as Administrator right. Click on the Dynamics 365 drop down menu on the toolbar and select Options. Text editor -\u0026gt; X++ Show line number 2. Best practice rules # Click on the Dynamics 365 drop down menu on the toolbar and select Options. In Dynamics 365, select Best Practices and select each of the following: Microsoft.Dynamics.AX.Framework.BestPracticeFramework.UIRules Microsoft.Dynamics.AX.Framework.CodeStyleRules Microsoft.Dynamics.AX.Framework.DataAccessRules Microsoft.Dynamics.AX.Framework.DataEntityRules Microsoft.Dynamics.AX.Framework.DataMethodRules Microsoft.Dynamics.AX.Framework.DepreciatedElementsRules Microsoft.Dynamics.AX.Framework.MaintainabilityRules Microsoft.Dynamics.AX.Framework.StaticCodeValidationRules 3. Build # If you want to lower building time\nClick on the Dynamics 365 drop down menu on the toolbar and select Options. In Dynamics 365, select Build and select Build Modules in Parallel Build More information on this feature\n4. Projects # Click on the Dynamics 365 drop down menu on the toolbar and select Options. In Dynamics 365, select Build and select Organize projects by element type Synchronize database on build for newly created project Order labels in label file by their ID project 5. Customize toolbars # Right click on Toolbars, choose Customize toolbars-1 Create a new toolbar named D365 toolbars-2 Switch to Commands tab, Choose D365 in Toolbar toolbars-3 Choose Add Command -\u0026gt; Extensions -\u0026gt; Add commands that you want toolbars-4 Here are my favorites\ntoolbars-5 Now you can access them directly from toolbars, it will save you some clicks.\ntoolbars-6 ","date":"2 February 2023","externalUrl":null,"permalink":"/posts/vs-tips-finops/","section":"Posts","summary":"Essential Visual Studio configuration tips for Dynamics 365 Finance and Operations development. Optimize your development environment with best practices, build settings, and custom toolbars.","title":"Visual Studio Tips for Dynamics 365 Finance Operations","type":"posts"},{"content":"A comparison between Dynamics 365 Finance \u0026amp; Supply Chain Management and Dynamics 365 Business Central in terms of features, capabilities and suitability for different types of businesses that helps you choose which solution is optimized for your company.\nDynamics 365 Finance Operations Dynamics 365 Business Central Dynamics 365 Finance Operations applications that are specifically designed to connect individuals, procedures, information, and insights across various business areas such as finance, project management, human resources, supply chain, and commerce. It allows for flexible deployment options and the ability to adapt to new business priorities as needed. A all-in-one business management tool that assists small and medium-sized businesses in integrating their financial, sales, service, and operations teams through a single user-friendly application that can be implemented quickly. It is distributed, maintained, and expanded by specialized partner channels. Mid-market to large enterprises with 50 – 1000+ users Small to medium-sized businesses (SMBs) with 3 to 250+ users Organizations with in-house IT resources to support go-live and maintenance Businesses who need fast deployment and have limited IT resources to support Deep industry and vertical capabilities within applications Over 2000+ industry and horizontal apps on AppSource optimized for SMBs Individually deployable solutions for sales, service, customer insights, finance, projects, HR, supply chain, commerce, and more Single solution that supports finance, sales, service, projects, supply chain, warehousing, manufacturing, and more Centralized operating models, with a single deployment spanning multiple companies, entities, and/or countries Decentralized operating model, with separate deployments for each company, entity, and or country There is also an ability to use a hub and spoke model is provided, where Dynamics 365 Finance \u0026amp; Supply Chain is deployed in the main office and Business Central in subsidiary locations.\n","date":"26 January 2023","externalUrl":null,"permalink":"/posts/comparation-finops-business-central/","section":"Posts","summary":"Detailed comparison of Dynamics 365 Finance \u0026amp; Supply Chain Management vs Business Central. Choose the right Microsoft ERP solution based on company size, features, and business requirements.","title":"A comparison between Dynamics 365 Finance \u0026 Dynamics 365 Business Central","type":"posts"},{"content":"","date":"26 January 2023","externalUrl":null,"permalink":"/categories/business-central/","section":"Categories","summary":"","title":"Business Central","type":"categories"},{"content":"","date":"26 January 2023","externalUrl":null,"permalink":"/tags/business-central/","section":"Tags","summary":"","title":"Business Central","type":"tags"},{"content":" ERP SOLUTIONS ERP SOLUTIONS SERVICES CRM-SOLUTIONS AI-SOLUTIONS COLLABORATION-SOLUTIONS POWER PLATFORM ","date":"20 January 2023","externalUrl":null,"permalink":"/posts/microsoft-dynamics-365-ecosystem-map/","section":"Posts","summary":"Comprehensive visual mapping of the complete Microsoft Dynamics 365 ecosystem including ERP, CRM, AI, collaboration, and Power Platform solutions. Navigate the full Microsoft business applications landscape.","title":"Microsoft Dynamics 365 Ecosystem map","type":"posts"},{"content":"","date":"1 January 2023","externalUrl":null,"permalink":"/tags/filter-pane/","section":"Tags","summary":"","title":"Filter Pane","type":"tags"},{"content":"","date":"1 January 2023","externalUrl":null,"permalink":"/tags/filtering/","section":"Tags","summary":"","title":"Filtering","type":"tags"},{"content":" https://learn.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/user-interface/filtering\n1. Introduction 2. Filter expressions 2.1. Other frequent filter expressions 3. Filter Pane 3.1. When is the Filter Pane available? 3.2. What data does the Filter Pane work on? 3.3. What fields are initially shown in the Filter Pane? 3.4. Can I control the default fields that appear in the Filter Pane? 3.5. I don’t want users to be able to filter on a specific field or modify an existing filter. How do I accomplish this? 3.6. Can I control the fields that appear in the Add a filter field list in the Filter Pane? 3.7. How is the Filter Pane used? 4. QuickFilter 4.1. Why don\u0026rsquo;t I have a column selector in my QuickFilter? 4.2. Can I use the QuickFilter to filter other collection controls (such as trees)? 5. Grid column header filtering/sorting 1. Introduction # Microsoft Dynamics AX 2012 offers the following filtering options.\nFilter option Description Filter by grid The user defines filter conditions in input fields below the grid column headers. Filter by selection (filter by field) The user selects a field value and uses that value as a filter condition. Advanced filter The user opens a dialog box that contains advanced filtering options (filter on columns, not on the form; join additional data sources; sort by multiple columns; and so on). Finance and operations offers the following filtering options.\nFilter option Description Filter Pane An inline pane that slides in from the left, and that contains multiple filter criteria that can be applied to the targeted content. QuickFilter A framework-provided filtering mechanism that can appear above any list or grid, and that provides fast single-column filtering. Grid column filtering The user can define filter conditions and perform single-column sorting by using a drop dialog that is opened from the grid column header. Advanced filter or sort For most advanced filtering scenarios, the migrated Advanced filter form from Dynamics AX 2012 is still available. 2. Filter expressions # One important difference between filtering in finance and operations apps and filtering in Dynamics AX 2012 is related to the way that query symbols are used when filter values are defined (for example, \u0026ldquo;*\u0026rdquo; to match 0 or more characters, or \u0026ldquo;..\u0026rdquo; to specify a range of values to match). In Dynamics AX 2012, these symbols are highly visible during the filtering experience. For example, for the filter by grid option, if a user selects the contains operator on a field, the system translates that operator by adding wildcard characters (*) to each end of the current expression. In the current version, the query symbols are implied by the selected operator and aren\u0026rsquo;t injected into the user interface. This makes filtering more intuitive and simpler for users. For users who want to specify additional filter conditions by using specific query symbols, or users who must enter more complex conditions, the matches operator is provided for each data type. For all other operators, the query symbols are interpreted as literals. For example, the filter condition \u0026ldquo;First name MATCHES A\u0026rdquo; finds all records where the first name starts with the letter A. However, the filter condition \u0026ldquo;First Name IS A*\u0026rdquo; finds records where the first name is literally equal to \u0026ldquo;A*.\u0026rdquo; The following table shows how the client translates between finance and operations apps filter operators and Dynamics AX 2012 query syntax.\nFilter operator Finance and operations apps query syntax Is exactly “circle” / Is equal to “circle” “circle” Is not “circle” / Is not equal to “circle” “!circle” Is one of “circle”, “square”, “circlesquare” “circle,square,circlesquare” Contains “circle” “*circle*” Does not contain “circle” “!*circle*” Begins with “circle” “circle*” After “circle” / Greater than “circle” “\u0026gt;circle” Greater than or equal “circle” “circle..” Before “circle” / Less than “circle” “\u0026lt;circle” Less than or equal “circle” “..circle” Between “square” and “circle” “square..circle” Any query syntax that doesn\u0026rsquo;t match the preceding templates is interpreted as the matches operator.\n2.1. Other frequent filter expressions # Users may want to filter for blank values in column. While there is no filter operator for this specifically, the syntax for performing this filtering remains the same as Dynamics AX 2012. With either the matches operator or the is equal to operator, users can type \u0026quot;\u0026quot; to retrieve rows with blank values for the current column. For example, First Name IS \u0026ldquo;\u0026rdquo; will find all records where the first name is blank. Note that \u0026quot;\u0026quot; only matches rows where the column value is the empty string and does not match rows where the column value is NULL or 0.\nUsers may also want to filter for records that do not belong to a specific list of values. While \u0026ldquo;is not one of\u0026rdquo; is not a filter operator, this filter expression can be achieved using the matches operator by negating each list item in the list. For example, !circle, !square will find all records that are neither \u0026ldquo;circle\u0026rdquo; nor \u0026ldquo;square.\u0026rdquo;\n3. Filter Pane # The Filter Pane provides an easy-to-use interface for filtering full page lists. The Filter Pane is an inline pane that slides in from the left side of the screen and pushes the page content to the right, so that users can see the data that they want to filter. Users open this filter mechanism by clicking the system-defined Show filters button on the left side of the page. After it has been opened, the Filter Pane remains visible until the user goes to a new page, or until the user closes the Filter Pane by using the Hide filters button.\n3.1. When is the Filter Pane available? # Currently, the Filter Pane is available for all forms except the following forms:\nDrop dialogs Dialogs Enhanced previews Lookups Form parts Parts Table of contents form type Forms that have no data sources Note: The availability of the Filter Pane on particular forms and form types is evolving, so this list might change.\n3.2. What data does the Filter Pane work on? # Because the Filter Pane is targeted at full page lists, it works only on the tables and fields that are directly joined (by inner/outer joins) to the first master data source on the form. This filtering mechanism isn\u0026rsquo;t intended for filtering on secondary collections, or for filtering on other root data sources and their directly joined data sources. Other filtering mechanisms (QuickFilter, grid column filtering, and so on) are available to meet these other requirements.\n3.3. What fields are initially shown in the Filter Pane? # Here is how the fields that are initially shown in the Filter Pane are selected:\nAll ranges/filters that currently exist on the query (only non-hidden filters/ranges are shown) are used. If no ranges filters currently exist on the query, the fields from the primary index from the first master data source are used. If there are no fields from the primary index from the first master data source, the TitleFields that are defined directly on the first master data source are used. If no TitleFields are defined, no default fields are shown. (Currently, if the first master data source extends another table (for example, table B), we don\u0026rsquo;t show the TitleFields from table B. However, we plan to add that check in the future.) 3.4. Can I control the default fields that appear in the Filter Pane? # Developers can make sure that a particular field appears in the Filter Pane by adding an empty filter for that field to the query. For an example, see the FmCustomer form, which adds the filters post super() in form init(). Note that after an empty field has been added to guarantee that it appears in the Filter Pane, the fields in the Filter Pane will always be those that are explicitly on the query, and will never be the TitleFields or fields from the primary index on the first master data source.\n3.5. I don’t want users to be able to filter on a specific field or modify an existing filter. How do I accomplish this? # Developers can affect whether users can modify/add filters on certain fields by changing the status of the filters. The allowed values are in the RangeStatus enum:\nOpen (default) – The user can see and modify this filter. Locked – The user can see the filter value but can\u0026rsquo;t modify it. The user also can\u0026rsquo;t add another filter on this column. Hidden – The user can\u0026rsquo;t see that there is a filter on this column. The user also can\u0026rsquo;t add another filter on this column. 3.6. Can I control the fields that appear in the Add a filter field list in the Filter Pane? # The fields that appear in the Add a filter field list are all the filterable fields from the query that involves the first master data source on the form. Therefore, developers can\u0026rsquo;t control the fields that appear in this list. Usually, if you see unexpected fields or can\u0026rsquo;t find the fields that you want to filter on, the fields that you\u0026rsquo;re expecting are either on a different master data source (not the first) or on a child collection.\n3.7. How is the Filter Pane used? # The Filter Pane is simple and straightforward to use. First, select a filtering operator in the list that is associated with each filter field. Note that the set of operators that appears depends on the data type of the field. Then enter an appropriate value for the filter condition, and click Apply. The form is updated based on the filter criteria that you specified.\n4. QuickFilter # In Dynamics AX 2012, the QuickFilter was a framework control that was automatically added only to list pages. In finance and operations apps, the QuickFilter is now a modeled control that can be associated with any grid in the system. As the user starts to type, a column selector drop-down appears to guide the user toward the column that the filter will be applied to. The developer can also specify the default column for the QuickFilter. If no column is specified by the developer, the default column is the first field that can be filtered in the grid.\nQuickFilter control. 4.1. Why don\u0026rsquo;t I have a column selector in my QuickFilter? # Column selectors are shown only for QuickFilters that are attached to grids. If you don\u0026rsquo;t see a column selector, the most likely reason is that the TargetControl property on the QuickFilter is blank. This property must point to the grid that it should operate on. If the TargetControl property is set correctly, but you don\u0026rsquo;t see a column selector, you might not have any filterable columns in your grid. In addition to non-text controls (such as images), controls that are bound to data methods aren\u0026rsquo;t filterable.\n4.2. Can I use the QuickFilter to filter other collection controls (such as trees)? # Yes, you can use the QuickFilter to filter other collection controls, but you must manually wire up the filtering. Here are the general steps:\nLeave the TargetControl property blank. Override the applyFilter() method on the QuickFilter. Write code in that method to perform the desired filtering. 5. Grid column header filtering/sorting # In finance and operations apps, the grid filtering experience is more closely aligned with the experience in Microsoft Excel. When the user clicks a column header, a drop-down dialog appears, and the user can use it to filter the column. The filtering experience here mimics the filtering experience in the Filter pane. Additionally, there are options to sort the grid based on the column that is currently selected.\n[!NOTE] Some columns in a grid may not be filterable. In these cases, the column header will not be clickable. From a technical perspective, only columns corresponding to fields in a SQL table can be filtered on or sorted. Columns whose values are computed via code are not filterable or sortable using grid column headers, the Filter pane, QuickFilter, or Advanced filter or sort.\n","date":"1 January 2023","externalUrl":null,"permalink":"/posts/filtering/","section":"Posts","summary":"Master all filtering options in Dynamics 365 Finance and Operations including Filter Pane, QuickFilter, and grid column filtering. Comprehensive guide with filter expressions and advanced techniques.","title":"Filtering options Dynamics 365 Finance Operations","type":"posts"},{"content":"","date":"1 January 2023","externalUrl":null,"permalink":"/tags/grid-filtering/","section":"Tags","summary":"","title":"Grid Filtering","type":"tags"},{"content":"","date":"1 January 2023","externalUrl":null,"permalink":"/tags/quickfilter/","section":"Tags","summary":"","title":"QuickFilter","type":"tags"},{"content":"","date":"1 January 2023","externalUrl":null,"permalink":"/tags/user-interface/","section":"Tags","summary":"","title":"User Interface","type":"tags"},{"content":"Introducing one of the most famous characters in literature, Jean Valjean—the noble peasant imprisoned for stealing a loaf of bread—Les Misérables ranks among the greatest novels of all time. In it, Victor Hugo takes readers deep into the Parisian underworld, immerses them in a battle between good and evil, and carries them to the barricades during the uprising of 1832 with a breathtaking realism that is unsurpassed in modern prose.\n","date":"30 December 2022","externalUrl":null,"permalink":"/books/les-mis%C3%A9rables/","section":"","summary":"\u003cp\u003eIntroducing one of the most \u003cstrong\u003efamous characters\u003c/strong\u003e in literature, Jean Valjean—the noble peasant imprisoned for stealing a loaf of bread—Les Misérables ranks among the greatest novels of all time. In it, Victor Hugo takes readers deep into the Parisian underworld, immerses them in a battle between good and evil, and carries them to the barricades during the uprising of 1832 with a breathtaking realism that is unsurpassed in modern prose.\u003c/p\u003e","title":"Les Misérables","type":"books"},{"content":"","date":"13 November 2022","externalUrl":null,"permalink":"/tags/entities/","section":"Tags","summary":"","title":"Entities","type":"tags"},{"content":"There are some entities that you can use to get the on-hand inventory from Dynamics 365 Finance Operations:\n:(fa-solid fa-shield-check):\nInventorySiteOnHandEntity InventorySiteOnHandV2Entity InventWarehouseInventoryStatusOnHandEntity InventWarehouseInventoryStatusOnHandV2Entity InventWarehouseOnHandEntity InventWarehouseOnHandV2Entity You can extend the ententies by adding new fields to tables and entities.\nAfter you add fields to tables that are used by the inventSiteOnHandView view, you must sync the engine so that the extensions are correctly recognized.\nExtend the InventSiteOnHandView view by adding the extension field. Extend the InventSiteOnHandAggregatedView view with the extension fields. Extend the InventSiteOnHandAggregatedViewBuilder viewBuilder class by modifying the getExtensionFields() method. In this way, you map old view fields to new view fields when viewBuilder synchronization is run. For example, you\u0026rsquo;ve added the following four fields to the InventTable table through extension:\nCustom field 1 Custom field 2 Custom field 3 Custom field 4 In the case, you must modify the getExtensionFields() method in the following way.\n","date":"13 November 2022","externalUrl":null,"permalink":"/posts/extend-on-hand-entities-fin-ops/","section":"Posts","summary":"Extend on-hand inventory entities in Dynamics 365 Finance and Operations by adding custom fields to tables, views, and entities. Step-by-step guide for inventory integration customization.","title":"Extend on-hand inventory entities FinOps","type":"posts"},{"content":"","date":"13 November 2022","externalUrl":null,"permalink":"/tags/extension/","section":"Tags","summary":"","title":"Extension","type":"tags"},{"content":"","date":"13 November 2022","externalUrl":null,"permalink":"/categories/integration/","section":"Categories","summary":"","title":"Integration","type":"categories"},{"content":"","date":"13 November 2022","externalUrl":null,"permalink":"/tags/inventory-views/","section":"Tags","summary":"","title":"Inventory-Views","type":"tags"},{"content":"","date":"13 November 2022","externalUrl":null,"permalink":"/tags/odata/","section":"Tags","summary":"","title":"Odata","type":"tags"},{"content":"","date":"13 November 2022","externalUrl":null,"permalink":"/tags/on-hand-inventory/","section":"Tags","summary":"","title":"On-Hand-Inventory","type":"tags"},{"content":"","date":"9 November 2022","externalUrl":null,"permalink":"/tags/inventory/","section":"Tags","summary":"","title":"Inventory","type":"tags"},{"content":"","date":"9 November 2022","externalUrl":null,"permalink":"/tags/on-hand/","section":"Tags","summary":"","title":"On-Hand","type":"tags"},{"content":" 1. Inventory reservation hierarchy in Warehouse management # The reservation functionality can be used only for items that are enabled for warehouse management processes. However, if an item is itself enabled for warehouse management processes, it can be used both in warehouses that are enabled for warehouse management processes and warehouses that are not. The behavior in reservation scenarios is different, depending on the warehouse setup.\nThe functionality is built on reservation hierarchies and is intended to support the following:\nFlexible warehouse operations. Postponement of reservation details. Clear separation of which inventory dimensions can be specified, and when they can be specified. 1.1 Reservation hierarchies # A typical reservation hierarchy for an item that uses the Site, Warehouse, Inventory status, Location, and License plate dimensions as physical inventory dimensions.\nReservation-hierarchies The level with the lowest value in the Reservation hierarchy level column is the least-specific level, in the example above this is the site level. The higher the value, the more details are required to make a reservation on that level.\n1.2 Reservation hierarchies implementation # Reservation-hierarchies-implementation The definitions of reservation hierarchies are stored in the WHSReservationHierarchy and WHSReservationHierarchyElement tables. These are shared tables. A reservation hierarchy can be associated with one item within a company which presents by WHSReservationHierarchyItem. The WHSReservationHierarchyProvider class provides a large number of APIs that are useful when you work with and query the reservation hierarchy for an item.\n1.3 Making reservations on different levels # Based on the reservation hierarchy, you can make reservations on different levels without providing details about where to reserve and what dimensions to reserve on. This lets you postpone specific details, such as the location or license plate to make the reservation. The location to reserve items on can be determined later by the location directive.\nAs another example, you make reservations for a sales order created on site Site1 and warehouse WHS42, which is a warehouse that is enabled for WHS processes, and for the Available inventory status. For this example, the reservation is made only on the inventory status level.\nreservations-on-different-levels Location Main006 will be specified when processing the work\nlocation 2. Impact of the reservation hierarchy setup # For warehouses that are enabled for warehouse management processes, the setup of reservation hierarchies greatly affects the processes for outbound orders, such as sales orders and transfer orders.\nWhen you set up a reservation hierarchy, the key is to determine which dimensions should be positioned above the location level in the hierarchy, and which should be below. The following table describes the effects of arranging dimensions either above or below the location level.\nDimension placement Description Dimension above location The inventory dimension above the location level must be determined before the Warehouse management functionality can be used. Therefore, this typically happens during order processing or by letting the reservation system determine the dimensions. Batch above location Process industry functionality for batches requires that the Batch number dimension be above the Location dimension in the reservation hierarchy. When this is the case, all functionality for First Expiry First Out (FEFO), same batch, batch disposition codes, and batch attributes is supported. Dimensions below location WHS and warehouse workers can determine the Location dimension and the dimensions below it. The Location dimension and any dimensions below it should not be entered into the sales and transfer lines if you expect work to be created. For example, if the Batch number dimension is below the Location dimension, it should not be specified on the sales line. Otherwise, WHS cannot create work to carry out the pick and pack operations. 3. On-hand representation and calculations # 3.1 On-hand for items that are using warehouse management processes # The following table shows how the data might look for an item with 10 pieces available physical and 2 pieces reserved physical on the status level.\nLevel Site Warehouse Inventory status Location License plate Available physical Available ordered Reserved physical Reserved ordered Item 10 10 2 0 Site S1 10 10 2 0 Warehouse S1 WH1 10 10 2 0 Status S1 WH1 Available 10 10 2 0 Location S1 WH1 Available L001 12 12 0 0 License plate S1 WH1 Available L001 LP1 12 12 0 0 The reservations are tracked only on the levels that are affected by the reservation. Because of the way that information about availability and reservations is stored, the corresponding values from the InventSum table cannot be used directly for items that are using warehouse management processes.\nThe following steps provide a high-level overview of the algorithm that determines the available on-hand quantity for an item and a set of inventory dimensions:\nDetermine the available on-hand quantity, based on the exact dimensions. This is the lowest level in the hierarchy. Determine the smallest available quantity from all levels above the level found in step 1. Return the smaller of the quantities found in step 1 and step 2. This is the available quantity. Example A # The following physical inventory exists for the item (some dimensions like site, inventory status, license plate are irrelevant and are omitted throughout the scenario):\nWarehouse: W1, Location: L1, Physical inventory: 6 A sales order with one line is created and reserved:\nWarehouse: W1, Quantity: 5 The sales order is released to warehouse. As a result warehouse work is created:\nWork type: Pick, Warehouse: W1, Location: L1, Quantity: 5 Work type: Put, Warehouse: W1, Location: Baydoor, Quantity: 5 Now we have the following inventory transactions:\nReference Warehouse Location Status issue Quantity Sales line W1 Reserved physical -5 Pick work W1 L1 Reserved physical -5 Put work W1 Baydoor Ordered 5 So once we roll up the transactions into the InventSum table the contents of the table will look like this\nWarehouse Location Physical inventory Reserved physical Available physical Ordered W1 0 5 -5 0 W1 L1 6 5 1 0 W1 Baydoor 0 0 0 5 On hand quantities for warehouse W1 like we used to do it in versions prior to AX 2012 R3 (sum up InventSum quantities for warehouse W1)\nWarehouse Physical inventory Reserved physical Available physical Ordered W1 6 10 -4 5 We should have shipped 5 items and we have 6 items on stock, 1 item is available. This is exactly the reason why summing up available and reserved quantities from the InventSum table may produce incorrect results for items that use warehouse management processes.\nThe sales reservation was taken on the warehouse level of the reservation hierarchy to ensure that we keep enough on hand in the warehouse to ship the reserved quantity. The pick work reservation was taken on the location level and it ensures that the reserved quantity will still be physically available when the warehouse worker comes to the warehouse location to pick it. Work reservation does not affect physical availability on the warehouse level. This means that the new reservation engine will be able to figure out that we still have one item available on the warehouse level.\nWarehouse Physical inventory Reserved physical Available physical Ordered W1 6 5 1 5 Example B # Reference Warehouse Location Status issue Status receipt Quantity Purchase line W1 L1 Purchased 10 Purchase line W1 L2 Purchased 20 Sales line W1 Reserved physical -25 Pick work W1 L1 Reserved physical -10 Put work W1 Baydoor Ordered 10 After the transactions are aggregated the InventSum table contains the following information\nWarehouse Location Physical inventory Reserved physical Available physical Ordered W1 0 25 -25 0 W1 L1 10 10 0 0 W1 L2 20 0 20 0 W1 Baydoor 0 0 0 10 For each of the levels of the reservation hierarchy it stores available and reserved quantities in the WHSInventReserve table which allows the engine to calculate availability correctly.\nTo work with available quantities regardless of whether the item is using warehouse management processes or not the InventIAvailability interface was introduced. The following list contains the InventSum fields and methods that should not be used directly and the corresponding InventIAvailability methods that should be used instead:\nObsolete field/method Corresponding InventIAvailability method InventSum.AvailOrdered InventIAvailability.availTotal() InventSum.availOrderedCalculated() InventIAvailability.availTotal() InventSum.AvailPhysical InventIAvailability.availPhysical() InventSum.availPhysicalCalculated() InventIAvailability.availPhysical() InventSum.availReservation() InventIAvailability.availReservation() InventSum.Ordered InventIAvailability.ordered() InventSum.orderedSum() InventIAvailability.orderedSum() InventSum.ReservOrdered InventIAvailability.reservOrdered() InventSum.ReservPhysical InventIAvailability.reservPhysical() 3.2 Implementation of on-hand calculations # Three major APIs were introduced for retrieving item availability:\n– InventAvailabilityProvider – InventAvailabilityFormCache – InventOnhand\nInventAvailabilityProvider InventIAvailability inventIAvailability = InventAvailabilityProvider::findByItemDim( InventTable::find(itemdId), dim).parmInventAvailability(); Info(strFmt(\u0026#34;inventIAvailability, availPhysical %1, ordered %2, reservPhysical %3, reservOrdered %4\u0026#34;, inventIAvailability.availPhysical(), inventIAvailability.ordered(), inventIAvailability.reservPhysical(), inventIAvailability.reservOrdered())); InventAvailabilityByUnit inventAvailabilityByUnitSum = InventAvailabilityProvider::findByItemSumDim( InventTable::find(itemdId), inventSum, dim); Info(strFmt(\u0026#34;inventAvailabilityByUnitSum, availPhysical %1, ordered %2, reservPhysical %3, reservOrdered %4\u0026#34;, inventAvailabilityByUnitSum.availPhysical().qty(false), inventAvailabilityByUnitSum.ordered().qty(false), inventAvailabilityByUnitSum.reservPhysical().qty(false), inventAvailabilityByUnitSum.reservOrdered().qty(false))); InventAvailabilityFormCache In scenarios where you want to display available quantities on a form you can use the InventAvailabilityFormCache class. It is responsible for retrieving and caching available on hand quantities per item per inventory dimension combination. To use it on a form you need to:\n– Declare an InventAvailabilityFormCache field in classDeclaration of the form. – Initialize the cache field in the init method of the form:\npublic void init() { super(); inventAvailabilityFormCache = InventAvailabilityFormCache::construct(); } – Flush the cache in the executeQuery method of the primary data source that the InventSum data source is joined to:\npublic void executeQuery() { inventAvailabilityFormCache.refreshCache(); super(); } – Create display methods for available on hand fields that need to be displayed on the form. If InventDim is joined to InventSum then the display methods should be declared on the InventSum data source:\npublic display InventQtyReservPhysical reservPhysical(InventSum _inventSum) { return inventAvailabilityFormCache.availabilityFromSumJoinedWithDim(_inventSum, inventDim_ds).reservPhysical(); } Note that the availabilityFromSumJoinedWithDim method should be used. Otherwise, if InventSum is joined to InventDim then the display method should be declared on the InventDim data source:\npublic display InventQtyReservPhysical reservPhysical(InventDim _inventDim) { return inventAvailabilityFormCache.availabilityFromDimJoinedWithSum(_inventDim, inventSum_ds).reservPhysical(); } Note that the availabilityFromDimJoinedWithSum method should be used.\nInventOnhand InventOnhand inventOnHand = InventOnhand::newParameters(itemdId, dim , dimParm); Info(strFmt(\u0026#34;inventOnHand, availPhysical %1, ordered %2, reservPhysical %3, reservOrdered %4\u0026#34;, inventOnHand.availPhysical(), inventOnHand.ordered(), inventOnHand.reservPhysical(), inventOnHand.reservOrdered())); The on-hand information is stored in a table called WHSInventReserve. The WHSInventReserveDelta table is used to track changes that the current transaction causes in the on-hand quantity. On the final commit, the WHSInventReserve table is updated based on the changes in the WHSInventReserveDelta table.\nBecause many scenarios involve calculating on-hand quantities based on itemId, InventDim, or InventSum records for both WHS-enabled and non-WHS-enabled items, APIs are provided to support the calculations in a seamless way.\nThe following example shows how to instantiate the class that can be used to calculate availability for both WHSenabled and non-WHS-enabled items.\nInventAvailabilitySearch availabilitySearch; InventIAvailability availability; availabilitySearch = InventAvailabilitySearch::construct(); availabilitySearch.setItemId(_itemId); availabilitySearch.setInventDimCriteria(_inventDimCriteria, _inventDimCriteriaParm); availabilitySearch.setInventSum(_inventSum); availability = InventAvailabilityProvider::construct().find(availabilitySearch).parmInventAvailability(); this.AvailOrderedCalculated = availability.availTotal(); this.AvailPhysicalCalculated = availability.availPhysical(); this.ReservPhysical = availability.reservPhysical(); this.OrderedSum = availability.orderedSum(); The InventAvailabilityProvider class provides numerous other APIs that are used to determine the availability based on various types of input. The existing InventOnHandQty class has been updated so that it also provides correct results for items that are enabled for warehouse management processes.\nThe following illustration shows the various classes and interfaces that are used to provide and encapsulate the calculations. Note that, for the sake of simplicity, some details have been omitted.\nInventAvailabilityProvider 4. Reservation strategies # To control the levels of the reservation hierarchy at which reservations are made, the system uses the concept of a reservation strategy. A reservation strategy determines the outcome of a reservation, and the dimensions that are used to make the reservation. Reservation strategies are implemented in the code and are not currently user-configurable.\nEach reservation strategy determines the level that the reservation should be made on. If the dimensions that are passed to the reservation system do not cover all the dimensions to the level defined by the strategy, the reservation system queries the on-hand availability until the required level; then, based on the results of this query, it does the reservation so that it covers all the required dimensions.\nThe reservation strategies that are chosen for a reservation depend on multiple factors, such as the following: • Warehouse setup • Order type\nThe following table describes the reservation strategies that the reservation system uses.\nReservation strategy Description None The reservation is made on the dimensions that are passed, if possible. This strategy is used by inventory blocking, and lets you make reservations on, for example, the site level or the warehouse level. All The reservation is made on all of the dimensions in the reservation hierarchy. This strategy is used, for example, for transfer journals, or for warehouses that have not been enabled for warehouse management processes. Above location The reservation is made only on the locations above the location level. This strategy is used, for example, for sales and transfer orders when reservations are made in a warehouse that is enabled for warehouse management processes. All not allowed blank The reservation is made on the first lowest level that does not allow for blank issue for the inventory dimensions. This strategy enables automatic reservations on non-licenseplate-controlled locations. Batch level This strategy is applied for items for which the Batch number dimension is selected and positioned above the Location dimension in the reservation hierarchy. This strategy is used when only reservations that are reserved ordered can be made. In that case, a reservation until the batch level is attempted. The reservation system supports multiple reservation strategies in sequential order when reservations are made. For example, the system uses the All and All not allowed blank strategies to make reservations for transfer journals.\n5. Details about the implementation of reservation strategies # The following illustration shows the classes that are used to implement the reservation strategies, and the main consumers of the classes. Note that, for the sake of simplicity, some details have been omitted.\nreservation-strategies The implementation is easy to extend, because the instantiation uses the SysExtension framework.\n6. Synchronization of dimensions between receipts and issues # When an inventory transaction is marked or reserved ordered, the inventory dimensions are typically synchronized between receipts and issues. For example, when a purchase order that was created based on a sales order is modified or received, the dimensions are transferred to the inventory transactions for the sales line.\nFor items that are enabled for warehouse management processes, the synchronization differs from the standard behavior. When work must be created, the source line transactions can be reserved only until the level above the location level. If all dimensions are synchronized, work cannot be created. Therefore, dimensions above the location level are not synchronized for all scenarios.\nIf the item and warehouse are enabled for warehouse management processes, and if the issue type is a type that can generate work, such as a sales line, only dimensions above the location level are synchronized. This means that if an item uses batch numbers, and the batch number is placed below the location in the reservation hierarchy, the batch number is not synchronized from receipt to issue transactions.\n7. Details about the implementation of synchronization between receipts and issues # The logic that determines how the dimensions are synchronized is implemented in the following methods on the inventMovement class:\ngetInventDimForReservedTransPhysChange getInventDimForIssueTransFromReceipt ","date":"9 November 2022","externalUrl":null,"permalink":"/posts/reservation-and-on-hand-inventory-in-warehouse-management/","section":"Posts","summary":"Comprehensive guide to inventory reservation hierarchies and on-hand calculations in Dynamics 365 warehouse management. Covers reservation strategies, implementation details, and X++ APIs for WHS-enabled items.","title":"Reservation and on-hand inventory in warehouse management","type":"posts"},{"content":"","date":"9 November 2022","externalUrl":null,"permalink":"/tags/reservation-hierarchy/","section":"Tags","summary":"","title":"Reservation-Hierarchy","type":"tags"},{"content":"","date":"9 November 2022","externalUrl":null,"permalink":"/categories/scm/","section":"Categories","summary":"","title":"SCM","type":"categories"},{"content":"","date":"9 November 2022","externalUrl":null,"permalink":"/tags/warehouse-management/","section":"Tags","summary":"","title":"Warehouse-Management","type":"tags"},{"content":"","date":"9 November 2022","externalUrl":null,"permalink":"/tags/whs/","section":"Tags","summary":"","title":"Whs","type":"tags"},{"content":"","date":"30 October 2022","externalUrl":null,"permalink":"/categories/electronic-reporting/","section":"Categories","summary":"","title":"Electronic Reporting","type":"categories"},{"content":"","date":"30 October 2022","externalUrl":null,"permalink":"/tags/electronic-reporting/","section":"Tags","summary":"","title":"Electronic Reporting","type":"tags"},{"content":"","date":"30 October 2022","externalUrl":null,"permalink":"/tags/excel/","section":"Tags","summary":"","title":"Excel","type":"tags"},{"content":"","date":"30 October 2022","externalUrl":null,"permalink":"/tags/export/","section":"Tags","summary":"","title":"Export","type":"tags"},{"content":"","date":"30 October 2022","externalUrl":null,"permalink":"/tags/ger/","section":"Tags","summary":"","title":"GER","type":"tags"},{"content":"","date":"29 October 2022","externalUrl":null,"permalink":"/tags/xml/","section":"Tags","summary":"","title":"XML","type":"tags"},{"content":"","date":"28 October 2022","externalUrl":null,"permalink":"/tags/import/","section":"Tags","summary":"","title":"Import","type":"tags"},{"content":"","date":"28 October 2022","externalUrl":null,"permalink":"/tags/text-file/","section":"Tags","summary":"","title":"Text File","type":"tags"},{"content":"","date":"27 October 2022","externalUrl":null,"permalink":"/categories/azure/","section":"Categories","summary":"","title":"Azure","type":"categories"},{"content":"","date":"27 October 2022","externalUrl":null,"permalink":"/tags/azure-storage/","section":"Tags","summary":"","title":"Azure Storage","type":"tags"},{"content":"","date":"27 October 2022","externalUrl":null,"permalink":"/tags/cloud-infrastructure/","section":"Tags","summary":"","title":"Cloud Infrastructure","type":"tags"},{"content":"","date":"27 October 2022","externalUrl":null,"permalink":"/tags/connection-string/","section":"Tags","summary":"","title":"Connection String","type":"tags"},{"content":"","date":"27 October 2022","externalUrl":null,"permalink":"/tags/d365fo/","section":"Tags","summary":"","title":"D365fo","type":"tags"},{"content":"","date":"27 October 2022","externalUrl":null,"permalink":"/categories/dimensions/","section":"Categories","summary":"","title":"Dimensions","type":"categories"},{"content":"[FormEventHandler(formStr(Custtable), FormEventType:Initialized)] public static void Custtable_OnInitialized(xFormRun _sender, FormEventArgs _e) { DimensionEntryControl dimControl = _sender.design().controlName(identifierStr(DimensionEntryControlTable)); DimensionEnumeration dimensionSetId = DimensionCache:getDimensionAttributeSetForLedger(); DimensionAttributeSetStorage dimensionAttributeSetStorage; DimensionAttribute dimensionAttribute; DimensionAttributeSetItem dimAttrSetItem; const str Department= \u0026#39;ContosoDept\u0026#39;; const str CostCenter= \u0026#39;ContosoCenter\u0026#39;; dimensionAttributeSetStorage = new DimensionAttributeSetStorage(); while select dimensionAttribute where dimensionAttribute.Name != Department \u0026amp;\u0026amp; dimensionAttribute.Name != CostCenter join dimAttrSetItem where dimAttrSetItem.DimensionAttribute == dimensionAttribute.RecId \u0026amp;\u0026amp; dimAttrSetItem.DimensionAttributeSet == dimensionSetId { dimensionAttributeSetStorage.addItem( dimensionAttribute.RecId, dimensionAttribute.HashKey, NoYes::Yes); } dimControl.parmEditableDimensionSet(dimensionAttributeSetStorage.save()); } ","date":"27 October 2022","externalUrl":null,"permalink":"/posts/disable-editing-of-specific-financial-dimensions-on-form/","section":"Posts","summary":"Control financial dimension editing in Dynamics 365 Finance forms using X++ and DimensionEntryControl. Learn how to programmatically disable specific dimensions while keeping others editable.","title":"Disable editing of specific financial dimensions on form","type":"posts"},{"content":"","date":"27 October 2022","externalUrl":null,"permalink":"/tags/financial-dimensions/","section":"Tags","summary":"","title":"Financial Dimensions","type":"tags"},{"content":"In Dynamics 365 for Finance and Operations Azure storage is used to\nStore files for Attachments Data import and export jobs When FinOps prints a report via Document Reporting Services, SSRS Reporting Services generates an EMF image for each page of the generated document. FinOps then temporarily saves the generated EMF files to Azure Blob storage. Printing archive And more!\nIf you are using tier 1 Cloud-Hosted environment, you can find the azure storage from the Azure resource group in Azure portal.\nFor tier 1, UAT tier 2, and PROD Tier 3, you can create a runnable class and execute to get the Azure storage connection string.\nusing Microsoft.Dynamics.Clx.ServicesWrapper; class GetAzureBlob { public static void main(Args _args) { info(\u0026#39;AzureStorageConnectionString = \u0026#39; + CloudInfrastructure::GetCsuStorageConnectionString()); info(\u0026#39;ClientCertificateThumbprint = \u0026#39; + CloudInfrastructure::GetCsuClientCertificateThumbprint()); } } Once you have the connection string, you can connect it to MS Azure Storage Explorer, Power Automate, or consuming in any framwork/language for integration/backup purposes.\n","date":"27 October 2022","externalUrl":null,"permalink":"/posts/how-to-get-d365-azure-blob-storage-str/","section":"Posts","summary":"Retrieve Azure storage connection strings in Dynamics 365 Finance and Operations using X++ CloudInfrastructure class. Essential for integrations, file operations, and understanding cloud storage architecture.","title":"How to get FinOps Azure storage blob connection string","type":"posts"},{"content":"","date":"20 October 2022","externalUrl":null,"permalink":"/tags/administration/","section":"Tags","summary":"","title":"Administration","type":"tags"},{"content":"","date":"20 October 2022","externalUrl":null,"permalink":"/tags/d365/","section":"Tags","summary":"","title":"D365","type":"tags"},{"content":"There are 2 ways that you can delete SSRS reports in FinOps cloud-Hosted\n1. Using Report server configuiration manager web portal # Open Report server configuiration manager from your VM FinOps Cloud-Hosted and active the Web Portal\n2022-10-20-how-to-remove-ssrs-reports-in-d365-1 You can delete any report from [Servername]/Reports/browse/Dynamics\n2022-10-20-how-to-remove-ssrs-reports-in-d365-3 2. Using Powershell script # Go to RemoveAllReportsFromSsrs.ps1 under K:\\AosService\\PackagesLocalDirectory\\Plugins\\AxReportVmRoleStartupTask\nRun the script to remove all SSRS report.\nIf you want to remove a specific report, you can manipulate the $ReportName\n################################################################################ # This script is used to manually remove reports to SSRS server ################################################################################ param ( [Parameter(Mandatory=$false)] [string]$LogFilePath, [Alias(\u0026#34;ReportServerFqdn\u0026#34;, \u0026#34;ReportServerName\u0026#34;)] [Parameter(Mandatory=$false)] [string[]]$ReportServerIp = \u0026#34;127.0.0.1\u0026#34;, [Parameter(Mandatory=$false)] [string[]]$ReportName = \u0026#34;[report-name].[design-name]\u0026#34;, [Parameter(Mandatory=$false)] [switch]$UseHttps = $false, [Parameter(Mandatory=$false)] [int]$HttpsPort = 443, [Parameter(Mandatory=$false)] [switch]$Help = $false ) Check this article for deploy report using PS script.\n","date":"20 October 2022","externalUrl":null,"permalink":"/posts/how-to-remove-ssrs-reports-in-d365/","section":"Posts","summary":"Remove SSRS reports from Dynamics 365 Finance and Operations Cloud-Hosted environments using Report Server Configuration Manager or PowerShell scripts. Two methods for report cleanup and management.","title":"How to remove SSRS reports in FinOps Cloud-Hosted","type":"posts"},{"content":"","date":"20 October 2022","externalUrl":null,"permalink":"/tags/management/","section":"Tags","summary":"","title":"Management","type":"tags"},{"content":"","date":"20 October 2022","externalUrl":null,"permalink":"/tags/powershell/","section":"Tags","summary":"","title":"PowerShell","type":"tags"},{"content":"-- string to date and time str dateStrYMD = \u0026#39;2022-04-12T13:34:30\u0026#39;; UtcDateTime datetime = DateTimeUtil::anyToDateTime(dateStrYMD); -- Year difference int timeDiff = Global::yearDiff(DateTimeUtil::getSystemDateTime(), DateTimeUtil::date(_myTable.myUTCDateTime)); -- datetime compare DateTimeUtil::newDateTime(today()-3, 0, DateTimeUtil::getCompanyTimeZone()) \u0026gt; datetime ","date":"10 October 2022","externalUrl":null,"permalink":"/posts/date-time-function/","section":"Posts","summary":"Essential X++ date and time functions for Dynamics 365 Finance and Operations development. Code snippets for string conversion, date comparisons, and time zone handling.","title":"Date time function Dynamics 365 Finance Operations","type":"posts"},{"content":"","date":"10 October 2022","externalUrl":null,"permalink":"/tags/datetime/","section":"Tags","summary":"","title":"Datetime","type":"tags"},{"content":"","date":"10 October 2022","externalUrl":null,"permalink":"/tags/functions/","section":"Tags","summary":"","title":"Functions","type":"tags"},{"content":"","date":"10 October 2022","externalUrl":null,"permalink":"/tags/utilities/","section":"Tags","summary":"","title":"Utilities","type":"tags"},{"content":"","date":"28 September 2022","externalUrl":null,"permalink":"/tags/person/","section":"Tags","summary":"","title":"Person","type":"tags"},{"content":"Whenever you add a new person to an user in the user SysUserInfoPage form, the person field grays out.\nuserinfo To remove the person from that user:\nIn the user form System administration \u0026gt; Users \u0026gt; Users, go to Maintain versions. Delete the person. ","date":"28 September 2022","externalUrl":null,"permalink":"/posts/remove-person-from-users/","section":"Posts","summary":"Remove person associations from system users in Dynamics 365 Finance and Operations. Simple solution for user administration when person field becomes grayed out.","title":"Remove a person from an user Dynamics 365 Finance Operations","type":"posts"},{"content":"","date":"28 September 2022","externalUrl":null,"permalink":"/tags/system-administration/","section":"Tags","summary":"","title":"System Administration","type":"tags"},{"content":"","date":"28 September 2022","externalUrl":null,"permalink":"/tags/system-users/","section":"Tags","summary":"","title":"System Users","type":"tags"},{"content":"","date":"28 September 2022","externalUrl":null,"permalink":"/tags/user-administration/","section":"Tags","summary":"","title":"User Administration","type":"tags"},{"content":"","date":"28 September 2022","externalUrl":null,"permalink":"/tags/users-management/","section":"Tags","summary":"","title":"Users Management","type":"tags"},{"content":"","date":"28 September 2022","externalUrl":null,"permalink":"/tags/worker/","section":"Tags","summary":"","title":"Worker","type":"tags"},{"content":"Let\u0026rsquo;s take a composite entity SalesOrderV3Entity as an example.\nScenario # I will need to add new fields to Sales order header that can be used in the composite entity SalesOrderV3Entity. the composite entity SalesOrderV3Entity uses a standard data entity SalesOrderHeaderV2Entity for sales order header; so, we need to extend SalesOrderHeaderV2Entity.\nThe Steps # Add new fields to Main table SalesTable\nAdd new fields to the entity SalesOrderHeaderV2Entity\nAdd new fields to the staging table SalesOrderHeaderV2Staging\nBuild and sync.\nGo to Workspaces -\u0026gt; Data Management -\u0026gt; Framework parameters -\u0026gt; Advanced entity configuration settings -\u0026gt; Refresh entity list.\nYou can automate the Refresh entity list task here\nGo to Workspaces -\u0026gt; Data Management -\u0026gt; Data Entities, find SALES ORDER HEADERS V2 and Generate mapping for it. The new custom fields will be generated for the entity mapping.\n","date":"23 September 2022","externalUrl":null,"permalink":"/posts/add-custom-fields-to-composite-entity/","section":"Posts","summary":"Step-by-step guide to extend data entities and composite entities in Dynamics 365 Finance and Operations with custom fields. Covers table extensions, entity mapping, and staging table modifications.","title":"Add new fields to data entity or composite entity Dynamics 365","type":"posts"},{"content":"","date":"23 September 2022","externalUrl":null,"permalink":"/tags/composite-entity/","section":"Tags","summary":"","title":"Composite Entity","type":"tags"},{"content":"","date":"23 September 2022","externalUrl":null,"permalink":"/tags/custom-fields/","section":"Tags","summary":"","title":"Custom Fields","type":"tags"},{"content":"","date":"23 September 2022","externalUrl":null,"permalink":"/tags/data-entity/","section":"Tags","summary":"","title":"Data Entity","type":"tags"},{"content":"","date":"18 September 2022","externalUrl":null,"permalink":"/tags/admin-provisioning-tools/","section":"Tags","summary":"","title":"Admin Provisioning Tools","type":"tags"},{"content":"After restoring database backup, you want to be able to login to Dynamics 365 Finance Operations with different ternant, you need to use the admin provisioning tool to assign a new tenant.\nBefore 10.0.23 verison # The admin provisioning tool can be found at\nVHD: C:\\AOSService\\PackagesLocalDirectory\\bin\\AdminUserProvisioning.exe\nCloud- hosted: K:\\AOSService\\PackagesLocalDirectory\\bin\\AdminUserProvisioning.exe\nAfter running Provisioning.exe wtih admin right, you will see the update for the admin user in SQL.\nuserinfo Some errors you might face:\nCan not stop the DynamicsAXBatch service on computer Execution Timeout Expired. The timeout period elapsed prior to completion of the operation or the server is not responding. The remote server returned an error: (500) Internal Server Error. Resolution, you can simply stop and start the services manually:\nWorld Wide Web Publishing Service Microsoft Dynamics 365 Unified Operations: Batch Management Service Or you can restart VM using LCS or Azure portal.\nIf the issue Can not stop the DynamicsAXBatch service on computer still persist\nYou can kill the batch service using cmd:\nOpen CMD sc queryex DynamicsAxBatch taskkill /f /pid 8064 queryex There is another error about Database\nCannot open database \u0026ldquo;AxDB\u0026rdquo; requested by the login. The login failed. Login failed for user \u0026lsquo;axdbadmin\u0026rsquo;. Please this post for getting VHD Database password.\nFrom 10.0.23 # From 10.0.23, the Admin user provisioning tool is removed due to security reasons, the reply URL setup for AAD was changed. It is typically used to change the tenant of the environment. You can update the sign in information in the database for the Admin user or any other user. You only need the SID and network alias (email address) from a user that can access the environment or another environment on the same tenant.\nTo get the SID:\nwmic useraccount get name,sid get-sid-cmd Once you have admin SID, you can update the tenant in SQL by using.\nselect ID, SID, NETWORKALIAS from USERINFO where ID = \u0026#39;Admin\u0026#39; update USERINFO set SID = \u0026#39;new_SID\u0026#39;, NETWORKALIAS = \u0026#39;new_NetworkAlias\u0026#39; where ID = \u0026#39;Admin\u0026#39; You might also got error\nAADSTS50011: The reply URL specified in the request does not match the reply URLs configured for the application: \u0026lsquo;00000015-0000-0000-c000-000000000000\u0026rsquo; Go to C:\\AOSService\\webroot\\web.config, get Aad.Realm, Aad.TenantDomainGUID, Infrastructure.HostUrl\nRun below script to add Dynamics 365 URL to ERP service principle application\n00000015-0000-0000-c000-000000000000 $AADTenant = \u0026#34;xxxxxx-843a-434c-ae23-f8614106ac37\u0026#34; $EnvironmentUrl = \u0026#34;https://xxxxxxxx.axcloud.dynamics.com\u0026#34; $AADRealm = \u0026#34;00000015-0000-0000-c000-000000000000\u0026#34; Connect-AzureAD # Get Service Principal details $SP = Get-AzureADServicePrincipal -Filter \u0026#34;AppId eq \u0026#39;$AADRealm\u0026#39;\u0026#34; #Add Reply URLs $SP.ReplyUrls.Add(\u0026#34;$EnvironmentUrl\u0026#34;) $SP.ReplyUrls.Add(\u0026#34;$EnvironmentUrl/oauth\u0026#34;) #Set/Update Reply URL Set-AzureADServicePrincipal -ObjectId $SP.ObjectId -ReplyUrls $SP.ReplyUrls If you are running VHD for the first time, please do this task\nReference\nhttps://learn.microsoft.com/en-us/troubleshoot/azure/active-directory/error-code-aadsts50011-reply-url-mismatch\nhttps://learn.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/dev-tools/access-instances#i-have-run-the-admin-user-provisioning-tool-on-my-development-environment-and-now-i-receive-the-following-sign-in-error-error-aadsts50011-the-reply-url-specified-in-the-request-does-not-match-the-reply-urls-configured-for-the-application\n","date":"18 September 2022","externalUrl":null,"permalink":"/posts/admin-provisioning-tools/","section":"Posts","summary":"Guide to using admin provisioning tools in D365 Finance Operations for tenant assignment and database management in OneBox development environments.","title":"Admin provisioning tools in Dynamics 365 Finance Operations","type":"posts"},{"content":"","date":"18 September 2022","externalUrl":null,"permalink":"/tags/database/","section":"Tags","summary":"","title":"Database","type":"tags"},{"content":"","date":"18 September 2022","externalUrl":null,"permalink":"/tags/onebox/","section":"Tags","summary":"","title":"Onebox","type":"tags"},{"content":"","date":"18 September 2022","externalUrl":null,"permalink":"/tags/tenant/","section":"Tags","summary":"","title":"Tenant","type":"tags"},{"content":"","date":"18 September 2022","externalUrl":null,"permalink":"/categories/tools/","section":"Categories","summary":"","title":"Tools","type":"categories"},{"content":"","date":"18 September 2022","externalUrl":null,"permalink":"/tags/troubleshooting/","section":"Tags","summary":"","title":"Troubleshooting","type":"tags"},{"content":"","date":"18 September 2022","externalUrl":null,"permalink":"/tags/vhd/","section":"Tags","summary":"","title":"VHD","type":"tags"},{"content":"","date":"20 June 2022","externalUrl":null,"permalink":"/categories/d365/","section":"Categories","summary":"","title":"D365","type":"categories"},{"content":"","date":"20 June 2022","externalUrl":null,"permalink":"/tags/etw/","section":"Tags","summary":"","title":"ETW","type":"tags"},{"content":"","date":"20 June 2022","externalUrl":null,"permalink":"/tags/event-providers/","section":"Tags","summary":"","title":"Event Providers","type":"tags"},{"content":"","date":"20 June 2022","externalUrl":null,"permalink":"/tags/trace/","section":"Tags","summary":"","title":"Trace","type":"tags"},{"content":"","date":"20 June 2022","externalUrl":null,"permalink":"/tags/tracing/","section":"Tags","summary":"","title":"Tracing","type":"tags"},{"content":"The error pops when you start the trace: Unable to start trace, the required event providers were not found. Contact your system administrator.\ntrace-error Cause: Some how you dont have Dynamics in event viewer\nno-dynamics Resolution: execute the script below under C:\\Temp in powershell\n$AOSSetupETWManifestDir = \u0026#34;K:\\AosService\\WebRoot\\Monitoring\u0026#34; foreach ($manifestFile in Get-ChildItem -Path $AOSSetupETWManifestDir\\*.man | select-object -Property BaseName,Name) { $dllFile=\u0026#34;\u0026#34; if ((Test-Path \u0026#34;$AOSSetupETWManifestDir\\$($manifestFile.BaseName).Instrumentation.dll\u0026#34;)) { $dllFile = \u0026#34;$AOSSetupETWManifestDir\\$($manifestFile.BaseName).Instrumentation.dll\u0026#34; } elseif ((Test-Path \u0026#34;$AOSSetupETWManifestDir\\$($manifestFile.BaseName)Resource.dll\u0026#34;)) { $dllFile = \u0026#34;$AOSSetupETWManifestDir\\$($manifestFile.BaseName)Resource.dll\u0026#34; } elseif ((Test-Path \u0026#34;$AOSSetupETWManifestDir\\$($manifestFile.BaseName).dll\u0026#34;)) { $dllFile = \u0026#34;$AOSSetupETWManifestDir\\$($manifestFile.BaseName).dll\u0026#34; } else { Write-Host \u0026#34;Warn : Skipping $AOSSetupETWManifestDir\\$($manifestFile.Name) as DLL not found\u0026#34; Continue } Write-Host \u0026#34;Installing $AOSSetupETWManifestDir\\$($manifestFile.Name) using $dllFile\u0026#34; wevtutil.exe im \u0026#34;$AOSSetupETWManifestDir\\$($manifestFile.Name)\u0026#34; /rf:\u0026#34;$dllFile\u0026#34; /mf:\u0026#34;$dllFile\u0026#34; Write-Host \u0026#34;Finished installing $AOSSetupETWManifestDir\\$($manifestFile.Name) `n`n\u0026#34; } Then restart the VM by LCS or Azure portal, you will get the Dynamics back in the event viewer and able to start the trace normally.\ndynamics-event ","date":"20 June 2022","externalUrl":null,"permalink":"/posts/unable-to-trace-error/","section":"Posts","summary":"Fix Dynamics 365 Finance and Operations tracing issues when event providers are missing. PowerShell solution to reinstall ETW manifests and restore trace functionality.","title":"Unable to start trace, the required event providers were not found. Contact your system administrator","type":"posts"},{"content":"B and PL certificates practice labs\n","date":"13 June 2022","externalUrl":null,"permalink":"/cert-learn/","section":"Dynamics 365 Finance Operation Certificate","summary":"\u003cp\u003eB and PL certificates practice labs\u003c/p\u003e","title":"Dynamics 365 Finance Operation Certificate","type":"cert-learn"},{"content":"Posts\n","date":"13 June 2022","externalUrl":null,"permalink":"/posts/","section":"Posts","summary":"\u003cp\u003ePosts\u003c/p\u003e","title":"Posts","type":"posts"},{"content":"","date":"23 December 2021","externalUrl":null,"permalink":"/tags/batch-framework/","section":"Tags","summary":"","title":"Batch-Framework","type":"tags"},{"content":"","date":"23 December 2021","externalUrl":null,"permalink":"/tags/csv/","section":"Tags","summary":"","title":"Csv","type":"tags"},{"content":"class DEV_FileUploadController extends SysOperationServiceController { public void new() { super(); this.parmClassName(classStr(DEV_FileUploadService)); this.parmMethodName(methodStr(DEV_FileUploadService, processOperation)); this.parmDialogCaption(\u0026#34;Caption\u0026#34;); } public ClassDescription caption() { return \u0026#34;Caption\u0026#34;; } public static void main(Args args) { new DEV_FileUploadController().startOperation(); } } [DataContract, SysOperationContractProcessing(classStr(DEV_FileUploadUIBuilder)) ] class DEV_FileUploadContract { container storageResult; [DataMemberAttribute(\u0026#39;StorageResult\u0026#39;)] public container parmStorageResult(container _storageResult = storageResult) { storageResult = _storageResult; return storageResult; } } class DEV_FileUploadUIBuilder extends SysOperationUIBuilder { const str OkButtonName = \u0026#39;CommandButton\u0026#39;; const str FileUploadName = \u0026#39;FileUpload\u0026#39;; DEV_FileUploadContract contract; public void postBuild() { DialogGroup dialogGroup; FormBuildControl formBuildControl; FileUploadBuild dialogFileUpload; super(); contract = this.dataContractObject(); dialogGroup = dialog.addGroup(\u0026#34;File path\u0026#34;); formBuildControl = dialog.formBuildDesign().control(dialogGroup.name()); dialogFileUpload = formBuildControl.addControlEx(classstr(FileUpload), FileUploadName); dialogFileUpload.style(FileUploadStyle::MinimalWithFilename); dialogFileUpload.baseFileUploadStrategyClassName(classstr(FileUploadTemporaryStorageStrategy)); dialogFileUpload.fileTypesAccepted(\u0026#34;.csv\u0026#34;); //dialogFileUpload.fileTypesAccepted(\u0026#34;.xlsx\u0026#34;); dialogFileUpload.fileNameLabel(\u0026#34;@SYS308842\u0026#34;); } private void dialogEventsSubscribe(FormRun _formRun) { FileUpload fileUpload = _formRun.control(_formRun.controlId(FileUploadName)); fileUpload.notifyUploadCompleted += eventhandler(this.uploadCompleted); fileUpload.notifyUploadAttemptStarted += eventhandler(this.uploadStarted); _formRun.onClosing += eventhandler(this.dialogClosing); } private void dialogClosing(xFormRun sender, FormEventArgs e) { this.dialogEventsUnsubscribe(sender as FormRun); } private void dialogEventsUnsubscribe(FormRun _formRun) { FileUpload fileUpload = _formRun.control(_formRun.controlId(FileUploadName)); fileUpload.notifyUploadCompleted -= eventhandler(this.uploadCompleted); fileUpload.notifyUploadAttemptStarted -= eventhandler(this.uploadStarted); _formRun.onClosing -= eventhandler(this.dialogClosing); } protected void uploadCompleted() { var formRun = this.dialog().dialogForm().formRun(); FileUpload fileUpload = formRun.control(formRun.controlId(FileUploadName)); FileUploadTemporaryStorageResult uploadResult = fileUpload.getFileUploadResult(); if (uploadResult != null \u0026amp;\u0026amp; uploadResult.getUploadStatus()) { contract.parmStorageResult(uploadResult.pack()); } this.setDialogOkButtonEnabled(formRun, true); } private void uploadStarted() { var formRun = this.dialog().dialogForm().formRun(); this.setDialogOkButtonEnabled(formRun, false); } protected void setDialogOkButtonEnabled(FormRun _formRun, boolean _isEnabled) { FormControl okButtonControl = _formRun.control(_formRun.controlId(OkButtonName)); if (okButtonControl) { okButtonControl.enabled(_isEnabled); } } public void postRun() { super(); FormRun formRun = this.dialog().dialogForm().formRun(); this.dialogEventsSubscribe(formRun); this.setDialogOkButtonEnabled(formRun, false); } } using System.IO; using OfficeOpenXml; using OfficeOpenXml.ExcelPackage; using OfficeOpenXml.ExcelRange; class DEV_FileUploadService extends SysOperationServiceBase { #File container currentLine; CommaTextStreamIo cSVStream; System.IO.Stream stream; ExcelSpreadsheetName sheeet; System.Exception ex; public void processOperation(DEV_FileUploadContract _contract) { if (_contract.parmStorageResult() != conNull()) { FileUploadTemporaryStorageResult fileUploadResult = new FileUploadTemporaryStorageResult(); fileUploadResult.unpack(_contract.parmStorageResult()); if (fileUploadResult != null \u0026amp;\u0026amp; fileUploadResult.getUploadStatus()) { try { cSVStream = CommaTextStreamIo::constructForRead(File::UseFileFromURL(fileUploadResult.getDownloadUrl())); if (cSVStream.status() != IO_Status::Ok) { throw error(strfmt(\u0026#39;Is not possible to open the file. Error %1\u0026#39;,enum2str(cSVStream.status()))); } cSVStream.inFieldDelimiter(\u0026#34;\\,\u0026#34;); cSVStream.inRecordDelimiter(\u0026#34;\\n\u0026#34;); currentLine = cSVStream.read(); while(currentLine) { str id = conPeek(currentLine, 1); info(id); currentLine = cSVStream.read(); } stream = fileUploadResult.openResult(); using (ExcelPackage Package = new ExcelPackage(stream)) { int rowCount, i; Package.Load(stream); ExcelWorksheet worksheet = package.get_Workbook().get_Worksheets().get_Item(1); OfficeOpenXml.ExcelRange range = worksheet.Cells; rowCount = worksheet.Dimension.End.Row - worksheet.Dimension.Start.Row + 1; for (i = 2; i\u0026lt;= rowCount; i++) { str custAccount = range.get_Item(i, 1).value; str id = range.get_Item(i, 2).value; int number = range.get_Item(i, 3).value; TranDate date = range.get_Item(i, 4).value; } } } catch { ex = CLRInterop::getLastException().GetBaseException(); error(ex.get_Message()); } } } } } class DEV_FileUpload_Runbase extends RunBaseBatch { Filename filename; dialog dialog; #define.CurrentVersion(1) #define.Version1(1) #localmacro.CurrentList fileName #endmacro client server static ClassDescription description() { return \u0026#39;Upload CSV file\u0026#39;; // or Excel file } protected boolean canRunInNewSession() { return false; } public Object dialog() { DialogGroup dialogGroup; FormBuildControl formBuildControl; FileUploadBuild dialogFileUpload; // Set enumSet = new Set(Types::Enum); dialog = super(); dialogGroup = dialog.addGroup(\u0026#39;File picker\u0026#39;); formBuildControl = dialog.formBuildDesign().control(dialogGroup.name()); dialogFileUpload = formBuildControl.addControlEx(classstr(FileUpload), filename); dialogFileUpload.style(FileUploadStyle::MinimalWithFilename); dialogFileUpload.baseFileUploadStrategyClassName(classstr(FileUploadTemporaryStorageStrategy)); dialogFileUpload.fileTypesAccepted(\u0026#39;.csv\u0026#39;); //dialogFileUpload.fileTypesAccepted(\u0026#39;.xlsx\u0026#39;); dialogFileUpload.fileNameLabel(\u0026#39;Select worker data file\u0026#39;); return dialog; } static void main(Args _args) { MyBatch objClass = new MyBatch(); if (objClass.prompt()) { objClass.runOperation(); } } public void run() { #File container currentLine; CommaTextStreamIo localStream; str textFile; FileUpload fileUploadControl = this.getFormControl(dialog, filename); FileUploadTemporaryStorageResult fileUploadResult = fileUploadControl.getFileUploadResult(); // CSV file if (fileUploadResult != null \u0026amp;\u0026amp; fileUploadResult.getUploadStatus()) { textFile = fileUploadResult.getDownloadUrl(); } localStream = CommaTextStreamIo::constructForRead(File::UseFileFromURL(textFile)); if (localStream.status() != IO_Status::Ok) { throw error(strfmt(\u0026#39;Is not possible to open the file. Error %1\u0026#39;,enum2str(localStream.status()))); } localStream.inFieldDelimiter(\u0026#39;,\u0026#39;); while (localStream.status() == IO_Status::Ok) { currentLine = localStream.read(); if (!currentLine) { break; } try { Id = conPeek(currentLine, 1); Date = conPeek(currentLine, 2); // Remaining fields } catch (Exception::Error) { Throw (Exception::Error); } } // Excel file stream = fileUploadResult.openResult();\tusing (ExcelPackage Package = new ExcelPackage(stream)) { int rowCount, i; Package.Load(stream); ExcelWorksheet worksheet = package.get_Workbook().get_Worksheets().get_Item(1); OfficeOpenXml.ExcelRange range = worksheet.Cells; rowCount = worksheet.Dimension.End.Row - worksheet.Dimension.Start.Row + 1; for (i = 2; i\u0026lt;= rowCount; i++) { str\tcustAccount = range.get_Item(i, 1).value; str\tid = range.get_Item(i, 2).value; int\tnumber = range.get_Item(i, 3).value; TranDate date = range.get_Item(i, 4).value; } } info(\u0026#39;Success\u0026#39;); } protected FormControl getFormControl(DialogRunbase dialog, str controlName) { return dialog.formRun().control(_dialog.formRun().controlId( controlName)); } } AsciiStreamIo file; Array fileLines; FileUploadTemporaryStorageResult fileUpload; fileUpload = File::GetFileFromUser() as FileUploadTemporaryStorageResult; file = AsciiStreamIo::constructForRead(fileUpload.openResult()); if (file) { if (file.status()) { throw error(\u0026#34;@SYS52680\u0026#34;); } file.inFieldDelimiter(\u0026#39;,\u0026#39;); file.inRecordDelimiter(\u0026#39;\\r\\n\u0026#39;); } container record; while (!file.status()) { record = file.read(); if (conLen(record)) { info(strFmt(\u0026#34;%1 - %2\u0026#34;,conPeek(record,1),conPeek(record,2))); } } ","date":"23 December 2021","externalUrl":null,"permalink":"/posts/file-upload-sysoperation/","section":"Posts","summary":"Complete X++ code examples for implementing file upload functionality in Dynamics 365 Finance and Operations using SysOperation framework. Supports CSV and Excel file processing with batch capabilities.","title":"File upload sysoperation","type":"posts"},{"content":"","date":"23 December 2021","externalUrl":null,"permalink":"/tags/file-upload/","section":"Tags","summary":"","title":"File-Upload","type":"tags"},{"content":"","date":"23 December 2021","externalUrl":null,"permalink":"/tags/runbase/","section":"Tags","summary":"","title":"Runbase","type":"tags"},{"content":"How to send multiple records to workflow using X++ in Dynamics 365 Finance Operations\n#define.WorkFlowTemplateName(\u0026#34;Template Name\u0026#34;) // or -- workFlowTypeStr(Template name) if (common.WorkflowApprovalStatus == WFApprovalStatus::Draft) { Workflow::activateFromWorkflowType(#WorkFlowTemplateName, common.RecId, \u0026#39;Workflow submitted by button\u0026#39;, false, Curuserid()); } WorkflowWorkItemTable WorkflowWorkItemTable; // main code select firstonly WorkflowWorkItemTable where workflowWorkItemTable.Type == WorkflowWorkItemType::WorkItem \u0026amp;\u0026amp; workflowWorkItemTable.Status == WorkflowWorkItemStatus::Pending // this should be Pending \u0026amp;\u0026amp; WorkflowWorkItemTable.RefTableId == tableNum(common) \u0026amp;\u0026amp; WorkflowWorkItemTable.RefRecId == common.RecId; if (WorkflowWorkItemTable) { WorkflowWorkItemActionManager::dispatchWorkItemAction(WorkflowWorkItemTable, \u0026#34;Mulitple Approve by button\u0026#34;, curuserId(), WorkflowWorkItemActionType::Complete, menuitemActionStr(\u0026#34;Approve menu item name\u0026#34;)); } WorkflowWorkItemTable WorkflowWorkItemTable; // main code select WorkflowWorkItemTable where workflowWorkItemTable.Type == WorkflowWorkItemType::WorkItem \u0026amp;\u0026amp; workflowWorkItemTable.Status == WorkflowWorkItemStatus::Pending \u0026amp;\u0026amp; WorkflowWorkItemTable.RefTableId == tableNum(Common) \u0026amp;\u0026amp; WorkflowWorkItemTable.RefRecId == common.RecId; if (WorkflowWorkItemTable) { ttsbegin; WorkflowWorkItemActionManager::dispatchWorkItemAction(WorkflowWorkItemTable, \u0026#34;Mulitple Reject by button\u0026#34;, curuserId(), WorkflowWorkItemActionType::Return, menuitemActionStr(\u0026#39;Reject menu item Name\u0026#39;)); ttscommit; } #define.WorkFlowTemplateName(\u0026#34;Template Name\u0026#34;) // or -- workFlowTypeStr(Template name) if (common.WorkflowApprovalStatus == WFApprovalStatus::Submitted || common.WorkflowApprovalStatus == WFApprovalStatus::PendingApproval) { WorkflowCorrelationId\tworkflowCorrelationId = Workflow::activateFromWorkflowType(#WorkFlowTemplateName, common.RecId, \u0026#39;By button RecallAllToWorkflow\u0026#39;, true, Curuserid()); Workflow::cancelWorkflow(workflowCorrelationId,\u0026#34;Mulitple Recalled by user\u0026#34;); } Button Clicked method Code: For multi-select, we need to loop the record by record so for that I have used the button clicked. Instead of this, we can create a new class and write in the main method.\nvoid clicked() { FormDataSource Common_ds = element.Common_ds; Common common = Common_ds.cursor(); System.Exception ex; next clicked(); if (Common_ds.Anymarked()) { for (common = getFirstSelection(Common_ds); common; common = Common_ds.getNext()) { try { // call the Approve or submit or Reject code } catch { ex = CLRInterop::getLastException().GetBaseException(); error(ex.get_Message()); } } } Common_ds.research(true); } ","date":"23 December 2021","externalUrl":null,"permalink":"/posts/dynamics-365-finance-operations-send-multiple-records-to-workflow/","section":"Posts","summary":"Implement bulk workflow operations in Dynamics 365 Finance and Operations using X++. Complete code examples for submitting, approving, rejecting, and recalling multiple records through workflows.","title":"Send multiple records to workflow","type":"posts"},{"content":"","date":"23 December 2021","externalUrl":null,"permalink":"/tags/sysoperation/","section":"Tags","summary":"","title":"Sysoperation","type":"tags"},{"content":"","date":"23 December 2021","externalUrl":null,"permalink":"/categories/workflow/","section":"Categories","summary":"","title":"Workflow","type":"categories"},{"content":"","date":"23 December 2021","externalUrl":null,"permalink":"/tags/workflow/","section":"Tags","summary":"","title":"Workflow","type":"tags"},{"content":"","date":"21 December 2021","externalUrl":null,"permalink":"/tags/aosservice/","section":"Tags","summary":"","title":"AOSService","type":"tags"},{"content":"","date":"21 December 2021","externalUrl":null,"permalink":"/tags/dvt-script/","section":"Tags","summary":"","title":"DVT Script","type":"tags"},{"content":"","date":"21 December 2021","externalUrl":null,"permalink":"/tags/financial-reporting/","section":"Tags","summary":"","title":"Financial Reporting","type":"tags"},{"content":"","date":"21 December 2021","externalUrl":null,"permalink":"/tags/mronebox/","section":"Tags","summary":"","title":"MROneBox","type":"tags"},{"content":"","date":"21 December 2021","externalUrl":null,"permalink":"/tags/ssl-certificates/","section":"Tags","summary":"","title":"SSL Certificates","type":"tags"},{"content":"","date":"21 December 2021","externalUrl":null,"permalink":"/categories/troubleshooting/","section":"Categories","summary":"","title":"Troubleshooting","type":"categories"},{"content":"While doing upgrade to the latest version Dynamics 365 Finance \u0026amp; Operations on tier 1 environment, you might got some errors related to DVT auto scripts.\n1. DVT script for service model: AOSService on machine # An error at step 72\n\u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34;?\u0026gt; \u0026lt;Step\u0026gt; \u0026lt;ID\u0026gt;72\u0026lt;/ID\u0026gt; \u0026lt;RunbookID\u0026gt;498de9aee46e403e9dcd97b40166775e\u0026lt;/RunbookID\u0026gt; \u0026lt;PackageId\u0026gt;dd4119e4331248d5a6ba9b987eef440d\u0026lt;/PackageId\u0026gt; \u0026lt;PackageType\u0026gt;PlatAppBinaryHotfixPackage\u0026lt;/PackageType\u0026gt; \u0026lt;CompletedManually\u0026gt;false\u0026lt;/CompletedManually\u0026gt; \u0026lt;Description\u0026gt;DVT script for service model: AOSService on machine: \u0026lt;/Description\u0026gt; \u0026lt;MachineName\u0026gt;\u0026lt;/MachineName\u0026gt; \u0026lt;ServiceModelName\u0026gt;AOSService\u0026lt;/ServiceModelName\u0026gt; \u0026lt;ScriptToExecute\u0026gt; \u0026lt;FileName\u0026gt;AutoRunDVT.ps1\u0026lt;/FileName\u0026gt; \u0026lt;Automated\u0026gt;true\u0026lt;/Automated\u0026gt; \u0026lt;Description\u0026gt;Run the AOS DVTs\u0026lt;/Description\u0026gt; \u0026lt;RetryCount\u0026gt;1\u0026lt;/RetryCount\u0026gt; \u0026lt;TimeoutValue\u0026gt;1\u0026lt;/TimeoutValue\u0026gt; \u0026lt;InvokeWithPowershellProcess\u0026gt;false\u0026lt;/InvokeWithPowershellProcess\u0026gt; \u0026lt;DoNotAutoResume\u0026gt;false\u0026lt;/DoNotAutoResume\u0026gt; \u0026lt;DynamicStepDefinition /\u0026gt; \u0026lt;/ScriptToExecute\u0026gt; \u0026lt;StepType\u0026gt;DVT\u0026lt;/StepType\u0026gt; \u0026lt;StepConcurrency\u0026gt;Multiple\u0026lt;/StepConcurrency\u0026gt; \u0026lt;ScriptExecutionOutput /\u0026gt; \u0026lt;/Step\u0026gt; Event log error details\nSystem.Net.WebException: The underlying connection was closed: Could not establish trust relationship for the SSL/TLS secure channel. \u0026mdash;\u0026gt; System.Security.Authentication.AuthenticationException: The remote certificate is invalid according to the validation procedure. Solution # You need to abort the current process in LCS because this option will only show for environments in the Deployed state, then do \u0026ldquo;Rotate the SSL certificates\u0026rdquo;\nOn the Environment details page, click Maintain \u0026gt; Rotate secrets. Select Rotate the SSL certificates and confirm that you want to perform this action. rorate-ssl 2. Step 73 - DVT script for service model: MROneBox on machine # 2.1 The error from runbook # \u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34;?\u0026gt; \u0026lt;Step\u0026gt; \u0026lt;ID\u0026gt;73\u0026lt;/ID\u0026gt; \u0026lt;RunbookID\u0026gt;498de9aee46e403e9dcd97b40166775e\u0026lt;/RunbookID\u0026gt; \u0026lt;PackageId\u0026gt;dd4119e4331248d5a6ba9b987eef440d\u0026lt;/PackageId\u0026gt; \u0026lt;PackageType\u0026gt;PlatAppBinaryHotfixPackage\u0026lt;/PackageType\u0026gt; \u0026lt;CompletedManually\u0026gt;false\u0026lt;/CompletedManually\u0026gt; \u0026lt;Description\u0026gt;DVT script for service model: MROneBox on machine: \u0026lt;/Description\u0026gt; \u0026lt;MachineName\u0026gt;\u0026lt;/MachineName\u0026gt; \u0026lt;ServiceModelName\u0026gt;MROneBox\u0026lt;/ServiceModelName\u0026gt; \u0026lt;ScriptToExecute\u0026gt; \u0026lt;FileName\u0026gt;AutoRunDVT.ps1\u0026lt;/FileName\u0026gt; \u0026lt;Automated\u0026gt;true\u0026lt;/Automated\u0026gt; \u0026lt;Description\u0026gt;Run the AOS DVTs\u0026lt;/Description\u0026gt; \u0026lt;RetryCount\u0026gt;1\u0026lt;/RetryCount\u0026gt; \u0026lt;TimeoutValue\u0026gt;1\u0026lt;/TimeoutValue\u0026gt; \u0026lt;InvokeWithPowershellProcess\u0026gt;false\u0026lt;/InvokeWithPowershellProcess\u0026gt; \u0026lt;DoNotAutoResume\u0026gt;false\u0026lt;/DoNotAutoResume\u0026gt; \u0026lt;DynamicStepDefinition /\u0026gt; \u0026lt;/ScriptToExecute\u0026gt; \u0026lt;StepType\u0026gt;DVT\u0026lt;/StepType\u0026gt; \u0026lt;StepConcurrency\u0026gt;Multiple\u0026lt;/StepConcurrency\u0026gt; \u0026lt;ScriptExecutionOutput /\u0026gt; \u0026lt;/Step\u0026gt; 2.2 Event log error details # Exception : System.Management.Automation.RemoteException: An error was encountered while updating the Financial Reporting components. TargetObject : An error was encountered while updating the Financial Reporting components. 2.3 Solution # To resolve this, we will need to reset financial reporting data mart, following the steps\nStops AX services\nWorld wide web publishing service (on all Application Object Servers [AOS] computers) Batch Management Service (on non-private AOS computers only) Management Reporter 2012 Process Service (on Business intelligence [BI] computers only) We can use command line too NET STOP \u0026quot;MR2012ProcessService\u0026quot; Open PowerShell and execute the following script, this will execute reset datamart cd K:\\MROneBox\\MRInstallDirectory\\Server\\MRDeploy\\ Import-Module .\\MRDeploy.psd1 Reset-DatamartIntegration -Reason OTHER -ReasonDetail \u0026#34;\u0026lt;reason for resetting\u0026gt;\u0026#34; -SkipMRTableReset To ensure that old data isn\u0026rsquo;t inserted, a data mart reset can be started only after existing tasks are completed. If you try to reset the data mart before all tasks are completed, you might receive a message such as, \u0026ldquo;The data mart reset was unable to be processed because of an active task. Please try again later.\u0026rdquo; After reset datamart, we need to execute the step 73 again, find the latest deployable package applied to the environment. It will be under folder \u0026lt;ServiceVolue\u0026gt;:\\DeployablePackages\\\u0026lt;PackageGUID\u0026gt;\\MROneBox\\Scripts\\Update Execute AutoRunDVT.ps1 in Powershell\n.\\AutoRunDVT.ps1 If it can be executed without error, you can go ahead and resume the deployment in LCS.\nIf there are still errors, we need an extra step # Find the DVT execution script: \u0026lt;ServiceVolue\u0026gt;:\\DeployablePackages\\\u0026lt;PackageGUID\u0026gt;\\MROneBox\\scripts\\Update\\AutoRunDVT.ps1 Make a copy of the file Clear all contents AutoRunDVT.ps1 and save Resume the deployment from LCS. ","date":"21 December 2021","externalUrl":null,"permalink":"/posts/troubleshooting-dvt-script-for-service-model/","section":"Posts","summary":"Troubleshooting guide for resolving DVT script issues during Dynamics 365 Finance Operations Tier 1 environment upgrades including SSL certificate problems.","title":"Troubleshooting DVT script for service model - Dynamics 365 Finance \u0026 Operations Tier 1 Upgrade","type":"posts"},{"content":"","date":"21 December 2021","externalUrl":null,"permalink":"/tags/upgrade/","section":"Tags","summary":"","title":"Upgrade","type":"tags"},{"content":"","date":"5 November 2021","externalUrl":null,"permalink":"/tags/desktop/","section":"Tags","summary":"","title":"Desktop","type":"tags"},{"content":"","date":"5 November 2021","externalUrl":null,"permalink":"/tags/file-explorer/","section":"Tags","summary":"","title":"File Explorer","type":"tags"},{"content":"","date":"5 November 2021","externalUrl":null,"permalink":"/tags/keyboard-shortcuts/","section":"Tags","summary":"","title":"Keyboard Shortcuts","type":"tags"},{"content":"","date":"5 November 2021","externalUrl":null,"permalink":"/tags/productivity/","section":"Tags","summary":"","title":"Productivity","type":"tags"},{"content":"","date":"5 November 2021","externalUrl":null,"permalink":"/tags/taskbar/","section":"Tags","summary":"","title":"Taskbar","type":"tags"},{"content":"","date":"5 November 2021","externalUrl":null,"permalink":"/tags/windows/","section":"Tags","summary":"","title":"Windows","type":"tags"},{"content":"","date":"5 November 2021","externalUrl":null,"permalink":"/tags/windows-11/","section":"Tags","summary":"","title":"Windows 11","type":"tags"},{"content":" 1. New Keyboard Shortcuts in Windows 11 # Windows 11 brings a few Keyboard Shortcuts for accessing its cool new features such as widgets, snap layouts, action center, and quick settings.\nFYI, Win key is the Windows Logo key on your keyboard.\nACTION SHORTCUTS KEYS Open up the Widgets pane. It supplies you with the weather forecast, local traffic, news, and even your calendar. Win + W Toggle up the Quick Settings. It controls the Volume, Wi-Fi, Bluetooth, Brightness sliders, Focus Assist, and other settings. Win + A Bring up the Notification Center. It shows all your notifications in the OS. Win + N Open the Snap Layouts flyout. It helps you organize apps and windows for multitasking. Win + Z Open Teams Chat app from Taskbar. It helps you quickly select a chat thread directly from the Taskbar. Win + C 2. General and Popular Shortcuts for Windows 11 # Here are the most frequently used and essential keyboard shortcuts for Windows 11.\nACTION SHORTCUTS KEYS Select all contents Ctrl + A Copy the selected items Ctrl + C Cut the selected items Ctrl + X Paste the copied or cut items Ctrl + V Undo an action Ctrl + Z Redo an action Ctrl + Y Switch between the running applications Alt + Tab Open Task View Win + Tab Close the active app or If you are on Desktop, open the Shutdown box to shut down, restart, log out or put your PC to sleep. Alt + F4 Lock your computer. Win + L Display and hide the desktop. Win + D Delete the selected item and move it to the Recycle Bin. Ctrl + Delete Delete the selected item permanently. Shift + Delete Capture a full screenshot and saves it in the clipboard. PrtScn or Print Capture part of the screen with Snip \u0026amp; Sketch. Win + Shift + S Open Start button context menu. Windows + X Rename selected item. F2 Refresh the active window. F5 Open Menu bar in the current app. F10 Go back. Alt + Left arrow Go forward. Alt + Left arrow Move up one screen Alt + Page Up Move down one screen Alt + Page Down Open Task Manager. Ctrl + Shift + Esc Project a screen. Win + P Print the current page. Ctrl + P Select more than one item. Shift + Arrow keys Save the current file. Ctrl + S Save As Ctrl + Shift + S Open a file in the current app. Ctrl + O Cycle through the apps on the taskbar. Alt + Esc Display your password on the login screen Alt + F8 Open the shortcut menu for the current window Alt + Spacebar Open properties for the selected item. Alt + Enter Open the context menu (right-click menu) for the selected item. Alt + F10 Open Run command. Win + R Open a new program window of the current app Ctrl + N Take a screen clipping Win + Shift + S Open Windows 11 settings Win + I Go back to Settings home page Backspace Stop or close the current task Esc Enter/Exit the full-screen mode F11 Launch Emoji keyboard Win + period (.) or Win + semicolon (;) 3. Desktop and Virtual Desktops Shortcuts for Windows 11 # These simple shortcuts will help you navigate your desktop and virtual desktops more smoothly.\nACTION SHORTCUTS KEYS Open Start menu Window logo key (Win) Switch keyboard layout Ctrl + Shift View all open apps Alt + Tab Select more than one item on the desktop Ctrl + Arrow keys + Spacebar Minimize all open windows Win + M Maximize all minimized windows on the desktop. Win + Shift + M Minimize or maximize all but the active window Win + Home Snap the current app or window to the Left Win + Left Arrow Key Snap the current app or window to the RIght. Win + Right Arrow Key Stretch the active window to the top and bottom of the screen. Win + Shift + Up arrow key Restore or minimize active desktop windows vertically, maintaining width. Win + Shift + Down arrow key Open Desktop view Win + Tab Add a new virtual desktop Win + Ctrl + D Close the active virtual desktop. Win + Ctrl + F4 Toggle or switch to the virtual desktops you’ve created on the Right Win key + Ctrl + Right arrow Toggle or switch to the virtual desktops you’ve created on the Left Win key + Ctrl + Left arrow Create a shortcut CTRL + SHIFT while dragging icon or file Open WIndows Search Win + S or Win + Q Take a peek look at the desktop until you release the WINDOWS key. Win + Comma (,) 4. Taskbar Keyboard Shortcuts for Windows 11 # You can use below keyboard shortcuts to take control of your taskbar:\nACTION SHORTCUTS KEYS Run an app as administrator from the taskbar Ctrl + Shift + Left Click app button or icon Open the app in the first position on your taskbar. Win + 1 Open the app in the number position from the taskbar. Win + Number (0 - 9) Cycle through apps in the taskbar. Win + T View Date and Time from the taskbar Win + Alt + D Open another instance of an app from the taskbar. Shift + Left Click app button Show the window menu for the group apps from the taskbar. Shift + Right-click grouped app icon Highlight the first item in the Notification Area and use the Arrow key switch between the item Win + B Open the application’s menu on the task bar Alt + Windows key + number keys 5. File Explorer Shortcuts for Windows 11 # These keyboard shortcuts can help you navigate your Windows filesystem quickly than ever:\nACTION SHORTCUTS KEYS Open the File Explorer. Win + E Open the search box in the file explorer. Ctrl + E Open the current window in a new window. Ctrl + N Close active window. Ctrl + W Start the mark mode Ctrl + M Change the file and folder view. Ctrl + Mouse Scroll Switch between left and right panes F6 Create a new folder. Ctrl + Shift + N Expand all subfolders in the navigation pane on the left. Ctrl + Shift + E Select address bar of the File Explorer. Alt + D Changes folder view. Ctrl + Shift + Number (1-8) Display the preview panel. Alt + P Open the Properties settings for the selected item. Alt + Enter Expand the selected drive or folder Num Lock + plus (+) Collapse the selected drive or folder. Num Lock + minus (-) Expand all the subfolders under the selected drive or folder. Num Lock + asterisk (*) Go the next folder. Alt + Right arrow Go the previous folder Alt + Left arrow (or Backspace) Go to the parent folder the folder was in. Alt + Up arrow Switch focus to address bar. F4 Refresh the File Explorer F5 Expand the current folder tree or select the first subfolder (if it’s expanded) in the left pane. Right Arrow key Collapse the current folder tree or select the parent folder (if it’s collapsed) in the left pane. Left Arrow Key Move to the top of the active window. Home Move to the bottom of the active window. End 6. Command Prompt Shortcuts for Windows 11 # If you are a Command Prompt user, then these shortcuts will come handy:\nACTION SHORTCUTS KEYS Scroll to the top of the Command Prompt (cmd). Ctrl + Home Scroll to the bottom of the cmd. Ctrl + End Select everything on the current line Ctrl + A Move the cursor up a page Page Up Move the cursor down a page Page Down Enter Mark mode. Ctrl + M Move the cursor to the beginning of the buffer. Ctrl + Home (in Mark mode) Move the cursor to the end of the buffer. Ctrl + End (in Mark mode) Cycle through command history of active session Up or Down arrow keys Move cursor left or right in the current command line. Left or Right arrow keys Move your cursor to the start of the current line Shift + Home Move your cursor to the end of the current line Shift + End Move cursor up one screen and select text. Shift + Page Up Move cursor down one screen and select text. Shift + Page Down Move the screen up one line in the output history. Ctrl + Up arrow Move the screen down one line in the output history. Ctrl + Down arrow Move cursor up one line and select the text. Shift + Up Move cursor down one line and select the text. Shift + Down Move the cursor one word at a time. Ctrl + Shift + Arrow Keys Open search for Command Prompt. Ctrl + F 7. Dialog box Shortcuts for Windows 11 # Use the following Windows hotkeys to navigate the Dialog box of any application easily:\nACTION SHORTCUTS KEYS Move forward through tabs. Ctrl + Tab Move back through tabs. Ctrl + Shift + Tab Switch to nth tab. Ctrl + N (number 1–9) Show the items in the active list. F4 Move forward through options of the dialog box Tab Move back through options of the dialog box Shift + Tab Execute the command (or select the option) that is used with the underlined letter. Alt + underlined letter Check or Uncheck the check box if the active option is a check box. Spacebar Select or move to a button in a group of active buttons. Arrow keys Open the parent folder if a folder is selected in the Open or Save As dialog box. Backspace 8. Accessibility Keyboard Shortcuts for Windows 11 # Windows 11 provides these keyboard shortcuts to make your computer more accessible and easier to use for everyone:\nACTION SHORTCUTS KEYS Open Ease of Access Centre Win + U Turn on Magnifier and Zoom in Win + plus (+) Zoom out using Magnifier Win + minus (-) Exit Magnifier Win + Esc Switch to docked mode in Magnifier Ctrl + Alt + D Switch to full-screen mode in Magnifier Ctrl + Alt + F Switch to lens mode in Magnifier Ctrl + Alt + L Invert colors in Magnifier Ctrl + Alt + I Cycle through views in Magnifier Ctrl + Alt + M Resize the lens with the mouse in Magnifier. Ctrl + Alt + R Pan in the direction of the arrow keys in Magnifier. Ctrl + Alt + arrow keys Zoom in or out using mouse Ctrl + Alt + mouse scroll Open Narrator Win + Enter Open on-screen keyboard Win + Ctrl + O Turn Filter Keys on and off Press Right Shift for eight seconds Turn High Contrast on or off Left Alt + left Shift + PrtSc Turn Mouse Keys on or off Left Alt + left Shift + Num Lock Turn Sticky Keys on or off Press Shift five times Turn Toggle Keys on or off Press Num Lock for five seconds Open Action Center Win + A 9. Other Keyboard Shortcuts for Windows 11 # ACTION SHORTCUTS KEYS Open Game bar Win + G Record the last 30 seconds of the active game Win + Alt + G Start or stop recording the active game Win + Alt + R Take a screenshot of the active game Win + Alt + PrtSc Show/hide recording timer of the game Win + Alt + T Start IME reconversion Win + forward slash (/) Open Feedback Hub Win + F Launch Voice Typing Win + H Open the Connect quick setting Win + K Lock your device orientation Win + O Display the System Properties Page Win + Pause Search for PCs (if you’re on a network) Win + Ctrl + F Move an app or window from one monitor to another Win + Shift + Left or Right arrow key Switch input language and keyboard layout Win + Spacebar Open Clipboard History Win + V Switch input between Windows Mixed Reality and your desktop. Win + Y Launch Cortana app Win + C Open another instance of the app pinned to the taskbar in the number position. Win + Shift + Number key (0-9) Switch to the last active window of the app pinned to the taskbar in the number position. Win + Ctrl + Number key (0-9) Open Jump List of the app pinned to the taskbar in the number position. Win + Alt + Number key (0-9) Open another instance as an administrator of the app pinned to the taskbar in the number position. Win + Ctrl + Shift + Number key (0-9) ","date":"5 November 2021","externalUrl":null,"permalink":"/posts/windows-key-shortcuts/","section":"Posts","summary":"Comprehensive Windows 11 keyboard shortcuts guide covering new features, desktop navigation, taskbar controls, File Explorer, Command Prompt, and accessibility options. Boost your productivity with essential hotkeys.","title":"Windows keyboard shortcuts","type":"posts"},{"content":"","date":"20 October 2021","externalUrl":null,"permalink":"/categories/ax-2012/","section":"Categories","summary":"","title":"AX 2012","type":"categories"},{"content":"","date":"20 October 2021","externalUrl":null,"permalink":"/tags/naming-conventions/","section":"Tags","summary":"","title":"Naming Conventions","type":"tags"},{"content":" Subject Area Object Prefix # A subject area specific application object is prefixed with the name of the subject area the object belongs to, for example Cust*, Invent*, Ledger*, Proj*, Vend*.\nExample\n`WMSOrderSplit` `CustBankAccount` `CustBalanceCurrency` `InventAccountType` Application Area Object Prefix # An application area object is prefixed with the name of the application area the object belongs to.\nExample\n`Aif*` `Sys*` When creating new elements, ensure that you follow the recommended naming conventions. Any future development and maintenance will be much easier.\nPrefix Explaination Ax Microsoft Dynamics AX typed data source Axd Microsoft Dynamics AX business document Asset Asset management BOM Bill of material COS Cost accounting Cust Customer Dir Directory global address book EcoRes Economic resources HRM/HCM Human resources Invent Inventory management JMG Shop flor control KM Knowledge management Ledger General ledger PBA Product builder Prod Production Proj Project Purch Purchase Req Requirements Sales Sales SMA Service management SMM Sales and marketing management Sys Application frameworks and development tools Tax Tax engine Vend Vendor Web Web framework WMS Warehouse management PSA Professional Services Automation ","date":"20 October 2021","externalUrl":null,"permalink":"/posts/common-prefixes-dyanmics-ax/","section":"Posts","summary":"Complete reference guide for naming conventions and common prefixes used in Dynamics AX and D365 development for consistent code organization.","title":"Naming Conventions - Common Prefixes Dyanmics AX","type":"posts"},{"content":"","date":"20 October 2021","externalUrl":null,"permalink":"/tags/prefix/","section":"Tags","summary":"","title":"Prefix","type":"tags"},{"content":"","date":"20 October 2021","externalUrl":null,"permalink":"/tags/standards/","section":"Tags","summary":"","title":"Standards","type":"tags"},{"content":"","date":"10 October 2021","externalUrl":null,"permalink":"/tags/batch-rename/","section":"Tags","summary":"","title":"Batch Rename","type":"tags"},{"content":"Go to the directory and run the following command:\nfor /f \u0026quot;Tokens=*\u0026quot; %f in ('dir /l/b/a-d') do (rename \u0026quot;%f\u0026quot; \u0026quot;%f\u0026quot;)\nfor /f \u0026ldquo;Tokens=*\u0026rdquo; %%f in (\u0026lsquo;dir /l/b/a-d\u0026rsquo;) do (rename \u0026ldquo;%%f\u0026rdquo; \u0026ldquo;%%f\u0026rdquo;)\nrename folders\nfor /f \u0026quot;Tokens=*\u0026quot; %f in ('dir /l/b') do (rename \u0026quot;%f\u0026quot; \u0026quot;%f\u0026quot;)\nRecursive version (added /r to dir)\nfor /f \u0026quot;Tokens=*\u0026quot; %f in ('dir /l/b/a-d/s') do (rename \u0026quot;%f\u0026quot; \u0026quot;%f\u0026quot;)\n","date":"10 October 2021","externalUrl":null,"permalink":"/posts/batch-rename-files-to-lowercase/","section":"Posts","summary":"Windows command line solutions for batch renaming files and folders to lowercase. Quick command-line utilities for file management and bulk renaming operations.","title":"Batch rename files to lowercase?","type":"posts"},{"content":"","date":"10 October 2021","externalUrl":null,"permalink":"/tags/command-line/","section":"Tags","summary":"","title":"Command Line","type":"tags"},{"content":"","date":"10 October 2021","externalUrl":null,"permalink":"/tags/files/","section":"Tags","summary":"","title":"Files","type":"tags"},{"content":"","date":"10 October 2021","externalUrl":null,"permalink":"/tags/lowercase/","section":"Tags","summary":"","title":"Lowercase","type":"tags"},{"content":"","date":"10 October 2021","externalUrl":null,"permalink":"/categories/note/","section":"Categories","summary":"","title":"Note","type":"categories"},{"content":"","date":"8 October 2021","externalUrl":null,"permalink":"/tags/commands/","section":"Tags","summary":"","title":"Commands","type":"tags"},{"content":"","date":"8 October 2021","externalUrl":null,"permalink":"/tags/git/","section":"Tags","summary":"","title":"Git","type":"tags"},{"content":" 1. Install # Configure user information for all local repositories\n$ git config --global user.name \u0026quot;[name]\u0026quot;\nSets the name you want attached to your commit transactions\n$ git config --global user.email \u0026quot;[email address]\u0026quot;\nSets the email you want attached to your commit transactions\n$ git config --global color.ui auto\nEnables helpful colorization of command line output\n2. Branches # Branching Branches are an important part of working with Git. Any commits you make will be made on the branch you’re currently “checked out” to. Use git status to see which branch that is.\n$ git branch [branch-name]\nCreates a new branch\n$ git switch -c [branch-name]\nSwitches to the specified branch and updates the working directory\n$ git merge [branch]\nCombines the specified branch’s history into the current branch. This is usually done in pull requests, but is an important Git operation.\n$ git branch -d [branch-name]\nDeletes the specified branch\n3. Create repositories # A new repository can either be created locally, or an existing repository can be cloned. When a repository was initialized locally, you have to push it to GitHub afterwards.\n$ git init\nThe git init command turns an existing directory into a new Git repository inside the folder you are running this command. After using the git init command, link the local repository to an empty GitHub repository using the following command:\n$ git remote add origin [url]\nSpecifies the remote repository for your local repository. The url points to a repository on GitHub.\n$ git clone [url]\nClone (download) a repository that already exists on GitHub, including all of the files, branches, and commits\ngit clone https://\u0026lt;username\u0026gt;:\u0026lt;password\u0026gt;@github.com/\u0026lt;username\u0026gt;/\u0026lt;repository\u0026gt;.git\nClone with authentication.\n4. The .gitignore file # Sometimes it may be a good idea to exclude files from being tracked with Git. This is typically done in a special file named .gitignore. You can find helpful templates for .gitignore files at github.com/github/gitignore.\nlogs/ *.notes pattern*/\nSave a file with desired patterns as .gitignore with either direct string matches or wildcard globs.\ngit config --global core.excludesfile [file]\nsystem wide ignore pattern for all local repositories\n5. Synchronize changes # Synchronize your local repository with the remote repository on GitHub.com\n$ git fetch\nDownloads all history from the remote tracking branches\n$ git merge\nCombines remote tracking branches into current local branch\n$ git push\nUploads all local branch commits to GitHub\n$ git pull\nUpdates your current local working branch with all new commits from the corresponding remote branch on GitHub. git pull is a combination of git fetch and git merge\n6. Make changes # git status\nShow modified files in working directory, staged for your next commit\n$ git log\nBrowse and inspect the evolution of project files\n$ git log --follow [file]\nLists version history for a file, beyond renames (works only for a single file)\n$ git diff [first-branch]...[second-branch]\nShows content differences between two branches\ngit diff --staged\nDiff of what is staged but not yet committed\n$ git show [commit]\nOutputs metadata and content changes of the specified commit\n$ git add [file]\nSnapshots the file in preparation for versioning\n$ git commit -m \u0026quot;[descriptive message]\u0026quot;\nRecords file snapshots permanently in version history\ngit commit -am \u0026quot;Your commit message\u0026quot;\nCombine add and commit for tracked files\ngit config --global alias.ac '!git add -A \u0026amp;\u0026amp; git commit -m'\nCreate a new command, eg combine add and commit in to ac command\n7. Temporary commits # Temporarily store modified, tracked files in order to change branches git stash\nSave modified and staged changes\ngit stash list\nList stack-order of stashed file changes\ngit stash pop\nWrite working from top of stash stack\ngit stash drop\nDiscard the changes from top of stash stack\n8. Redo commits # Erase mistakes and craft replacement history\n$ git reset [commit]\nUndoes all commits after [commit], preserving changes locally\n$ git reset --hard [commit]\nDiscards all history and changes back to the specified commit\nCAUTION! Changing history can have nasty side effects. If you need to change commits that exist on GitHub (the remote), proceed with caution. If you need help, reach out at github.community or contact support.\n9. Search # $ git grep \u0026quot;hello\u0026quot;\nA text search on all files in the directory\n$ git grep \u0026quot;hello\u0026quot; v2.5\nIn any version of a text search:\n$ git log -s 'keyword'\nShow commits that introduced a specific keyword\n$ git log -S 'keyword' --pickaxe-regex\nShow commits that introduced a specific keyword (using a regular expression)\n9. Github flow # Git flow The zoo of working areas 10. Git Submodule # # Add a Git Submodule git submodule add \u0026lt;remote_url\u0026gt; \u0026lt;destination_folder\u0026gt; # Pull a Git Submodule git submodule update --init --recursive git submodule update --remote # Remove the submodule entry from .git/config git submodule deinit -f path/to/submodule # Remove the submodule directory from the superproject\u0026#39;s .git/modules directory rm -rf .git/modules/path/to/submodule # Remove the entry in .gitmodules and remove the submodule directory located at path/to/submodule git rm -f path/to/submodule 11. Glossary # git: an open source, distributed version-control system GitHub: a platform for hosting and collaborating on Git repositories commit: a Git object, a snapshot of your entire repository compressed into a SHA branch: a lightweight movable pointer to a commit clone: a local version of a repository, including all commits and branches remote: a common repository on GitHub that all team members use to exchange their changes fork: a copy of a repository on GitHub owned by a different user pull request: a place to compare and discuss the differences introduced on a branch with reviews, comments, integrated tests, and more HEAD: representing your current working directory, the HEAD pointer can be moved to different branches, tags, or commits when using git switch ","date":"8 October 2021","externalUrl":null,"permalink":"/posts/git-cheatsheet/","section":"Posts","summary":"Essential Git and GitHub command reference including installation, configuration, branching, merging, and submodule management for developers.","title":"Git \u0026 Github cheatsheet","type":"posts"},{"content":"","date":"8 October 2021","externalUrl":null,"permalink":"/tags/github/","section":"Tags","summary":"","title":"Github","type":"tags"},{"content":"","date":"8 October 2021","externalUrl":null,"permalink":"/tags/submodules/","section":"Tags","summary":"","title":"Submodules","type":"tags"},{"content":"","date":"8 October 2021","externalUrl":null,"permalink":"/tags/version-control/","section":"Tags","summary":"","title":"Version-Control","type":"tags"},{"content":"ODATA actions in Data Entities provide a way to inject behaviors into the data model, or expose custom business logic from Dynamics 365 Finance \u0026amp; Operations. You can add actions by adding a method to the data entity and then decorating the method with specific attributes [SysODataActionAttribute]\nI use this Odata actions mostly in automation job like after refreshing data from PROD to UAT, we need to enable users, assign company to users, enable batches \u0026hellip; Or simply consume it in Power Automate.\n1. Create an action to OData entity # You can create a new entity following this standard docs or you can duplicate any standard entity. I created AutomationDataEntity. Right-click the enitity, select View code and add the code\npublic class AutomationDataEntity extends common { //1st example [SysODataActionAttribute(\u0026#34;assignUserToCompany\u0026#34;, false)] public static void assignUserToCompany(NetworkAlias _networkAlias, DataAreaName _company) { UserInfo userInfo; ttsbegin; select firstonly forupdate userInfo where userInfo.networkAlias == _networkAlias; userInfo.company = _company; userInfo.update(); ttscommit; } //2nd example [SysODataActionAttribute(\u0026#34;ReturnRental\u0026#34;, true)] public str ReturnRental() { return \u0026#34;Rental was successfully returned. Thanks for your business\u0026#34;; } //following 3rd example of an OData action takes in a parameter and returns a list [SysODataActionAttribute(\u0026#34;GetColors\u0026#34;, true), SysODataCollectionAttribute(\u0026#34;return\u0026#34;, Types::Record, \u0026#34;CarColor\u0026#34;)] public List GetColorsByAvailability(boolean onlyAvailableVehicles) { List returnList = new List(Types::Record); // do something return returnList; } } In this example, the SysODataActionAttribute class decorates the assginUserToCompany method that is exposed as an action. The first argument of the attribute is the publicly exposed name of the action, and the second argument indicates whether this action need an entity instance or not. If you set the second argument to false, the method has to be static.\nYou might need reset IIS service to update Odata endpoint.\n2. Test Entity Odata actions with Postman and Power Automate # 2.1. With Postman # Please follow this document or this blog for basic configurations in Dynamics 365 Finance \u0026amp; Operation, Azure to work with Postman.\nConsuming the first example Specify Odata endpoint request with POST method into Postman application\n[finopsURL]/data/AutomationDatas/Microsoft.Dynamics.DataEntities.assignUserToCompany [finopsURL] = https://yourenvironment.cloudax.dynamics.com\nHere is the Json file contains the parameters for assignUserToCompany method\n{ \u0026#34;_networkAlias\u0026#34;:\u0026#34;Max.Nguyen@Microsoft.com\u0026#34;, \u0026#34;_company\u0026#34;:\u0026#34;USMF\u0026#34; } Click Send and you will get your logic executed.\nall-about-odata-actions-in-dynamics-365-finance-and-operations Consuming the second example Everything should be remain the same, you just need to change the method to ReturnRental\n[finopsURL]/data/AutomationDatas/Microsoft.Dynamics.DataEntities.ReturnRental Click Send and you will get an error\n{ \u0026#34;Message\u0026#34;: \u0026#34;No HTTP resource was found that matches the request URI \u0026#39;https://[devaos].cloudax.dynamics.com/data/AutomationDatas/Microsoft.Dynamics.DataEntities.ReturnRental\u0026#39;. No route data was found for this request.\u0026#34; } The reason is that you set the second argument to true, that means you need an instance for AutomationDatas entity before you can use ReturnRental method. My entity created based on CustGroup table, so to get an instance I need DataAreaId and CustGroupID. The correct endpoint should be\n[finopsURL]/data/AutomationDatas(dataAreaId=\u0026#39;USMF\u0026#39;,CustomerGroupId=\u0026#39;BRIDGE\u0026#39;)/Microsoft.Dynamics.DataEntities.ReturnRental The result\n{ \u0026#34;@odata.context\u0026#34;: \u0026#34;https://[devaos].cloudax.dynamics.com/data/$metadata#Edm.String\u0026#34;, \u0026#34;value\u0026#34;: \u0026#34;Rental was successfully returned. Thanks for your business\u0026#34; } 2.2. With Power Automate # Consuming the first example Create a simple Power Automate with Dynamics 365 Finance \u0026amp; Operations connector, to consume Odata actions we use \u0026ldquo;Execute action\u0026rdquo; action following\nall-about-odata-actions-in-dynamics-365-finance-and-operations Consuming the second example when specify action in Execute action, Dynamics 365 Finance \u0026amp; Operations connector understand that this needs an instance\nall-about-odata-actions-in-dynamics-365-finance-and-operations 3. More # In Odata actions, you can return a list\n[SysODataActionAttribute(\u0026#34;GetColors\u0026#34;, true), SysODataCollectionAttribute(\u0026#34;return\u0026#34;, Types::Record, \u0026#34;CarColor\u0026#34;)] public List GetColorsByAvailability(boolean onlyAvailableVehicles) { List returnList = new List(Types::Record); // do something return returnList; } The following example of an OData action takes in list a parameter.\n[SysODataActionAttribute(\u0026#34;GetColorsByAvailability\u0026#34;, false), SysODataCollectionAttribute(\u0026#34;InventSiteIdList\u0026#34;, Types::String), SysODataCollectionAttribute(\u0026#34;return\u0026#34;, Types::String)] public static str GetColorsByAvailability(List InventSiteIdList) { str strCommaSeperated; List list = new List(Types::String); ListEnumerator ListEnumerator; ListEnumerator = InventSiteIdList.getEnumerator(); while (ListEnumerator.moveNext()) { strCommaSeperated += strFmt(\u0026#39;%1, \u0026#39;, ListEnumerator.current()) ; } return strCommaSeperated; } The following example of an OData action takes in list and enum.\n[SysODataActionAttribute(\u0026#34;EnableCTEntities\u0026#34;, false), SysODataCollectionAttribute(\u0026#34;EntityList\u0026#34;, Types::String), SysODataCollectionAttribute(\u0026#34;return\u0026#34;, Types::String)] public static str EnableCTEntities(List EntityList, DMFChangeTrackingType ChangeTrackingType) { str strCommaSeperated; List list = new List(Types::String); int processedCounter; ListEnumerator le = EntityList.getEnumerator(); DMFEntity entity; while (le.moveNext()) { strCommaSeperated += strFmt(\u0026#39;\u0026#34;%1\u0026#34;,\u0026#39;, le.current()) ; entity = DMFEntity::find(le.current()); if(entity.DMFChangeTrackingType != DMFChangeTrackingType::None) { DMFEntityBase::DisableChangeTracking(entity); } DMFEntityBase::enableChangeTrackingOnEntity(entity.EntityName, ChangeTrackingType); processedCounter++; } info(strfmt(\u0026#34; %1 entity(s) processed\u0026#34;, processedCounter)); return strCommaSeperated; } Consuming the action in postman\n[finopsURL]/data/AutomationDatas/Microsoft.Dynamics.DataEntities.EnableCTEntities { \u0026#34;EntityList\u0026#34; : [\u0026#34;Analysis Services enum cache\u0026#34;,\u0026#34;Employee V2\u0026#34;,\u0026#34;Employment V2\u0026#34;], \u0026#34;ChangeTrackingType\u0026#34;: \u0026#34;PrimaryTable\u0026#34; } In those examples,the SysODataCollectionAttribute class enables OData to expose strongly typed collections from X++. This class takes in three parameters:\nThe name of the parameter that is a list (Use return for the return value of the method.). The X++ type of the members of this list. The public name of the OData resource that is contained in the collection. You can find actions that are defined on data entities by searching for the SysODataActionAttribute attribute in metadatasearch.\nIf you want to check how many Odata actions available for an entity, you can go here and search for an entity.\nhttps://[devaos].cloudax.dynamics.com/data/$metadata \u0026lt;Action Name=\u0026#34;removeDeleteCT\u0026#34; IsBound=\u0026#34;true\u0026#34;\u0026gt; \u0026lt;Parameter Name=\u0026#34;AutomationData\u0026#34; Type=\u0026#34;Collection(Microsoft.Dynamics.DataEntities.AutomationData)\u0026#34;/\u0026gt; \u0026lt;Parameter Name=\u0026#34;_entityName\u0026#34; Type=\u0026#34;Edm.String\u0026#34;/\u0026gt; \u0026lt;/Action\u0026gt; \u0026lt;Action Name=\u0026#34;assginUserToCompany\u0026#34; IsBound=\u0026#34;true\u0026#34;\u0026gt; \u0026lt;Parameter Name=\u0026#34;AutomationData\u0026#34; Type=\u0026#34;Collection(Microsoft.Dynamics.DataEntities.AutomationData)\u0026#34;/\u0026gt; \u0026lt;Parameter Name=\u0026#34;_networkAlias\u0026#34; Type=\u0026#34;Edm.String\u0026#34;/\u0026gt; \u0026lt;Parameter Name=\u0026#34;_company\u0026#34; Type=\u0026#34;Edm.String\u0026#34;/\u0026gt; \u0026lt;/Action\u0026gt; \u0026lt;Action Name=\u0026#34;ReturnRental\u0026#34; IsBound=\u0026#34;true\u0026#34;\u0026gt; \u0026lt;Parameter Name=\u0026#34;AutomationData\u0026#34; Type=\u0026#34;Microsoft.Dynamics.DataEntities.AutomationData\u0026#34;/\u0026gt; \u0026lt;ReturnType Type=\u0026#34;Edm.String\u0026#34;/\u0026gt; \u0026lt;/Action\u0026gt; \u0026lt;Action Name=\u0026#34;addToAllUserGroups\u0026#34; IsBound=\u0026#34;true\u0026#34;\u0026gt; \u0026lt;Parameter Name=\u0026#34;AutomationData\u0026#34; Type=\u0026#34;Collection(Microsoft.Dynamics.DataEntities.AutomationData)\u0026#34;/\u0026gt; \u0026lt;Parameter Name=\u0026#34;_userId\u0026#34; Type=\u0026#34;Edm.String\u0026#34;/\u0026gt; \u0026lt;/Action\u0026gt; At the time I\u0026rsquo;m writing this post, Odata actions does not support COC extension (Application 39, Platform 63). So if you write some thing like this, it won\u0026rsquo;t work. [ExtensionOf(dataentityviewstr(CustCustomerGroupEntity))] final class CustCustomerGroupEntity_KA_Extension { [SysODataActionAttribute(\u0026#34;ReturnRental\u0026#34;, false)] public static str ReturnRental() { return \u0026#34;Rental was successfully returned. Thanks for your business\u0026#34;; } } Thank you for reading.\n","date":"25 May 2021","externalUrl":null,"permalink":"/posts/all-about-odata-actions-in-dynamics-365-finance-and-operations/","section":"Posts","summary":"Comprehensive guide to creating and using OData actions in D365 Finance Operations data entities including Power Automate integration and automation scenarios.","title":"All about Odata actions in Dynamics 365 Finance And Operations","type":"posts"},{"content":"","date":"25 May 2021","externalUrl":null,"permalink":"/tags/api-development/","section":"Tags","summary":"","title":"Api-Development","type":"tags"},{"content":"","date":"25 May 2021","externalUrl":null,"permalink":"/tags/automation/","section":"Tags","summary":"","title":"Automation","type":"tags"},{"content":"","date":"25 May 2021","externalUrl":null,"permalink":"/tags/data-entities/","section":"Tags","summary":"","title":"Data-Entities","type":"tags"},{"content":"","date":"25 May 2021","externalUrl":null,"permalink":"/tags/odata-actions/","section":"Tags","summary":"","title":"Odata-Actions","type":"tags"},{"content":"","date":"25 May 2021","externalUrl":null,"permalink":"/tags/postman/","section":"Tags","summary":"","title":"Postman","type":"tags"},{"content":"","date":"25 May 2021","externalUrl":null,"permalink":"/tags/power-automate/","section":"Tags","summary":"","title":"Power-Automate","type":"tags"},{"content":"Open Windows PowerShell in Admin mode\nNavigate to the PowerShell scripts\ncd K:\\AosService\\PackagesLocalDirectory\\Plugins\\AxReportVmRoleStartupTask\\ Execute the below commands:\nFor deploying all SSRS reports ./DeployAllReportsToSSRS.ps1 -PackageInstallLocation “K:\\AosService\\PackagesLocalDirectory” For deploying the specific reports ./DeployAllReportsToSSRS.ps1 -Module ApplicationSuite -ReportName \u0026lt;ReportName\u0026gt; -PackageInstallLocation “K:\\AosService\\PackagesLocalDirectory” Example:\n./DeployAllReportsToSsrs.ps1 -Module MaxCustomization -ReportName MaxCheque_US.Report -PackageInstallLocation \u0026#34;K:\\AosService\\PackagesLocalDirectory\u0026#34; ./DeployAllReportsToSsrs.ps1 -Module ApplicatoinSuite -ReportName Cust* -PackageInstallLocation \u0026#34;C:\\AosService\\PackagesLocalDirectory\u0026#34; ","date":"17 January 2021","externalUrl":null,"permalink":"/posts/deploy-ssrs-reports-in-dynamics-365-finance-scm-using-powershell/","section":"Posts","summary":"Deploy SSRS reports to Dynamics 365 Finance and Operations environments using PowerShell scripts. Automate report deployment for all reports or specific reports with DeployAllReportsToSSRS script.","title":"Deploy SSRS reports in Dynamics 365 Finance, SCM using Powershell","type":"posts"},{"content":"","date":"17 January 2021","externalUrl":null,"permalink":"/tags/deployment/","section":"Tags","summary":"","title":"Deployment","type":"tags"},{"content":"","date":"17 January 2021","externalUrl":null,"permalink":"/categories/report/","section":"Categories","summary":"","title":"Report","type":"categories"},{"content":"","date":"17 August 2020","externalUrl":null,"permalink":"/tags/database-movement-api/","section":"Tags","summary":"","title":"Database Movement API","type":"tags"},{"content":"","date":"17 August 2020","externalUrl":null,"permalink":"/tags/dynamics-365-commerce/","section":"Tags","summary":"","title":"Dynamics 365 Commerce","type":"tags"},{"content":"","date":"17 August 2020","externalUrl":null,"permalink":"/tags/dynamics-365-supply-chain-management/","section":"Tags","summary":"","title":"Dynamics 365 Supply Chain Management","type":"tags"},{"content":"Microsoft provides a versioned set of capabilities that you can currently use to copy databases between environments, and to list and download database backups.\nwhat you can do with Database movement API so far:\nList database backups Create database refresh Create a database export Get operation activity status More supported actions will be added in later releases.\nThe endpoint uses impersonation authentication base, please follow to register a new application by using the Azure portal\n1. Postman environment setup # Open Postman -\u0026gt; manage environments -\u0026gt; Add\ntenant_id: {tenant_id get from AAD} client_id: {get from the application that you have created before} client_secret: {get from the application that you have created before} username: {LCS user name with owner permission} password: {LCS user password} grant_type: password resource: https://lcsapi.lcs.dynamics.com projectId: {Your LCS Project ID} bearerToken: {this will be populated when authentication} Postman environment setup 2. Authentication with Postman # You get the authentication bearer with POST method and https://login.microsoftonline.com/{{tenant_id}}/oauth2/token endpoint.\nIn the request Body, please do following:\nAuthentication with Postman Click Send, and you will have access token to start using the API.\ntoken 3. Cosnume the APIs with Postman # To call the Database Movement API, you attach the access token as a bearer token to the authorization header in your HTTP request. So in Postman, modify the headers tab like bellow\nAuthorization:Bearer {{bearerToken}} x-ms-version:\u0026#39;2017-09-15\u0026#39; Content-Type:application/json Cosnume 3.1. List database backups # GET https://lcsapi.lcs.dynamics.com/databasemovement/v1/databases/project/{{projectId}} And we’ll get a JSON with a list of the DB backups on our LCS Asset Library:\n{ \u0026#34;DatabaseAssets\u0026#34;: [ { \u0026#34;Id\u0026#34;: \u0026#34;12314234-862e-4a6a-800d-0c64e982284a\u0026#34;, \u0026#34;ProjectId\u0026#34;: 123123, \u0026#34;OrganizationId\u0026#34;: 123124, \u0026#34;Name\u0026#34;: \u0026#34;backup\u0026#34;, \u0026#34;FileName\u0026#34;: \u0026#34;ATbackup.bacpac\u0026#34;, \u0026#34;FileDescription\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;FileLocation\u0026#34;: \u0026#34;https://uswedpl1catalog.blob.core.windows.net/product-ax7productname/******\u0026#34;, \u0026#34;ModifiedDateTime\u0026#34;: \u0026#34;2020-08-17T09:52:50.077\u0026#34;, \u0026#34;CreatedDateTime\u0026#34;: \u0026#34;2020-08-17T09:52:45.297\u0026#34;, \u0026#34;CreatedByName\u0026#34;: null, \u0026#34;ModifiedByName\u0026#34;: null } ], \u0026#34;IsSuccess\u0026#34;: true, \u0026#34;OperationActivityId\u0026#34;: \u0026#34;5053e0dd-66e3-4832-a9f8-1e2d621562e1\u0026#34;, \u0026#34;ErrorMessage\u0026#34;: null, \u0026#34;VersionEOL\u0026#34;: \u0026#34;9999-12-31T23:59:59.9999999\u0026#34; } 3.2. Create database refresh # POST https://lcsapi.lcs.dynamics.com/databasemovement/v1/refresh/project/{projectId}/source/{sourceEnvironmentId}/target/{targetEnvironmentId}\n{ \u0026#34;IsSuccess\u0026#34;: true, \u0026#34;OperationActivityId\u0026#34;: \u0026#34;55eb4327-9346-4c7b-82bd-fe8ef15112c6\u0026#34;, \u0026#34;ErrorMessage\u0026#34;: null, \u0026#34;VersionEOL\u0026#34;: \u0026#34;9999-12-31T23:59:59.9999999\u0026#34; } 3.3. Create a database export # POST https://lcsapi.lcs.dynamics.com/databasemovement/v1/export/project/{projectId}/environment/{environmentId}/backupName/{backupName}\n{ \u0026#34;IsSuccess\u0026#34;: true, \u0026#34;OperationActivityId\u0026#34;: \u0026#34;55eb4327-9346-4c7b-82bd-fe8ef15112c6\u0026#34;, \u0026#34;ErrorMessage\u0026#34;: null, \u0026#34;VersionEOL\u0026#34;: \u0026#34;9999-12-31T23:59:59.9999999\u0026#34; } 3.4. Get operation activity status # GET https://lcsapi.lcs.dynamics.com/databasemovement/v1/fetchstatus/project/{projectId}/environment/{environmentId}/operationactivity/{operationactivityId}\n{ \u0026#34;IsSuccess\u0026#34;: true, \u0026#34;OperationActivityId\u0026#34;: \u0026#34;6a90b45f-1764-4077-b924-3f4671540237\u0026#34;, \u0026#34;ErrorMessage\u0026#34;: null, \u0026#34;VersionEOL\u0026#34;: \u0026#34;9999-12-31T23:59:59.9999999\u0026#34;, \u0026#34;ProjectId\u0026#34;: \u0026#34;12345\u0026#34;, \u0026#34;EnvironmentId\u0026#34;: \u0026#34;5362377c-bc37-4f92-b30e-fe0c1e664cc0\u0026#34;, \u0026#34;ActivityId\u0026#34;: \u0026#34;55eb4327-9346-4c7b-82bd-fe8ef15112c6\u0026#34;, \u0026#34;CompletionDate\u0026#34;: null, \u0026#34;OperationStatus\u0026#34;: \u0026#34;InProgress\u0026#34; } ","date":"17 August 2020","externalUrl":null,"permalink":"/posts/testing-dynamics-365-finance-database-movement-api-with-postman/","section":"Posts","summary":"Test Dynamics 365 Finance Database Movement APIs using Postman with complete authentication setup and examples. Learn to list backups, refresh databases, and export data programmatically.","title":"Testing Dynamics 365 Finance Database Movement API with Postman","type":"posts"},{"content":"","date":"14 July 2020","externalUrl":null,"permalink":"/tags/d365fo.tools/","section":"Tags","summary":"","title":"D365fo.tools","type":"tags"},{"content":"","date":"14 July 2020","externalUrl":null,"permalink":"/tags/environment-management/","section":"Tags","summary":"","title":"Environment Management","type":"tags"},{"content":" Basic # Reference\nhttps://github.com/d365collaborative/d365fo.tools/wiki #Installation Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser Install-Module -Name d365fo.tools #-AllowClobber Import-Module -Name d365fo.tools Uninstall-Module -Name d365fo.tools Update-Module -Name d365fo.tools #help Get-Command -Module d365fo.tools Get-Help New-D365Bacpac Get-Help New-D365Bacpac -Full Get-Help New-D365Bacpac -Examples Get-Help Get-D365AzureDevOpsNuget -Full #deploy report Publish-D365SsrsReport -Module Kaynecustomization -ReportName KACheque_US.Report #environment Get-D365Environment -All Stop-D365Environment -All Stop-D365Environment -Aos -Batch Start-D365Environment -All Restart-D365Environment -All #users Import-D365ExternalUser -Id \u0026#34;mnguyen\u0026#34; -Name \u0026#34;max\u0026#34; -Email \u0026#34;max@automaly.com\u0026#34; -Company \u0026#34;002\u0026#34; Get-D365Module Get-Help Set-D365Admin -Full Get-Help Set-D365SysAdmin -Full Set-D365Admin \u0026#34;max@automaly.com\u0026#34; Get-D365User -Email \u0026#34;max@automaly.com\u0026#34; | Enable-D365User #maintenance mode Enable-D365MaintenanceMode -ShowOriginalProgress Disable-D365MaintenanceMode -ShowOriginalProgress LCS # Get-D365LcsApiToken -ClientId \u0026#34;***\u0026#34; -Username \u0026#34;\u0026#34; -Password \u0026#34;\u0026#34; -LcsApiUri \u0026#34;https://lcsapi.lcs.dynamics.com\u0026#34; | Set-D365LcsApiConfig -ProjectId 000000 Invoke-D365LcsEnvironmentStart -ProjectId 1269585 -EnvironmentId \u0026#34;d5dc45bb-\u0026#34; Invoke-D365LcsEnvironmentStop -ProjectId 1269585 -EnvironmentId \u0026#34;d5dc45bb-\u0026#34; Import a bacpac file into a Tier1 environment # Invoke-D365InstallSqlPackage Import-D365Bacpac -BacpacFile \u0026#34;J:\\MSSQL_BACKUP\\AxDB_UAT.bacpac\u0026#34; -ImportModeTier1 -NewDatabaseName AxDB_UAT -ShowOriginalProgress Stop-D365Environment -All Switch-D365ActiveDatabase -NewDatabaseName \u0026#34;AxDB_UAT\u0026#34; Invoke-D365DBSync -ShowOriginalProgress Start-D365Environment -All DB Sync \u0026amp; Build # # Get database backup Get-D365LcsDatabaseBackups # Build Invoke-D365DbSyncModule -Module \u0026#34;Kaynecustomization\u0026#34; -ShowOriginalProgress Invoke-D365ModuleCompile -Module \u0026#34;Kaynecustomization\u0026#34; -ShowOriginalProgress Invoke-D365DBSync -ShowOriginalProgress SSRS # Publish-D365SsrsReport -Module GR -ReportName GR_InvSalesVelocityRpt.AutoDesign1 ","date":"14 July 2020","externalUrl":null,"permalink":"/posts/d365fo.tools/","section":"Posts","summary":"Master d365fo.tools PowerShell module for Dynamics 365 Finance and Operations automation. Comprehensive guide covering installation, environment management, database operations, and SSRS deployment.","title":"How To d365fo.tools","type":"posts"},{"content":"","date":"14 July 2020","externalUrl":null,"permalink":"/tags/lcs/","section":"Tags","summary":"","title":"LCS","type":"tags"},{"content":"","date":"7 July 2020","externalUrl":null,"permalink":"/categories/architecture/","section":"Categories","summary":"","title":"Architecture","type":"categories"},{"content":"","date":"7 July 2020","externalUrl":null,"permalink":"/tags/architecture/","section":"Tags","summary":"","title":"Architecture","type":"tags"},{"content":"","date":"7 July 2020","externalUrl":null,"permalink":"/tags/concepts/","section":"Tags","summary":"","title":"Concepts","type":"tags"},{"content":"","date":"7 July 2020","externalUrl":null,"permalink":"/tags/dotnet/","section":"Tags","summary":"","title":"Dotnet","type":"tags"},{"content":"","date":"7 July 2020","externalUrl":null,"permalink":"/tags/framework/","section":"Tags","summary":"","title":"Framework","type":"tags"},{"content":" Framework # In programming, frameworks allow programmers to concentrate on the actual tasks they are faced with rather than to waste their time reinventing the wheel. Usually, frameworks are shipped with a set of predefined functions and classes. When using Spring (Java) or Symfony (PHP) for example, programmers do not need to think about things such as persistence, routing and session management too much because the work is done by standardized framework components.\nPlatform # platform, on the other hand, provides both the hardware and the software tools needed to run an application – be it a standalone program or one which has been built on top of a framework. Mostly, it comes in the flavor of Platform-as-a-Service (PaaS), meaning that the code-base of the platform software itself is not distributed or licensed. Like .NET platform or Windows platform or various cloud-based Platform-as-a-service solutions (like Heruko)\nNodejs, JAVA, .NET are examples of platforms or development platforms. This becomes the core of web application.\nYou work on a platform. You use a framework.\n","date":"7 July 2020","externalUrl":null,"permalink":"/posts/platform-vs-framework/","section":"Posts","summary":"Clear explanation of the key differences between software frameworks and platforms with practical examples. Understand when to use frameworks vs platforms in development architecture decisions.","title":"Framework vs. Platform","type":"posts"},{"content":"","date":"7 July 2020","externalUrl":null,"permalink":"/tags/nodejs/","section":"Tags","summary":"","title":"Nodejs","type":"tags"},{"content":"","date":"7 July 2020","externalUrl":null,"permalink":"/tags/platform/","section":"Tags","summary":"","title":"Platform","type":"tags"},{"content":"","date":"30 June 2020","externalUrl":null,"permalink":"/tags/.net-4.7.2/","section":"Tags","summary":"","title":".NET 4.7.2","type":"tags"},{"content":" Prerequisite # Before analysing a trace file, you might need to create a database for trace data. When you do troubleshooting actions on any VMs lower than D365FO 10.X.X (i.e. AX2012, D365FO 7.X, D365FO 8.X), no database was pre-created for trace\u0026rsquo;s data. You will need to register a new one. Please check here.\nA good tip of using Excel to analyse INSERT INTO statement captured in a Trace file: Check here.\nNow we are good to get ourselves into this beautiful example.\nThe beautiful example # The given case # I had a case which was solved by analysing a trace file. That case gave me a huge happiness so I would like to share with you all. This case required some skills of analysing the trace file, understanding the logic of D365 indexes, navigating through Visual Studio, using SSMS queries to find the things we need. So, I believe this is a very nice example yet simple enough for everyone to start learning how to use such tools, especially Trace Parser.\nIssue description # When I tried to authorise some Adjusted Demand Forecast records, I failed. System threw one error saying The record already exists.\nIssue Self issue-scoping # The error message was pretty straightforward. It can be understood as: Cannot create a record in table Demand Forecast (with its name in [AxDB].[ForecastSales]) because the record already exists in such table.\nNote\nIn fact, different records in D365FO can be distinguished by some different key values of them. Such key values are unique for each record. So, for example, 2 records might have exactly similar details of Sales Order or Sales Quantity but they can be deemed different if they have different RecID values.\nIn this case, due to some reasons, the system was trying to insert a new record into ForecastSales table with some values which are already existing in such table. And, thus, failed.\nWe need to find what is/are that duplicated value(s) and try to fix it (them).\nTroubleshooting # Visual Studio: Checking indexes # First and foremost, for any \u0026ldquo;Record has been existed\u0026rdquo; issues, the very first thing that we would need to check is the indices of the tables because the indices are the ones which decide the duplication rule (Allowed or Not allowed).\nI would need to find which values in ForecastSales table do not allow duplicated values. This can be done by check ForecastSales.Indexes using Visual Studio.\nOpen Visual Studio and look for forecastsales table in the AOT.\nFind the table Right-click on it \u0026gt; Open Designer to open Table designer. Expand Indexes (this is somewhat bugging me for a long time because the plural form of Index should be Indices rather than Indexes, yet never mind).\nThe Index Choose View (on Menu bar) \u0026gt; Properties Window to open Properties window. Or, we can simply press F4.\nProperties Check all indexes to see if any indexes DO NOT allow duplicate. Those should be the indexes that we should tackle.\nProperties of Indices After analysing, I found that two indexes which do not allow duplicate. They were ExpandIdx and ForecastEntryNumberIdx. Expand those indexes to find which fields are included. They were (1) the combination of ExpandID and RecID and (2) ForecastEntryNumber.\nFound the ones We would need to take note these fields.\nTrace parser: Analysing the trace file # Before analysing any trace files, we would need to have the ID of the session in which we captured the file.\nGo to Question mark on the upper-right corner of your browser \u0026gt; Feedback \u0026gt; Find the session ID.\nSession ID Open Trace Parser from Start menu and Import the trace file that we captured.\nImport trace file Select grouping with same Session that we just took note.\nImport trace file Usually, we will need to analyse Call Tree, X++ and SQL included in the trace file to understand the issue\u0026rsquo;s cause. The approach much depends on the issue. In my case, I would look into SQL queries because I assumed that an INSERT INTO statement was made to the table ForecastSales.\nSwitch to SQL tab and search for \u0026ldquo;forecastsales\u0026rdquo; (pay attention to the asterisks). This means we want to search for any queries containing \u0026quot;forecastsales\u0026quot; no matter where the keyword is in the queries.\nstatement Luckily, I found one.\nThe problematic one By analysing the INSERT INTO statement using Excel, I found the values that system tried inserting into ForecastSales table:\nExpandID = \u0026lsquo;0\u0026rsquo; RecID = \u0026lsquo;5637233827\u0026rsquo; ForecastEntryNumber = \u0026lsquo;PAU-000063760\u0026rsquo; We would need to memorise these values or write them down somewhere.\nSSMS: Finding the duplicated values # Open Microsoft SQL Server Management Studio from Start menu and log in with default Windows Authentication.\nSSMS Open a New Query window by choosing Databases \u0026gt; AxDB \u0026gt; New Query.\nNew query I would execute 3 different queries because I wanted to look for duplicated values in 3 fields:\nExpandID = \u0026lsquo;0\u0026rsquo; RecID = \u0026lsquo;5637233827\u0026rsquo; ForecastEntryNumber = \u0026lsquo;PAU-000063760\u0026rsquo; Type queries in the window \u0026gt; Press F5 or Alt+X or Execute button to execute the queries.\nQuery result Examination:\nExpandID: Hmm, quite a lot of records having a same value of \u0026lsquo;0\u0026rsquo;, but when involving all these \u0026lsquo;0\u0026rsquo; with the unique RecID, the combination should be different (we can actually double check this one using the query select RECID, count(RECID) as Number from FORECASTSALES group by RECID order by Number desc, any Number \u0026gt;= 2 are the duplicated ones) RecID: No records were found \u0026ndash;\u0026gt; This means there should be no problem when inserting a new record with RecID = \u0026lsquo;5637233827\u0026rsquo; into this table. ForecastEntryNumber: One record was found \u0026ndash;\u0026gt; This means the system will throw such error \u0026ldquo;A record is existing in the table\u0026rdquo; when it tries inserting a new record because this field does not allow duplicate. We found it.\nD360FO client \u0026gt; Number Sequence # The solution for this particular issue should be simple: Find our way to the Number Sequence that is for ForecastEntryNumber and increase the Next value by 1.\nI showed no solution here because the main purpose of this post is to demonstrate the way that we can co-use such available tools to approach an issue. Yet, each issue requires more or less different approaches. I hope that some quick look into these might plant some hints and you all can develop your own way of using them.\nHappy Troubleshooting!\n","date":"30 June 2020","externalUrl":null,"permalink":"/posts/a-good-example-of-trace-parser-visual-studio-and-excel/","section":"Posts","summary":"Real-world troubleshooting example using Trace Parser, Visual Studio, and Excel to solve Dynamics 365 Finance and Operations issues. Complete methodology for analyzing duplicate record errors and SQL traces.","title":"A good example of Trace Parser, Visual Studio and Excel","type":"posts"},{"content":"More than often, you will come across INSERT INTO statements when analysing D365FO trace files.\nBelow is a good trick to know which values that the system was trying to insert into the tables.\nFirst, copy everything from the statement (click on the Code section \u0026gt; Ctrl + A \u0026gt; Ctrl + C).\ncopy the query Paste the script into Excel.\nPaste to Excel Remove any empty rows.\nRemove the empty rows Find the VALUES keyword (usually after RECID). Insert a new row right below that row you found and cut the VALUES part to it.\nBefore\nValues part before After\nValues part after Copy from VALUES to the end of the script (Choose the VALUES cell \u0026gt; Shift + Ctrl + Down Arrow).\nCopy the part Paste the copied values to any next columns, starting from the row where the very first column of the table appears.\nMove the part There, you can look for the columns with their inserted corresponding values.\nFor example:\nExpandID = \u0026lsquo;0\u0026rsquo; ExpandID RecID = \u0026lsquo;5637233827\u0026rsquo; RecID ForecastEntryNumber = \u0026lsquo;PAU-000063760\u0026rsquo; ForecastEntryNumber ","date":"30 June 2020","externalUrl":null,"permalink":"/posts/a-good-tip-of-using-excel-to-analyse-insert-into-statement-captured-in-a-trace-file/","section":"Posts","summary":"Practical tip for using Excel to analyze INSERT INTO statements from D365 Finance Operations trace files for better SQL debugging and troubleshooting.","title":"A good tip of using Excel to analyse INSERT INTO statement captured in a Trace file","type":"posts"},{"content":"","date":"30 June 2020","externalUrl":null,"permalink":"/tags/app-10.0.12/","section":"Tags","summary":"","title":"App 10.0.12","type":"tags"},{"content":"","date":"30 June 2020","externalUrl":null,"permalink":"/tags/debugging/","section":"Tags","summary":"","title":"Debugging","type":"tags"},{"content":"For the upcoming Dynamics 365 Finance Updates, Visual Studio 2017 and .NET runtime 4.7.2 required for PU36/10.0.12 or higher; New VMs deployed with PU36/10.0.12 or higher will have Visual Studio 2017 as well as .NET runtime 4.7.2 already installed.\nFor your dev/test/build Tier1 VMs, Microsoft recommends just redeploying a new VM, and you will be all set!\nIf you cannot deploy new VMs, please follow below steps to update .NET runtime, VS 2017 before installing PU36/10.0.12 or higher, this will be applied for cloud-hosted environment\n1. Download VS Professional 2017 15.9 here and install it # 2. The .NET runtime download is available here by clicking on the Download .NET Framework 4.7.2 Runtime and running the installation, restart required. # 3. Go to Dynamics Lifecycle Services and download PU36/10.0.12 or any higher package which is a part of the Platform and application binary, the VSIX file is located in the DevToolsService\\Scripts folder. # You need to install Microsoft.Dynamics.Framework.Tools.Installer and then Microsoft.Dynamics.Framework.Tools.InternalDevTools. After the installation, open the VS2017 if you should see Dynamics 365 menu extension like below\n4. If you try to access the client before applying the package you will get the error like below in event viewer and unable to access the environment, so you need to apply an update first. # AX is shutting down due to an error. Serialization version mismatch detect, make sure the runtime dlls are in sync with the deployed metadata. Version of file \u0026lsquo;194\u0026rsquo;. Version of dll \u0026lsquo;193\u0026rsquo;. 5. In LCS, navigate to your cloud-hosted environment, and apply Platform and application binary package PU36/10.0.12 or higher. After completed upgrading, you will be able to access the environment client. # Overall, there is no change in the compiler, metadata; this is only an update to the Visual Studio extensions and NET runtime for the tier1 VMs.\n","date":"30 June 2020","externalUrl":null,"permalink":"/posts/how-to-upgrade-to-visual-studio-2017-.net-4.7.2/","section":"Posts","summary":"Upgrade Dynamics 365 Finance and Operations development environments to Visual Studio 2017 and .NET 4.7.2 for PU36/10.0.12 compatibility. Step-by-step guide for cloud-hosted environment upgrades.","title":"How to upgrade to Visual Studio 2017, .NET 4.7.2 for PU36/10.0.12 and higher","type":"posts"},{"content":"","date":"30 June 2020","externalUrl":null,"permalink":"/tags/insert-statement/","section":"Tags","summary":"","title":"INSERT Statement","type":"tags"},{"content":"","date":"30 June 2020","externalUrl":null,"permalink":"/tags/installation/","section":"Tags","summary":"","title":"Installation","type":"tags"},{"content":"","date":"30 June 2020","externalUrl":null,"permalink":"/categories/onebox/","section":"Categories","summary":"","title":"Onebox","type":"categories"},{"content":"","date":"30 June 2020","externalUrl":null,"permalink":"/tags/performance-analysis/","section":"Tags","summary":"","title":"Performance Analysis","type":"tags"},{"content":"","date":"30 June 2020","externalUrl":null,"permalink":"/tags/pu36/","section":"Tags","summary":"","title":"PU36","type":"tags"},{"content":"","date":"30 June 2020","externalUrl":null,"permalink":"/tags/sql-analysis/","section":"Tags","summary":"","title":"SQL Analysis","type":"tags"},{"content":"","date":"30 June 2020","externalUrl":null,"permalink":"/tags/trace-parser/","section":"Tags","summary":"","title":"Trace Parser","type":"tags"},{"content":"","date":"30 June 2020","externalUrl":null,"permalink":"/tags/visual-studio-2017/","section":"Tags","summary":"","title":"Visual Studio 2017","type":"tags"},{"content":" 1. Example two: A new Forms response is submitted then Flow promts for an approval request before a new record is created in Vendors table # In the last example, we created a simple Flow to create a new Vendor Account from submitted Forms responses. The process was made as simple as it could be: When a new Forms response if submitted, a new Vendor Account will be created on D365FO client.\nTo make the process more reliable, we will now add an approval step to the Flow. It means before a new Vendor Account is created, the user will have the right to Approve or Reject the request.\n1.1. Step 1: Add a new step to the Flow # The flow that we have is like this.\nThe old flow We will add a step right before the new record is created.\nAdd a new step We will go with Approval \u0026gt; Start and wait for an approval.\nAdd approval request This step will offer several types of approval in which the most common ones are All users must approve or First approve/reject from any user. To make it simple, we will go with First approval because in this example, we will have only one user.\nAs straightforward as they seem, the fields explain themselves. We will start an approval request, set a title for it and assign it to a user (only users in the same organisation as you).\nSingle approval Note 2-1\nAlmost all fields including Title, Details, etc. are fully customisable by using Dynamic content.\nThe flow now will look like this.\nRevised flow 1.2. Step 2: Testing out # Trigger a test run of the flow.\nTest run Test run triggered The test run is ready, waiting for the input from MS Forms.\nTest run ready Submit a new response.\nForm new response The flow will run. The process will show that an approval is being waited from the assigned user.\nWaiting for an approval An approval request will be sent to the mailbox of the assigned user. That user can check the request in Office.com \u0026gt; Outlook.\nApproval request Upon approval, the flow will finish its pending step and a new record will be created.\nFlow finishes 2. Example three: From the created record in Vendors table, add related records in other tables # In the last example, we added an Approval step to the Flow which will allow users to give Approve or Reject action toward the request coming from the Form.\nWe can actually utilise the Flow one step further: To create additional records on different tables that might depend on the created record in VendTable.\nTo make it easier to understand, the process is like this:\nCreate a new Vendor Account by using input from the Form. Create a new Bank Account with the Bank Account ID exactly similar to the Vendor Account. Add some contact details to the Vendor Account. Which entities should we target to? They are:\nFor Vendor Bank Account: VendorBankAccounts For Vendor Contact Details: PartyContacts You can play around in Visual Studio to get used to looking for an Entity that might fulfil the requirements of your intergration. Check out the next part of this article to get some quick tips into that.\nAssuming that we now have a Flow as we configured in the last two examples, we can add some more steps like these underneath.\n2.1. Step 1: Add a new step to add a new record to VendorBankAccounts and PartyContacts # Given the case that we had a Vendor Account and Bank Account for that Vendor Account, the records would be like this.\nRelation in SSMS The relation should be: VendTable.AccountNum = VendBankAccount.VendAccount\nOn the client, the information should be illustrated like this.\nVendor Bank Account And, when checking the Bank Account details, we would find.\nVendor Bank Details Now, to do so, we will add a new step right after the creation of VendTable record.\nA new step Instance = Environment URL (same as any other steps) Entity name = VendorBankAccounts (check my post about good tips with Visual Studio to know how to find the Data Entity) Supplier account = Supplier account from last step Bank account= Supplier account from last step (Because I would like to have same Vendor Account and Bank Account) When saying \u0026ldquo;from the last step\u0026rdquo;, I meant this.\nSelecting Dynamic Content from former steps In MS FLow, any steps that are already executed will have outputs. We, in this step, are taking the Supplier Account from the last step of creating a new record in VendTable . This dynamic content was generated when the new record is created.\nNote 3-1\nKeep in mind that if the last step is not \u0026ldquo;Creating a new record\u0026rdquo;, chance is that you cannot take the output from it because there\u0026rsquo;s simply none.\nClick on Show advanced options so we can add more information to the Vendor Bank Account.\nSelect Show advanced options Add more details to the bank account:\nName = Bank account name chosen from the Form using Dynamic Content (we don\u0026rsquo;t want to copy any more values from the VendTable record - we actually will specify a bank account name when composing a response on the Form) Bank account number = Bank account number chosen from the Form using Dynamic Content Add more details to bank account We finished with Vendor Bank Account.\nWe will do just the same with the record in PartyContacts.\nParty ID = Party ID from VendTable record Contact number/address = Email from the Form (in this case, I would like to add an email address - it is totally up to you to opt to add phone number, Skype, Twitter and some other contact detail that D365FO is supporting) Purpose = I am \u0026ldquo;hard-coding\u0026rdquo; this \u0026quot;Business\u0026quot; (the supported purpose of Contact can be found on Vendor Card on D356FO client - this purpose should mainly be used when sending emails, i.e. D365FO want to send Purchase Order Confirmation to any email addresses with purpose \u0026quot;Invoice\u0026quot;) Vendor Contact Details 2.2. Step 2: Testing out # Form input.\nCompany details Bank details Contact details Results on D365FO client.\nContact details Bank account Bank account details There you go, simple integration between MS Forms, MS Automate and D365FO client. I am seeing that Microsoft is improving such by adding more actions on MS Automate. I believe we will be able to do many more jobs with the built-in utilities of MS Automate.\n3. How to determine the Data Entity that should be used in the Power Automate # The names of the target entity on D365FO client and being found in Power Automate should be different. You can always find them out by testing several import/export but, with the help of Visual Studio, you will be able to save a lot of time. This, however, requires a certain extent of experience working with data integration on D365FO.\nGiven the case that we would like to import data to All Vendors, we will start our search in Workspaces \u0026gt; Data Management \u0026gt; Data Entities. Apply several filters here and there, and looking for potential ones that we usually do, we will finally end our search at the VendVendorV2Entity\nData Entities Making our way to Visual Studio, it is not a difficult task for us to find out the Entity.\nVendVendorV2Entity Check out the Properties, we will need to get details in the Public group.\nProperties In Public:\nIs Public: If it is Yes, the entity can be found in Power Automate; otherwise, No. Public Collection Name: Entity name on Power Automate. Furthermore, by checking the Entity\u0026rsquo;s fields, we can get the information of mapping between the Entity and the physical table VendTable.\nEntity fields Give yourself some time to play around between MS Forms, MS Automate and Visual Studio. You will finally see the relations between them.\n","date":"28 June 2020","externalUrl":null,"permalink":"/posts/dynamics-365-finops-data-integration-using-microsoft-forms-part-2/","section":"Posts","summary":"Continue the Microsoft Forms integration series with advanced Power Automate flows and custom entity configurations for D365 Finance Operations data management.","title":"Dynamics 365 FinOps Data Integration using Microsoft Forms (Part 2)","type":"posts"},{"content":"","date":"28 June 2020","externalUrl":null,"permalink":"/tags/integration-framework/","section":"Tags","summary":"","title":"Integration Framework","type":"tags"},{"content":"","date":"28 June 2020","externalUrl":null,"permalink":"/tags/microsoft-forms/","section":"Tags","summary":"","title":"Microsoft Forms","type":"tags"},{"content":"","date":"28 June 2020","externalUrl":null,"permalink":"/tags/powerapps/","section":"Tags","summary":"","title":"PowerApps","type":"tags"},{"content":"With any D365FO users, Data Management workspace and Data Entities should have become one of the most used and well-known tools in the system. We all agree how powerful such integration framework is, especially when it comes to a large number of records that we would need to import into different tables.\nThe classic method that we have been utilizing is to include all source data in a single (or multiple, much depending on the purpose and order of data integration) Excel sheet, trigger an import execution, pass any validation layers that present and ultimately have the data available on D365FO. Now, I would like to propose another method that might come useful in some circumstances: Using Microsoft Forms.\nThe trio When # This method should be at its finest when you are planning to outsource the input to any external users.\nImagine you are a company who is using D365FO to leverage your daily work. You now want to add many local vendors to your system in form of new Vendor Accounts. It is fine to collect all information from them (i.e. Vendor Company’s name, their address, their contact details and so on), put everything in an Excel sheet and import it. Yet, chance is that it would take (a lot of) time for you to finish this task. You would then be very likely to try coming up with some methods to cut down time for it.\nThat demand should raise two questions:\nHow can we let the vendors enter their information by themselves? And, how can we then have all such information in our system? What # What should be needed?\nMicrosoft Forms: To establish a process in which you will publish a prepared form. Any vendors out there will have the access to it and they can fill any fields on in. Microsoft Power Automate aka. Microsoft Flow: To set up a protocol to push the input information (form responses) to the target (D365FO Data Entities). (Optional) Access to Visual Studio on your virtual machine: To help you determine the target Data Entities more easily and efficiently. How # The flow should go like this.\nThe Biggest FLow To make it short, when a response is submitted in Microsoft Form, the Flow in MS Power Automate is triggered automatically. An approval request will be sent to your Outlook mailbox and if it is approved, a new record will be created in the target data entity.\nLet go through three examples in the next articles in the series (from the simplest to a more complicated) so we will see the logic behind this process.\nAs easy as it sounds, in this example, we will create a new Vendor Account from Microsoft Forms with only a small number of fields being populate. Note\nTo help simplify the example, the number of fields is minimised. In other words, we will import just enough fields so the new Vendor Account is valid. Given that, only Vendor Account and Vendor Group are chosen to be imported.\nStep 1: Create a MS Form # To do so, we will access Microsoft Forms and create a new form. To make the new form usable, we will create two questions asking for inputs of Vendor Account and Vendor Group.\nExample 1 Form Note all information on the form is customisable. Note 1-1\nWe can make the questions\u0026hellip;any questions that suit the purpose of the form. Say, in reality, the question can be \u0026quot;What is your company's name?\u0026quot; if you want to send this form to any external vendor users. The question does not change the usability of the returned response\u0026rsquo;s value. It can still be mapped to VendAccount not matter what the question is. Note 1-2 The second question is being set in form of a Choice question. The given choices should match with available Vendor Group values found on your D365FO client. If this question is a Text one, chance is that its response might not match with any available Vendor Group values, thus, will return an error during Flow runtime. Vendor Groups can be found under Account Payable \u0026gt; Vendors \u0026gt; Vendor Groups. In this example, TopVendor and Others are two available Vendor Groups in my D365FO client.\nVendor Groups Step 2: Create a MS Flow # To do so, we will access Microsoft Power Automate and create a new flow. We will go with an Automated one in this case.\nAutomated flow Search for form and choose the trigger When a new response is submitted. Hit Create to create a new flow.\nForm trigger Choose the form that we just created using the dropdown list.\nChoose form Press New step, search for form and go with Get response details.\nNew step: Get response details In the new step, choose the Form ID. As soon as we move the cursor to the Response ID field, the FLow will suggest the Dynamics content that we can use. In this case, there should be only one dynamic content, which is List of response notifications Response ID. We will go with it by choosing it.\nGet response details After doing so, the flow should look like this.\nForm done Now, the reponse details will be sent from the Form to the Flow when a new response is submitted. Next, we will set up the step to create a new Vendor Account.\nCreate a new step, search for dynamics and go with Dynamics 365 for Finance and Operations.\nDynamics 365 FinOps Choose Create record action.\nCreate record action Choose the Dynamics 365 FinOps Instance from the dropdown list. If your client does not appear here, choose Enter custom value. For privacy, environments\u0026rsquo; name will be censored in our example.\nSet D365FO instance The Instance should be the link to your D365FO client. Set Entity name VendorsV2.\nSet Instance and Entity Note 1-3\nLater in this series, we will see how to find the exact Entity name using Visual Studio. Also, we will see in which condition, the Entity can be used in Power Automate.\nPopulate the fields that we want to import. In this example, we will populate only 3 fields: Group (VendorGroupID), Company (DataAreaId) and Supplier Account (VendorAccountNumber).\nDynamic content will be suggested automatically when the cursor is placed in each field.\nMap Form fields with Automate fields We can map Form fields with Automate fields or hardcode in these fields:\nGroup = Response of What is the Vendor Group? question. Company = (hardcode) usmf. Supplier Account = Response of What is the Vendor Account? question. Name = Supplier Account = Response of What is the Vendor Account? question (Show advanced option on the Flow to find the field Name (VendorOrganisationName)). These fields should be required when creating a new Vendor Account on D365FO client. Map Form fields with Automate fields We are done here with the set up.\nStep 3: Testing out # On Forms, choose the form that we just created, click on Preview so we can submit a form response.\nMap Form fields with Automate fields Check out All Vendors (VendTableListPage) on the client to find a new Vendor Account is created.\nMap Form fields with Automate fields Note 1-4\nUse Test option in Power Automate to follow the process of the Flow. This, in other words, is so-called \u0026quot;Run Flow with Debug\u0026quot; option.\n","date":"24 May 2020","externalUrl":null,"permalink":"/posts/dynamics-365-finops-data-integration-using-microsoft-forms-part-1/","section":"Posts","summary":"Learn how to integrate Microsoft Forms with Dynamics 365 Finance Operations using Power Automate and Data Entities for streamlined data collection and processing.","title":"Dynamics 365 FinOps Data Integration using Microsoft Forms (Part 1)","type":"posts"},{"content":"","date":"10 May 2020","externalUrl":null,"permalink":"/tags/data-type/","section":"Tags","summary":"","title":"Data Type","type":"tags"},{"content":"","date":"10 May 2020","externalUrl":null,"permalink":"/categories/database/","section":"Categories","summary":"","title":"Database","type":"categories"},{"content":"You will got an error like this when doing Database Synchronization after changing the data type of the field on the table:\nInvalidOperationException: Table \u0026hellip; : Converting Field \u0026lsquo;..\u0026rsquo; of Type \u0026lsquo;..\u0026rsquo; to \u0026lsquo;..\u0026rsquo; is not support. Please drop the original field, sync the table and add new field with same name if needed. Solution:\nDrop the table and delete references from SQLDictionary DROP TABLE AXDB.dbo.NAMEOFTABLE DELETE FROM AXDB.dbo.SQLDICTIONARY WHERE TABLEID IN ( SELECT TABLEID FROM SQLDICTIONARY WHERE NAME = \u0026#39;NAMEOFTABLE\u0026#39; AND FIELDID = 0 ) Restart IIS In VS 2015, run DB sync again. Thank you for reading.\n","date":"10 May 2020","externalUrl":null,"permalink":"/posts/database-sync-after-data-type-on-field-has-been-changed/","section":"Posts","summary":"Troubleshooting guide for resolving database synchronization errors in D365 Finance Operations when field data types have been changed.","title":"Database Sync after data type on field has been changed","type":"posts"},{"content":"","date":"10 May 2020","externalUrl":null,"permalink":"/tags/db-sync/","section":"Tags","summary":"","title":"DB Sync","type":"tags"},{"content":"","date":"10 May 2020","externalUrl":null,"permalink":"/tags/dynamics-365-finance-and-operations/","section":"Tags","summary":"","title":"Dynamics 365 Finance and Operations","type":"tags"},{"content":"","date":"10 May 2020","externalUrl":null,"permalink":"/tags/invalidoperationexception/","section":"Tags","summary":"","title":"InvalidOperationException","type":"tags"},{"content":"","date":"10 May 2020","externalUrl":null,"permalink":"/tags/table-sync/","section":"Tags","summary":"","title":"Table Sync","type":"tags"},{"content":"","date":"9 April 2020","externalUrl":null,"permalink":"/tags/chain-of-command/","section":"Tags","summary":"","title":"Chain of Command","type":"tags"},{"content":" Disclaimers: Try at your own risk, this is consider as a bug and it will be fixed soon. According to this MS article about Chain Of Command https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/extensibility/method-wrapping-coc#wrapper-methods-must-always-call-next\n\u0026ldquo;Wrapper methods must always call next Wrapper methods in an extension class must always call next, so that the next method in the chain and, finally, the original implementation are always called. This restriction helps guarantee that every method in the chain contributes to the result. In the current implementation of this restriction, the call to next must be in the first-level statements in the method body.\u0026rdquo;\nSo as described in the article, the Chain Of Command in Dynamics 365 finance and operations is used to add the logic before or after a method of a class is invoked and the original method will always be executed due to the compulsory of the next statement. When doing some implementations, we found out that there is a tricky way to completely ignore the execution of the original method of the class that is extended.\nPlease see below for more details: For example, I created a project and add a new runnable class named Alex:\nclass TestClass { public static void main(Args _args) { throw error (\u0026#34;Hello World\u0026#34;); } } When this class runs, a Hello World info message will be displayed in the FinOps UI. Then I used chain of command to create Alex_Extension class that extends this class and \u0026ldquo;override\u0026rdquo; the main method of the Alex\u0026rsquo;s class by putting the next call into another method and never call it like this:\n[ExtensionOf(classStr(TestClass))] final class Alex_Extension { public static void main(Args _args) { //Implement something here info (\u0026#34;Ok\u0026#34;); void ignore() { next main(_args); } } } When I run the AlexExtension, the original main method of the Alex class will be ignored and only the additional block of code that I wrote in the AlexExtension class will be executed, so only the OK info will appear.\nNow we will try with a sample scenario from D365 Finance and Operation. In General Ledger Module, we have General journals form\nWhen you click the button for Journal Print, the menu item will be triggered and point to the controller name: LedgerJournalController with LedgerJournalController class and the report will be generated.\nI will use COC to “override” the main method of LedgerJournalController class by applying the method above:\n[ExtensionOf(classStr(LedgerJournalController))] final class Alex_LedgerJournalController_Extension { public static void main(Args _args) { info(\u0026#34;ok\u0026#34;); void ignore_first() { next main(_args); } } } Using this I will ignore the the main method of LedgerJournalController class and instead of generate the report, the result will be only the OK info line in the extension class:\nThis is a little bit tricky because we still call next in our extension class as per the requirement of COC, but as we never call the method that \u0026ldquo;wrap\u0026rdquo; the next call so it will not be executed. You can try this to simply ignore or rewrite a method of a class in FinOps.\nThank you for reading.\n","date":"9 April 2020","externalUrl":null,"permalink":"/posts/how-to-ignore-standard-code-in-dynamics-365-finance-and-operations/","section":"Posts","summary":"Advanced technique for bypassing standard code in D365 Finance Operations using Chain of Command extensions with important disclaimers and risks.","title":"How to skip standard code in Dynamics 365 finance and operations","type":"posts"},{"content":"","date":"9 April 2020","externalUrl":null,"permalink":"/tags/skip-standard-code/","section":"Tags","summary":"","title":"Skip Standard Code","type":"tags"},{"content":"","date":"6 April 2020","externalUrl":null,"permalink":"/tags/onebox-vhd/","section":"Tags","summary":"","title":"Onebox Vhd","type":"tags"},{"content":" 1. Download Dynamics 365 finance and operations VHD files # Go to the LCS main page and select Shared asset library or go to Shared Asset Library.\nSelect the asset type Downloadable VHD.\nFind the VHD you are looking for based on the desired Finance and Operation version. The VHD is divided into multiple file parts that you need to download. For example, the asset files that start with \u0026ldquo;VHD - 10.0.5\u0026rdquo; are the different files you need in order to install version 10.0.5.\nDownload all files (parts) associated with the desired VHD to a local folder.\nAfter the download is complete, run the executable file that you downloaded, accept the software license agreement, and choose a file path to extract the VHD to.\nThis creates a local VHD file that you can use to run a local virtual machine.\nSign in to the VM by using the following credentials:\nUser name: Administrator Password: pass@word1 Provision the administrator user. For security reasons the reply URL setup for AAD was changed, The Admin user provisioning tool is deleted from 10.0.24 cloud hosted VM. More info here https://learn.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/dev-tools/access-instances#frequently-asked-questions.\nYou still have it in the VHD machine.\n2. Extend the Evaluattion license # Run cmd with Admin right. Run slmgr -dli to check the current period status. Name: Windows(R), ServerDatacenterEval edition Description: Windows(R) Operating System, TIMEBASED_EVAL channel Partial Product Key: H6F8M License Status: Licensed Timebased activation expiration: 259199 minute(s) (180 day(s)) Run slmgr –rearm to extend the evaluation period. Run slmgr –dlv to see how many extensions do you have left. You can only extend the license a limited number of times. 3. Rename VM # Update 2023\nFrom the VHD 10.0.29 version, the VHD name named with the version of it own, before that the computer name always MININT-F36S5EH. So we don\u0026rsquo;t have to remane the VM everytime we deploy a new VHD. VHD 10.0.29 Reference https://learn.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/migration-upgrade/vso-machine-renaming Rename and restart the machine before you start development or connect to Azure DevOps.\nUpdate the server name in SQL Server\nThe default credential for SQL server is axdbadmin and password AOSWebSite@12 You can also see the password (DataAccess.AxAdminSqlPwd) in the C:\\AOSService\\webroot\\web.config\nTo decrypt run this command:\nC:\\AOSService\\webroot\\bin\\Microsoft.Dynamics.AX.Framework.ConfigEncryptor.exe -decrypt C:\\AOSService\\webroot\\web.config To encrypt run this command:\nC:\\AOSService\\webroot\\bin\\Microsoft.Dynamics.AX.Framework.ConfigEncryptor.exe -encrypt C:\\AOSService\\webroot\\web.config\nIf you see the error\nerror\nNo certificate found for id \u0026lsquo;7366E25DC94FA8A400FA0037FFF3BB300D9482D4\u0026rsquo;\nPlease follow this step first.\nRun following query\nsp_dropserver [old_name] sp_addserver [new_name], local In these commands, be sure to replace old_name with the old name of the server and new_name with the new name. By default, the old name is MININT-F36S5EH, but you can run select @@servername to get the old name. Additionally, be sure to restart the SQL Server service after the commands have finished running.\nRestart SQL service\nOpen Reporting Services Configuration Manager for SQL Server 2016, then Select Database, select Change Database, and use the new server name.\nUpdate financial reporting # Go to LCS portal and download a one version package, we will need the scripts from it. Open a Microsoft Windows PowerShell command window as an admin, and run the following command. This command contains the default passwords that might have to be updated. Be sure to replace new_name with the new name.\ncd \u0026lt;update folder\u0026gt;\\MROneBox\\Scripts\\Update\\ConfigureMRDatabase.ps1 -NewAosDatabaseName AxDB -NewAosDatabaseServerName new_name -NewMRDatabaseName ManagementReporter -NewAxAdminUserPassword AOSWebSite@123 -NewMRAdminUserName MRUser -NewMRAdminUserPassword MRWebSite@123 -NewMRRuntimeUserName MRUSer -NewMRRuntimeUserPassword MRWebSite@123 -NewAxMRRuntimeUserName MRUser -NewAxMRRuntimeUserPassword MRWebSite@123 console.log(\u0026#39;Every repo must come with a mascot.\u0026#39;); CustTable custTable = CustTable::find(serviceOrderTable.CustAccount); CSG_CorrigoProUpdate corrigoProUpdate; if((custTable.AccountNum == serviceOrderTable.CustAccount) \u0026amp;\u0026amp; CSG_CorrigoProTable::Exist(custTable.CSGMasterAccount) \u0026amp;\u0026amp; serviceOrderTable.CSGCustomerPO != \u0026#39;\u0026#39; \u0026amp;\u0026amp; ((serviceOrderReason.StageId == \u0026#39;Started\u0026#39; || serviceOrderReason.StageId == \u0026#39;Susp-Other\u0026#39; || serviceOrderReason.StageId == \u0026#39;Susp-Parts\u0026#39; || serviceOrderReason.StageId == \u0026#39;Susp-Sched\u0026#39; || serviceOrderReason.StageId == \u0026#39;Complete\u0026#39;)) \u0026amp;\u0026amp; serviceOrderReason.Description != \u0026#39;Travel Back\u0026#39;) { ttsbegin; corrigoProUpdate.selectForUpdate(); corrigoProUpdate.AccountNum = serviceOrderTable.CustAccount; corrigoProUpdate.CSGMasterAccount = custTable.CSGMasterAccount; corrigoProUpdate.ServiceOrderId = serviceOrderReason.ServiceOrderId; corrigoProUpdate.CustomerPO = serviceOrderTable.CSGCustomerPO; corrigoProUpdate.ObjectName = #ObjectName; corrigoProUpdate.StageId = serviceOrderReason.StageId; corrigoProUpdate.Progress = serviceOrderTable.Progress; corrigoProUpdate.Technician = HcmWorker::find(serviceOrderTable.WorkerResponsible).name(); //With condition already in the custom method docuRef.Name = \u0026#39;Tech Notes\u0026#39; corrigoProUpdate.Notes = DocuRef::csgFirstonly1Note(\u0026#39;csg\u0026#39;, 287, serviceOrderTable.RecId, \u0026#39;Tech Notes\u0026#39;); corrigoProUpdate.ServiceDateUtc = serviceOrderTable.ServiceDateTime; corrigoProUpdate.ActionDateUtc = serviceOrderReason.CSGDateTimeExecuted; corrigoProUpdate.insert(); ttscommit; } Update the Azure Storage Emulator # From the Start menu, open Microsoft Azure Storage Emulator - v4.0, and run the following commands.\nAzureStorageEmulator.exe start\nIf you got an error Port conflict with existing application, please check this post.\nThis command verifies that the emulator is running.\nAzureStorageEmulator.exe status\nUpdate the server name\nAzureStorageEmulator.exe init -server new_name\nFor more information about Azure storage emulator please follow https://docs.microsoft.com/en-us/azure/storage/common/storage-use-emulator\n4. Location of packages, source code, and other AOS configurations # On a VM, you can find most of the application configuration by opening the web.config file of AOSWebApplication.\nStart IIS.\nGo to Sites \u0026gt; AOSWebApplication.\nRight-click, and then click Explore to open File Explorer.\nOpen the web.config file in Notepad or another text editor. The following keys are of interest to many developers and administrators:\nAos.MetadataDirectory – This key points to the location of the packages folder that contains platform and application binaries, and also source code. (Source code is available only in development environments.) Typical values are: c:\\packages, c:\\AosServicePackagesLocalDirectory, and J:AosServicePackagesLocalDirectory.\nDataAccess.Database – This key holds the name of the database.\nAos.AppRoot – This key points to the root folder of the Application Object Server (AOS) web application.\n5. Redeploying or restarting the runtime on the VM # To restart the local runtime and redeploy all the packages, follow these steps.\nOpen File Explorer, and go to C:\\CustomerServiceUnit.\nRight-click AOSDeploy.cmd, and then click Run as administrator.\nThis process might take a while. The process is completed when the cmd.exe window closes. If you just want to restart AOS (without redeploying the runtime), run iisreset from an administrator Command Prompt window, or restart AOSWebApplication from IIS.\n6. Update to the latest version # Please check this document for versions 10.0.24\n7. For (VHD) that was released for versions 10.0.24 and later # 7.1 Register a new application in Azure Active Directory # To register a new application in Microsoft Azure Active Directory (Azure AD), follow the steps outlined in Register app or web API. The new app registration should be for a web application, and the following redirect URIs should be added:\nhttps://usnconeboxax1aos.cloud.onebox.dynamics.com/ https://usnconeboxax1aos.cloud.onebox.dynamics.com/oauth/ Once created, make note of the Application (client) ID.\n7.2 Run the setup script # After you sign in with the Administrator account, right-click the desktop shortcut Generate Self-Signed Certificates, and select Run as administrator. When the script prompts for the application ID, provide the Application (client) ID created in Azure Active Directory.\nWhen the script finishes, the environment is ready for use. At this time, you can run the Admin Provisioning tool to set the administrator account, permissions, and tenant. Make sure that the email provided is for the Azure Active Directory tenant in which the application registration was created.\n8. For (VHD) that was released for versions 10.0.39 # You will get this error when starting the Dynamics 365 client.\nerror\nAADSTS700016: Application with identifier \u0026lsquo;b0cdba4e-ada9-4ef7-83ba-590322d2c529\u0026rsquo; was not found in the directory \u0026lsquo;Test_Test_ContosoAX\u0026rsquo;. This can happen if the application has not been installed by the administrator of the tenant or consented to by any user in the tenant. You may have sent your authentication request to the wrong tenant.\nYou can locate the admin provisioning tool from C:\\AOSService\\PackagesLocalDirectory\\bin, run it with admin right and polulate your email account, once it\u0026rsquo;s done, you will be able to access the client. More about admin provisioning tool here.\n","date":"6 April 2020","externalUrl":null,"permalink":"/posts/getting-onebox-vhd-dynamics-365-finance-and-operations-virtual-machine/","section":"Posts","summary":"Complete guide for setting up and configuring OneBox VHD virtual machines for Dynamics 365 Finance and Operations development environments.","title":"Set up a VHD for finance and operations apps","type":"posts"},{"content":"","date":"5 April 2020","externalUrl":null,"permalink":"/tags/azure-storage-emulator/","section":"Tags","summary":"","title":"Azure Storage Emulator","type":"tags"},{"content":" 1. Reason 2. Resolution 2.1. To determine the conflict program we can use this command in CMD 2.2. To change the default port for Azure storage Emulator The Microsoft Azure storage emulator is a tool that emulates the Azure Blob, Queue, and Table services for local development purposes. You can test your application against the storage services locally without creating an Azure subscription or incurring any costs. When you\u0026rsquo;re satisfied with how your application is working in the emulator, switch to using an Azure storage account in the cloud.\nIn Dynamics 365 finance and operations onebox environment, we also use Microsoft Azure Storage Emulator for same purposes. There is a common problem when you try to start its service or using Data entity Import/Export\nAzure-Storage-Emulator-Port-conflict-with-existing-application Port conflict with existing application\n1. Reason # By default, Azure storage emulator is using port number 10000, 10001, 10002 for Blob, Queue and Table services respectively. And there is a progress/system takes those ports already, so you are not able to start its service. We can simply use this command in CMD to see which one has conflict\nnetstat -p tcp -ano | findstr :10001\nAzure-Storage-Emulator-Port-conflict-with-existing-application The process ID 4 is currently taking port 10001.\n2. Resolution # You can either terminate the conflict program or change the default port for Azure Storage Emulator.\n2.1. To determine the conflict program we can use this command in CMD # Run following command to check which application/process has the same port, then simply go to task manager and terminate it.\ntasklist /fi \u0026quot;pid eq 4\u0026quot;\nAzure-Storage-Emulator-Port-conflict-with-existing-application 2.2. To change the default port for Azure storage Emulator # Go to your storage emulator default installation folder, which is located at C:\\Program Files (x86)\\Microsoft SDKs\\Azure\\Storage Emulator, open the AzureStorageEmulator.exe.config by notepad and edit the port number to different number\nAzure-Storage-Emulator-Port-conflict-with-existing-application When done, try to start its service again using\nAzureStorageEmulator.exe start\nAzure-Storage-Emulator-Port-conflict-with-existing-application Thank you for reading.\n","date":"5 April 2020","externalUrl":null,"permalink":"/posts/azure-storage-emulator-port-conflict-with-existing-application/","section":"Posts","summary":"Troubleshooting guide for resolving Azure Storage Emulator port conflicts in Dynamics 365 Finance and Operations OneBox environments with step-by-step solutions.","title":"Azure Storage Emulator 'Port conflict with existing application', Dynamics 365 finance and operations","type":"posts"},{"content":"","date":"5 April 2020","externalUrl":null,"permalink":"/tags/port/","section":"Tags","summary":"","title":"Port","type":"tags"},{"content":"","date":"5 April 2020","externalUrl":null,"permalink":"/tags/port-conflict/","section":"Tags","summary":"","title":"Port Conflict","type":"tags"},{"content":"","date":"25 January 2020","externalUrl":null,"permalink":"/tags/coding/","section":"Tags","summary":"","title":"Coding","type":"tags"},{"content":" The script will work for Dynamics 365 Finance \u0026amp; Operations version\nclass MaxGeneratePO { public static void main(Args _args) { int i = 0; // number of purchase orders NumberSeq numberSeq; PurchTable purchTable; PurchLine purchLine; InventDim inventDim; while (i \u0026lt;= 3) { ttsBegin; MaxGeneratePO createPO = new MaxGeneratePO(); numberSeq = NumberSeq::newGetNum(PurchParameters::numRefPurchId()); numberSeq.used(); purchTable.PurchId = numberSeq.num(); purchTable.initValue(); purchTable.initFromVendTable(VendTable::find(\u0026#39;US-101\u0026#39;)); if (!purchTable.validateWrite()) { throw Exception::Error; } purchTable.insert(); inventDim.clear(); purchLine.clear(); purchLine.initValue(); purchLine.PurchId = purchTable.PurchId; purchLine.ItemId = \u0026#39;D0002\u0026#39;; inventDim.InventSiteId = \u0026#34;1\u0026#34;; inventDim.InventLocationId = \u0026#34;11\u0026#34;; purchLine.InventDimId=InventDim::findOrCreate(inventDim).inventDimId ; purchLine.createLine(true, true, true, true, true, true); purchLine.PurchQty = 5; purchLine.PurchUnit = \u0026#34;ea\u0026#34;; purchLine.PurchPrice = createPO.randomAmount(); // get random amount nubmer purchLine.LineAmount = purchLine.calcLineAmount(); purchLine.update(); //PO confirm PurchFormLetter purchFormLetter; PurchFormLetter purchFormLetterPack; purchFormLetter = PurchFormLetter::construct(DocumentStatus::PurchaseOrder); purchFormLetter.update(purchTable, strFmt(\u0026#34;ConNum_%1\u0026#34;, purchTable.PurchId), systemDateGet(), PurchUpdate::All, AccountOrder::None, NoYes::No, NoYes::no); //Product receipt createPO.proceed(purchTable.PurchId, purchLine.ItemId,purchLine.InventDimId,purchLine.PurchQty,strFmt(\u0026#34;RptNum_%1\u0026#34;, purchTable.PurchId)); //Post PO createPO.postPOInvoice(purchTable.PurchId, strFmt(\u0026#34;RptNum_%1\u0026#34;, purchTable.PurchId)); info(strFmt(\u0026#34;Purchase order \u0026#39;%1\u0026#39; has been created\u0026#34;, purchTable.PurchId)); ttsCommit; i++; } } public boolean proceed(PurchId _purchId, ItemId _itemId,inventDimId _inventDimId, PurchQty _qty, PackingSlipId _productReceiptNumber) { return this.generateProductReceipt(_purchId, this.addToPurchLineList(_purchId, _itemId, _inventDimId, _qty), _productReceiptNumber); } public boolean generateProductReceipt(PurchId _purchId, List _purchLineList, PackingSlipId _productReceiptNumber) { boolean ret = true; PurchFormLetter purchFromLetter; PurchTable purchTable = PurchTable::find(_purchId); try { ttsbegin; purchFromLetter = PurchFormLetter::construct(DocumentStatus::PackingSlip); purchFromLetter.createFromLines(true); purchFromLetter.parmLineList(_purchLineList.pack()); purchFromLetter.update(purchTable, _productReceiptNumber, DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()), PurchUpdate::All); ttscommit; } catch { ret = false; } return ret; } public List addToPurchLineList(PurchId _purchId, ItemId _itemId,inventDimId _inventDimId, PurchQty _qty) { List purchLineList = new List(Types::Record); PurchLine purchLine = PurchLine::findItemIdInventDimId(_purchId, _itemId, _inventDimId); if(purchLine \u0026amp;\u0026amp; _qty \u0026gt; 0) { purchLine.PurchReceivedNow = _qty; purchline.modifiedField(fieldNum(PurchLine, PurchReceivedNow)); purchLineList.addEnd(purchLine); } return purchLineList; } public void postPOInvoice(PurchId purchId, PackingSlipId packingSlipId) { TmpFrmVirtual tmpFrmVirtualVend; PurchFormLetter_Invoice purchFormLetter; VendPackingSlipJour vendPackingSlipJour; SysQueryRun chooseLinesQuery; SysQueryRun chooseLinesPendingInvoiceQuery; container conTmpFrmVirtual; List selectedList = new List(Types::Record); select firstonly vendPackingSlipJour where vendPackingSlipJour.PurchId == purchId \u0026amp;\u0026amp; vendPackingSlipJour.PackingSlipId == packingSlipId; if (vendPackingSlipJour) { tmpFrmVirtualVend.clear(); tmpFrmVirtualVend.TableNum = vendPackingSlipJour.TableId; tmpFrmVirtualVend.RecordNo = vendPackingSlipJour.RecId; tmpFrmVirtualVend.NoYes = NoYes::Yes; tmpFrmVirtualVend.Id = vendPackingSlipJour.PurchId; tmpFrmVirtualVend.insert(); } chooseLinesQuery = new SysQueryRun(queryStr(PurchUpdate)); chooseLinesQuery.query().addDataSource(tableNum(VendInvoiceInfoTable)).enabled(false); // chooseLinesPendingInvoiceQuery needs to be initialized, although it will not be used chooseLinesPendingInvoiceQuery = new SysQueryRun(queryStr(PurchUpdatePendingInvoice)); chooseLinesPendingInvoiceQuery.query().dataSourceTable(tableNum(PurchTable)).addRange(fieldNum(PurchTable,PurchId)).value(queryValue(\u0026#39;\u0026#39;)); purchFormLetter = PurchFormLetter::construct(DocumentStatus::Invoice); purchFormLetter.chooseLinesQuery (chooseLinesQuery); purchFormLetter.parmQueryChooseLinesPendingInvoice(chooseLinesPendingInvoiceQuery); purchFormLetter.purchTable (PurchTable::find(PurchId)); purchFormLetter.transDate (systemDateGet()); purchFormLetter.parmParmTableNum (strFmt(\u0026#34;%1\u0026#34;,packingSlipId)); //This is invoice number purchFormLetter.printFormLetter (NoYes::No); purchFormLetter.sumBy (AccountOrder::Auto); purchFormLetter.specQty (PurchUpdate::PackingSlip); while select tmpFrmVirtualVend { selectedList.addEnd(tmpFrmVirtualVend); conTmpFrmVirtual = selectedList.pack(); } purchFormLetter.selectFromJournal(conTmpFrmVirtual); purchFormLetter.reArrangeNow(true); purchFormLetter.run(); } public int randomAmount() { RandomGenerate randomGenerate; randomGenerate = RandomGenerate::construct(); randomGenerate.parmSeed(new Random().nextInt()); return RandomGenerate.randomInt(100, 800); } } Thank you for reading.\n","date":"25 January 2020","externalUrl":null,"permalink":"/posts/create-po-confirm-receipt-post/","section":"Posts","summary":"Complete X++ code example for automating purchase order lifecycle in D365 Finance Operations including creation, confirmation, receipt, and posting processes.","title":"Create Purchase Orders - Confirm - Product receipt - Post using X++ in Dynamics 365 Finance \u0026 Operations","type":"posts"},{"content":"","date":"25 January 2020","externalUrl":null,"permalink":"/tags/purchase-order/","section":"Tags","summary":"","title":"Purchase Order","type":"tags"},{"content":"","date":"1 January 2020","externalUrl":null,"permalink":"/tags/assessment/","section":"Tags","summary":"","title":"Assessment","type":"tags"},{"content":"","date":"1 January 2020","externalUrl":null,"permalink":"/categories/ax2012/","section":"Categories","summary":"","title":"AX2012","type":"categories"},{"content":"","date":"1 January 2020","externalUrl":null,"permalink":"/tags/ax2012/","section":"Tags","summary":"","title":"AX2012","type":"tags"},{"content":"","date":"1 January 2020","externalUrl":null,"permalink":"/categories/ax2012-deprecated/","section":"Categories","summary":"","title":"AX2012 Deprecated","type":"categories"},{"content":"","date":"1 January 2020","externalUrl":null,"permalink":"/tags/business-process/","section":"Tags","summary":"","title":"Business-Process","type":"tags"},{"content":"","date":"1 January 2020","externalUrl":null,"permalink":"/tags/cumulative-update/","section":"Tags","summary":"","title":"Cumulative-Update","type":"tags"},{"content":"","date":"1 January 2020","externalUrl":null,"permalink":"/tags/customizations/","section":"Tags","summary":"","title":"Customizations","type":"tags"},{"content":"","date":"1 January 2020","externalUrl":null,"permalink":"/tags/data-migration/","section":"Tags","summary":"","title":"Data-Migration","type":"tags"},{"content":" # Area Question 1 Organization Structure Explain the Organization structure and hierarchy - how many legal entities/companies are involved in the AX 2009(or Current Implemented AX Version) implementation and how the org structure has been configured in AX 2009(or Current Implemented AX Version) 2 Implemented Business Processes in AX 2009(or Current Implemented AX Version) What does AX 2009(or Current Implemented AX Version)(or Current Implemented AX Version) do currently ? What is the main purpose of the current system for example for the supply chain management, only for material planning etc. 3 Business Criticality Who or How does the current system impact business ? What are the business critical operations AX 2009(or Current Implemented AX Version) currently running? What is the primary reason to upgrade to AX 2012(or Target AX Version) now? 4 Modules Is AX 2009(or Current Implemented AX Version) Retail and POS/MPOS currently used? 5 Modules Is Enterprise Portal functionalities in AX deployed? 6 Modules The number of modules used in the current system and list down the same 7 Modules Which of the implemented modules has undergone major changes ? 8 Customizations Done in AX Is there any specific customizations for your business done in the current system. List out the major customizations done 9 Coding \u0026amp; any other standards Is there any specific coding standards following in the current system 10 Data Migration What are the key data maintained in current system ? What are the critical transactional information available? Do you want to migrate all the transactions into AX 2012(or Target AX Version) 11 Integration Information What information flow into AX from other systems and does AX provide information to other systems in your environment? Which systems are dependent on AX 2009(or Current Implemented AX Version) for their operations.Please provide a list of the integrating systems along with data being exchanged between AX and the other system 12 Reports What are the reports which you use most frequently from AX 2009(or Current Implemented AX Version)? Provide a list of Custom Reports which were developed for Customer needs in AX 2009(or Current Implemented AX Version) 13 Deployment information Are there region specific localizations deployed? 14 Deployment information Are there remote users connecting to the central / distributed access point. Kindly indicate technologies used for remote connectivity 15 Deployment information Information about the license, security roles and configuration keys used during the implementation 16 Deployment information Is this a single site implementation or multi-site. Please provide with a detailed deployment document indicating geographies and technologies used. 17 Deployment information What is the current volume of the Production database (in GB) ? 18 Deployment information What platform does it run on? Database/OS used? Is it hosted in data center or is it on premise 19 Documents Can you provide us with Documentation on the implemented system like - Functional Requirement Document (FRD) or the Business Process Analysis (BPA) document and Data Flow Diagram Document (DFD) that was prepared during the implementation 20 Documents Can you provide us with the Solution Design Document \u0026amp; Technical Design Document for the customizations that are deployed in the current AX environment 21 ISV / Add On Solutions If the requirement is to upgrade to AX 2012(or Target AX Version), will Customer liaison with ISV \u0026amp; Third Party Add On Solution providers for compatibility with AX 2012(or Target AX Version) and support issues ? 22 ISV / Add On Solutions Please provide us with the documentation on ISV / Add On Solution like its functionality, data touch points with AX, integration method with AX. 23 ISV / Add On Solutions What are the ISV / AX Add-on Solutions used . Kindly confirm. 24 IT Staff Define the roles and responsibilities of the staff involved in maintaining the current application? E.g. ERP Manager, System Admin etc. 25 Testing Are Test Cases used for Testing the AX 2009(or Current Implemented AX Version) system available with you? 26 User and User Roles Who are the targeted users for the current system like only finance department, only supply chain users accountants etc. 27 User and User Roles What are the total number of named and concurrent users on AX 2009(or Current Implemented AX Version)? What is the peak load of concurrent users 28 Support Are you on an Active Support Plan for AX 2009(or Current Implemented AX Version) with Microsoft? Do you have an AX 2012(or Target AX Version) license or plan to upgrade in future? 29 Localization Is the GLS Layer implemented for you in AX 2009(or Current Implemented AX Version)? 30 Partner Is an AX Partner locally providing you day to day operations support ? Do you intend to use the same partner after AX 2012(or Target AX Version) upgrade? 31 Cloud Usage Do you use Cloud Infrastructure for any of your IT systems? 32 Cloud Usage Do you use Microsoft Azure for any application? 33 Cloud Usage Do intend to use AX with Azure? List customizations\nFunctional Area Description of Customization How is this Customization useful to business Additional Comments List integration\n# Integration Description External System Type Direction AX Module/ Table updated by this integration Why is this integration useful to business? Additional Comments from Customer 1 ","date":"1 January 2020","externalUrl":null,"permalink":"/posts/ax-upgrade-assessment-clarification-questions/","section":"Posts","summary":"Comprehensive questionnaire for assessing AX 2012 to Dynamics 365 Finance and Operations upgrade projects including organization structure and customizations analysis.","title":"Dynamics 365 Finance Operations upgrade questionaire","type":"posts"},{"content":"","date":"1 January 2020","externalUrl":null,"permalink":"/tags/feature-pack/","section":"Tags","summary":"","title":"Feature-Pack","type":"tags"},{"content":"","date":"1 January 2020","externalUrl":null,"permalink":"/tags/hotfix/","section":"Tags","summary":"","title":"Hotfix","type":"tags"},{"content":"","date":"1 January 2020","externalUrl":null,"permalink":"/tags/integration/","section":"Tags","summary":"","title":"Integration","type":"tags"},{"content":" What is an Update? # Updates include hotfixes, cumulative updates, and feature packs.\nHotfix: A fix or set of fixes that address a specific issue, problem, or customer scenario. Cumulative update: An update that contains all previous hotfixes to date. Feature pack: A group of updates that relate to a feature area or group of functionality. Contains design changes. 1. Types of Hotfixes # To determine which type of update is in a package, download the package, and then extract contents and review them to determine which type of update it is.\nTypes of Hotfixes 2. How can I tell if a binary update requires a schema update, and model store reinitialization? # The KB article will indicate that a hotfix requires a schema update, and that you should reinitialize the model store. You should assume that all cumulative updates require a schema update, and reinitialize the model store.\n3. How can I tell if an application update contains a report or web part? # There is currently no simple way to tell if a hotfix contains a report or web part. We recommend that you assume that all cumulative updates, service packs, and feature packs contain reports and web parts, and re-deploy reports and Enterprise Portal.\nIf you encounter an error after installing a hotfix, try deploying reports and web parts.\nInstallation Order # This diagram describes the order in which updates are applied in a test environment, and then applied in a production environment.\nApply updates to the database. Apply updates to a single local AOS instance. Apply updates to a single local client. (Compile, Synchronize, and get the environment running) Deploy reports to the report server. Deploy web parts to the Enterprise Portal server. Deploy updates to any retail components. The differences in a production environment are:\nImport the model store from the test environment to apply updates to the database. Mass deploy client updates (optional). Installation-Order Detailed Update Process # This diagram describes the update process in detail, in both the test and production environments.\nDetailed Update Process Update Tips and Tricks # Always update in a test environment first and run the Impact Wizard for application updates You can reduce the downtime of your production environment by fixing all code conflicts in a test environment, and identifying them early.\nMake sure that you have the correct product version Most updates apply only to released versions of a product. Note: Many demonstration virtual machines run pre-release versions of Microsoft Dynamics AX, and cannot run updates.\nInstall binary updates first, and if needed, reinitialize the model store before installing application updates If you do not reinitialize the model store, you will encounter many more errors in the Data Upgrade Cockpit.\nDo not skip the Software Update Checklist After you install an update, on the Model store has been modified form, select Start the software update checklist.\nIf you must generate CIL, restart all AOS instances\nInstall updates on all appropriate components (reports andweb parts) It is difficult to tell whether an update contains modified or new reports, or web parts—we recommend that redeploy reports and web parts with all CUs.\nCheck to see whether all of your current hotfixes are contained in the most recent cumulative update or feature pack—if not, reinstall it If you have a recent hotfix that is not included in the cumulative update or feature pack that you are installing, it will be removed. Reinstall the hotfix after you have applied update.\nConsider slipstreaming updates if you are doing a fresh install\nIf you are installing industry solutions, install them before installing updates\nTo minimize downtime, consider importing the model store into a non-default schema in the production environment, and then switching it to be the default schema For information about using non-default schemas, read How to: Create, Drop, or Reinitialize a Model Store.\n","date":"1 January 2020","externalUrl":null,"permalink":"/posts/microsoft-dynamics-ax-2012-update-process/","section":"Posts","summary":"Comprehensive guide to Microsoft Dynamics AX 2012 update process including hotfixes, cumulative updates, and feature pack installation procedures.","title":"Microsoft Dynamics AX 2012 Update Process","type":"posts"},{"content":"","date":"1 January 2020","externalUrl":null,"permalink":"/tags/migration/","section":"Tags","summary":"","title":"Migration","type":"tags"},{"content":"","date":"1 January 2020","externalUrl":null,"permalink":"/tags/model-store/","section":"Tags","summary":"","title":"Model-Store","type":"tags"},{"content":"","date":"1 January 2020","externalUrl":null,"permalink":"/tags/questionaire/","section":"Tags","summary":"","title":"Questionaire","type":"tags"},{"content":"","date":"1 January 2020","externalUrl":null,"permalink":"/tags/update-process/","section":"Tags","summary":"","title":"Update-Process","type":"tags"},{"content":"","date":"1 January 2020","externalUrl":null,"permalink":"/categories/upgrade/","section":"Categories","summary":"","title":"Upgrade","type":"categories"},{"content":"","date":"17 December 2019","externalUrl":null,"permalink":"/tags/.net/","section":"Tags","summary":"","title":".NET","type":"tags"},{"content":"","date":"17 December 2019","externalUrl":null,"permalink":"/tags/axdw/","section":"Tags","summary":"","title":"AXDW","type":"tags"},{"content":"","date":"17 December 2019","externalUrl":null,"permalink":"/tags/azure-sql-database/","section":"Tags","summary":"","title":"Azure SQL Database","type":"tags"},{"content":"","date":"17 December 2019","externalUrl":null,"permalink":"/tags/batch/","section":"Tags","summary":"","title":"BATCH","type":"tags"},{"content":"","date":"17 December 2019","externalUrl":null,"permalink":"/categories/business-events/","section":"Categories","summary":"","title":"Business Events","type":"categories"},{"content":"","date":"17 December 2019","externalUrl":null,"permalink":"/tags/cloud-hosted/","section":"Tags","summary":"","title":"Cloud Hosted","type":"tags"},{"content":"When you consume a custom data entity, you get an error\nerrorSystem.ArgumentOutOfRangeException : Length cannot be less than zero\u0026quot; and it works fine for standard data entities. The reason is the temporary XML file where the metadata stored which mismatches with the metadata from https://\u0026lt;yourenvironment\u0026gt;.cloudax.dynamics.com/data/$metadata\nYou can follow this post to understand how to create the XML file.\nIf you try to regenerate the metadata by saving the ODataClient.tt file, the XML will be accumulated, and the error keeps happening. The resolution here is simply delete it and regenerate metadata again by saving the ODataClient.tt file\nThank you for reading.\n","date":"17 December 2019","externalUrl":null,"permalink":"/posts/dynamics-365-finance-and-operations-odata-consuming-length-cannot-be-less-than-zero/","section":"Posts","summary":"Troubleshooting guide for resolving \u0026lsquo;Length cannot be less than zero\u0026rsquo; error when consuming OData services from Dynamics 365 Finance Operations in .NET applications.","title":"Dynamics 365 finance and operations ODATA consuming - Length cannot be less than zero","type":"posts"},{"content":"In this article, we will go through how to enable Power BI embedded in Dynamics 365 finance and operations version 10 in a cloud-hosted environment (customer managed). From the previous version of FinOps, Power BI embedded uses workspace collections at Azure to display the report, since the workspace collections have been deprecated, Microsoft also disables power BI embedded in cloud-hosted environments. You can only enable Power BI embedded in multiple boxes environments like UAT and production.\n1. Create workspace collections # Although the workspace collections have been deprecated, it does not show in the Azure portal and you could not create it by using the Azure portal, but you can create and manage by using Azure CLI.\nOpen PowerShell and run following\n// Allow policy set-executionpolicy remotesigned //Install AzureRM Install-Module -Name AzureRM -AllowClobber // Login to Azure using credentials Login-AzureRmAccount // select the subscription ID Select-AzureRmSubscription -SubscriptionId $subscriptionId $ResourceGroupName = “MaxWorkspaceCollections” $Location = \u0026#34;Southeast Asia\u0026#34; // Create workspace collections New-AzPowerBIWorkspaceCollection -ResourceGroupName $ResourceGroupName -WorkspaceCollectionName $WorkSpaceCollectionName -Location $Location // Obtain the access keys Get-AzPowerBIWorkspaceCollection -ResourceGroupName $ResourceGroupName -name \u0026#34;\u0026lt;yourWorkspacename\u0026gt;\u0026#34; 2. Create AxWD Azure SQL Database # We must use the Azure SQL Database for the AxDW in Dynamics 365 finance and operations cloud-hosted environment. Please follow this document to create Azure SQL DB.\nWe need at least 5 GB storage for Database, for Pricing tier, I will recommend using from S1, and name the database AxDB\nThis is my DB property\nEnable-Power-BI-Embedded-in-cloud-hosted I’m using Premium tier because I want to use the Columnstore Clustered indexes in Database; it helps performance a little bit faster. Once you have the Azure SQL Database, we can use SSMS to connect to the database and create a user for that DB. You need to get the user and password information in LCS, where the cloud-hosted provisioned.\nEnable-Power-BI-Embedded-in-cloud-hosted Use Master CREATE LOGIN axdwadmin WITH PASSWORD = \u0026#39;\u0026#39;; CREATE LOGIN axdwruntimeuser WITH PASSWORD = \u0026#39;\u0026#39;; Use AxDw CREATE USER axdwadmin FROM LOGIN axdwadmin; CREATE USER axdwruntimeuser FROM LOGIN axdwruntimeuser; ALTER ROLE db_owner ADD MEMBER axdwadmin; ALTER ROLE db_datareader ADD MEMBER axdwruntimeuser; 3. Configuring to enable Analytical Workspaces and Reports # What you are having now\nPower BI Embedded Service details from step 1\nWorkspace Collection Name: The name of the Workspace Collection created when deploying the Power BI Embedded Service Access Key1: The secret key #1 used to access the Power BI Embedded service Access Key2: The secret key #2 used to access the Power BI Embedded service Entity Store Database Service details from step 2\nDatabase name: AxDW Server name: Azure SQL Server name (*.database.windows.net) Server admin login: Username supplied in the SQL Server settings Password: Account password supplied when configuring SQL Server Run Notepad in administrator mode, open web.config from K:\\AOSService\\webroot in Dynamics 365 for finance and operations environment.\nUpdate the configuration settings:\n\u0026lt;add key=\u0026#34;BiReporting.DW\u0026#34; value=\u0026#34;[Database name]\u0026#34; /\u0026gt; \u0026lt;add key=\u0026#34;BiReporting.DWServer\u0026#34; value=\u0026#34;[Server name]\u0026#34; /\u0026gt; \u0026lt;add key=\u0026#34;BiReporting.DWRuntimeUser\u0026#34; value=\u0026#34;[Server Admin login]\u0026#34; /\u0026gt; \u0026lt;add key=\u0026#34;BiReporting.DWRuntimePwd\u0026#34; value=\u0026#34;[Password]\u0026#34; /\u0026gt; Update the Power BI Embedded Service configuration settings:\n\u0026lt;add key=\u0026#34;PowerBIEmbedded.AccessKey\u0026#34; value=\u0026#34;[Access Key1]\u0026#34; /\u0026gt; \u0026lt;add key=\u0026#34;PowerBIEmbedded.AccessKey2\u0026#34; value=\u0026#34;[Access Key2]\u0026#34; /\u0026gt; \u0026lt;add key=\u0026#34;PowerBIEmbedded.ApiUrl\u0026#34; value=\u0026#34;https://api.powerbi.com\u0026#34; /\u0026gt; \u0026lt;add key=\u0026#34;PowerBIEmbedded.IsPowerBIEmbeddedEnabled\u0026#34; value=\u0026#34;true\u0026#34; /\u0026gt; \u0026lt;add key=\u0026#34;PowerBIEmbedded.WorkspaceCollectionName\u0026#34; value=\u0026#34;[Workspace Collection Name]\u0026#34; /\u0026gt; After that, you need to restart IIS and Dynamics 365 for finance and operations batch service\n4. Refresh data entity store to AxDW # In Dynamics 365 for finance and operations, navigate to System administration \u0026gt; Setup \u0026gt; Entity Store, select all the entity store, and click refresh.\nAllow this process to complete in the background (~5 - 10mins). You can monitor the status of the background process using the Batch jobs.\nOnce the Progress is made, you can check the event message in the same form to make sure the refreshing working properly\nEnable-Power-BI-Embedded-in-cloud-hosted 5. PowerBI configuration (this is optional) # Configuring power BI for the workspace; please follow the document here\nThis is what you should have after the setup\nEnable-Power-BI-Embedded-in-cloud-hosted Check the result # If you want to check the result, go to Workspaces \u0026gt; Customer credit and collections \u0026gt; Analytics all companies\nEnable-Power-BI-Embedded-in-cloud-hosted Thank you for reading.\n","date":"17 December 2019","externalUrl":null,"permalink":"/posts/enable-power-bi-embedded-in-cloud-hosted-dynamics-365-finance-and-operations-8.0-+/","section":"Posts","summary":"Step-by-step guide for enabling Power BI Embedded integration in cloud-hosted Dynamics 365 Finance Operations 8.0+ environments including workspace configuration.","title":"Enable Power BI Embedded in cloud hosted Dynamics 365 finance and operations 8.0 +","type":"posts"},{"content":"","date":"17 December 2019","externalUrl":null,"permalink":"/tags/entity-store/","section":"Tags","summary":"","title":"Entity Store","type":"tags"},{"content":"","date":"17 December 2019","externalUrl":null,"permalink":"/tags/length-cannot-be-less-than-zero/","section":"Tags","summary":"","title":"Length Cannot Be Less Than Zero","type":"tags"},{"content":"","date":"17 December 2019","externalUrl":null,"permalink":"/tags/power-bi-embedded/","section":"Tags","summary":"","title":"Power BI Embedded","type":"tags"},{"content":"","date":"17 December 2019","externalUrl":null,"permalink":"/tags/reports/","section":"Tags","summary":"","title":"Reports","type":"tags"},{"content":"","date":"17 December 2019","externalUrl":null,"permalink":"/tags/workspaces-collections/","section":"Tags","summary":"","title":"Workspaces Collections","type":"tags"},{"content":"","date":"16 December 2019","externalUrl":null,"permalink":"/tags/authentication/","section":"Tags","summary":"","title":"Authentication","type":"tags"},{"content":" 1. Authentication # We need an authentication to connect Dynamics 365 finance and operations from .Net application by using service principal.\nHow to create an app registration in Azure https://docs.microsoft.com/en-us/azure/active-directory/develop/app-registrations-training-guide-for-app-registrations-legacy-users\nYou also need to add required permissions for Dynamics 365 finance and operations, please follow\nhttps://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/data-entities/services-home-page#register-a-web-application-with-aad\nThis is what you should have\nConsuming-Dynamics-365-Finance-and-Operations-OData-services-from-NET 2. Register your external application # a. In the FinOps application, go to System administration \u0026gt; Setup \u0026gt; Azure Active Directory applications. # b.\tSelect New. # c.\tFill in the fields for the new record: # In the Client Id field, enter the application ID that you registered in Azure AD. In the Name field, enter a name for the application. In the User ID field, select an appropriate service account user ID. For this example, we have selected the Admin user. However, as a better practice, you should provision a dedicated service account that has the correct permissions for the operations that must be performed. When you\u0026rsquo;ve finished, select Save. You\u0026rsquo;ve now finished setting up the prerequisites. After the external application retrieves an Azure AD authentication token, it should now be able to use the token in an authorization HTTP header to make subsequent service calls via OData or SOAP, for example.\n3. OData client configuration # Download the project here https://github.com/microsoft/Dynamics-AX-Integration Open ServiceSamples solution. We cannot use existing proxies and classes, so I need to regenerate them again. Under ODataUtility project, delete ODataClient.tt and ODataClient.ttinclude. To regenerate Odata client, right click on ODataUtility project \u0026gt; Add \u0026gt; New item, search for OData in Online and rename it to ODataClient.tt. Open ODataClient.tt, in MetadataDocumentUri add https://\u0026lt;yourEnvironment\u0026gt;.cloudax.dynamics.com/data/$metadata If you save the ODataClient.tt file, it will generate Odata proxies and classes. From PU12 onward, there are so many entities so you will get an error after compiling\nCombined length of user strings used by the program exceeds allowed limit. Try to decrease use of string literals.\nThere are 2 ways to fix it\na. Using temporary file # The simplest way to fix is add TempFilePath, ensure that you have write permission for this path, this is what you got\nConsuming-Dynamics-365-Finance-and-Operations-OData-services-from-NET Save the ODataClient.tt and there will be Test1.xml file created to store metadata, there should be a bug while generating the xml file, one more step you need to do is replace the double quote to single quote (a global replace of \u0026quot;\u0026quot; with \u0026quot; ), and this is what you have\nConsuming-Dynamics-365-Finance-and-Operations-OData-services-from-NET You can build the project without problem.\nb. Remove unused entities # Another work-around that works too, edit the ODataClient.ttinclude so that it parses only some of the entities that you want to use, this reducing the error. For instance, change the following foreach statement\nOriginal code: foreach (IEdmEntitySet entitySet in container.EntitySets()) { IEdmEntityType entitySetElementType = entitySet.EntityType(); string entitySetElementTypeName = GetElementTypeName(entitySetElementType, container); string camelCaseEntitySetName = entitySet.Name; if (this.context.EnableNamingAlias) { camelCaseEntitySetName = Customization.CustomizeNaming(camelCaseEntitySetName); } } Modified code: foreach (IEdmEntitySet entitySet in container.EntitySets()) { IEdmEntityType entitySetElementType = entitySet.EntityType(); string entitySetElementTypeName = GetElementTypeName(entitySetElementType, container); string camelCaseEntitySetName = entitySet.Name; //start of manual fix //only process entity names that containin a specific string, to reduce the string size if (((camelCaseEntitySetName.Contains(\u0026#34;CUST\u0026#34;)) || (camelCaseEntitySetName.Contains(\u0026#34;VEND\u0026#34;))) || (camelCaseEntitySetName.Contains(\u0026#34;SALES\u0026#34;))) { // emd of manual fix if (this.context.EnableNamingAlias) { camelCaseEntitySetName = Customization.CustomizeNaming(camelCaseEntitySetName); } } } 4. Authentication configuration # Under AuthenticationUtility project, you need to modify ClientConfiguration.cs follow, you can get all related information for the first step.\nConsuming-Dynamics-365-Finance-and-Operations-OData-services-from-NET From now, you can freely test the integrations under ODataConsoleApplication project. If you are testing with a custom data entity and you get this error\nSystem.ArgumentOutOfRangeException : Length cannot be less than zero.\nPlease check this post.\nThank you for reading.\n","date":"16 December 2019","externalUrl":null,"permalink":"/posts/consuming-dynamics-365-finance-and-operations-odata-services-from-net/","section":"Posts","summary":"Complete guide for consuming D365 Finance and Operations OData services from .NET applications including authentication, service principal setup, and C# implementation.","title":"Consuming Dynamics 365 Finance and Operations OData services from .NET","type":"posts"},{"content":"","date":"16 December 2019","externalUrl":null,"permalink":"/tags/csharp/","section":"Tags","summary":"","title":"Csharp","type":"tags"},{"content":"","date":"16 December 2019","externalUrl":null,"permalink":"/tags/service-principal/","section":"Tags","summary":"","title":"Service-Principal","type":"tags"},{"content":"","date":"5 November 2019","externalUrl":null,"permalink":"/tags/azure/","section":"Tags","summary":"","title":"Azure","type":"tags"},{"content":"","date":"5 November 2019","externalUrl":null,"permalink":"/tags/azure-functions/","section":"Tags","summary":"","title":"Azure-Functions","type":"tags"},{"content":"In Dynamics 365 finance and operations, Business events provide a mechanism that lets external systems receive notifications from FinOps applications. In this way, the systems can perform business actions in response to business events.\nThere are 3 types of business events: Application business events, Workflow business events, and Alerts as business events. You can also implement a new business event.\nBusiness events can be consumed using Microsoft Flow and Azure messaging services, and we use endpoint to manage the destinations for sending business events to, Microsoft supports many endpoints: Azure Service Bus Queue, Azure Service Bus Topic, Azure Event Grid, Azure Event Hub, HTTPS, Microsoft Flow. In this article I will show how to send business event to HTTPs endpoint that leveraging on Azure functions.\nThe scenario: Once a free text invoice is posted, Business event will be triggered and send messages to the HTTPs endpoint.\n1. HTTPs and Azure function # Ideally, I will create a new Azure function which has HTTPs endpoint to subscribe the business events in FinOps. To create Azure function please follow this https://docs.microsoft.com/en-us/azure/azure-functions/functions-create-first-azure-function\nHere is the simple line of code\nusing System.Net; using Microsoft.AspNetCore.Mvc; using Microsoft.Extensions.Primitives; using Newtonsoft.Json; public static async Task\u0026lt;IActionResult\u0026gt; Run(HttpRequest req, ILogger log) { log.LogInformation(\u0026#34;Dynamics 365 finance and operations notifications\u0026#34;); string requestBody = await new StreamReader(req.Body).ReadToEndAsync(); log.LogInformation(requestBody); return (ActionResult)new OkObjectResult($\u0026#34;Hello world\u0026#34;); } This basically listens the JSON messages from Business events and display the Json message at Console.\nFrom the Azure function you can get the HTTPs endpoint, save it for later reference.\nBusiness-events-and-HTTPs-endpoint 2. Application registration int AAD # We need an application to authenticate with FinOps and Azure function HTTPs. Go to Azure portal \u0026gt; AAD \u0026gt; App registrations \u0026gt; New registration\nBusiness-events-and-HTTPs-endpoint Name of the application. Depend on you have multitenant or not Dynamics 365 finance and operations URL API Permissions # Go to the newly created application \u0026gt; API permissions and adding permission as below\nBusiness-events-and-HTTPs-endpoint Secrets # Go to Certificates \u0026amp; secrets menu item and create a new client secret\nBusiness-events-and-HTTPs-endpoint After this you will have Application Id and Application Secret, save it for later.\n3. Key Vaults # In Azure portal create a new keyVault to store the HTTPs endpoint URL information\nBusiness-events-and-HTTPs-endpoint Access policy # Click next to create access policy (you also can set up this later after creating Key Vault)\nBusiness-events-and-HTTPs-endpoint Select all the permissions in Key, Secret and Certificate, In select principal choose the application you have created before.\nBusiness-events-and-HTTPs-endpoint Key Vault secret # Go to the newly created Key vault \u0026gt; secrets \u0026gt; generate a new one\nBusiness-events-and-HTTPs-endpoint Value is the endpoint URL for D365 to call the one we got from the first step. After this step you will have the Key vault DNS name https://maxfokeyvault.vault.azure.net/ and Key Vault secret name D365VaultSecretName That information will be needed for Business events configuration in Dynamics 365 finance and operations\n4. Creating HTTPs endpoint # Go to System administrator \u0026gt; Business events \u0026gt; Business events catalog, Click on Endpoints in Endpoint type choose HTTPS and click Next. Fill all the required information that you got from above steps.\nClick on Business events catalog, look for business event Id CustFreeTextInvoicePostedBusinessEvent, check the record and click Active; from there choose legal entity and the Endpoint that we have just created.\nBusiness-events-and-HTTPs-endpoint After that, if you check on Active events tab, there will be a new record created. That\u0026rsquo;s it, now I will create a free text invoice and post it, this is what I got from the console log in Azure.\nBusiness-events-and-HTTPs-endpoint With the JSON messages, you can deserialize it and save to Cosmos DB or do whatever in Azure function.\n5. About platform changes # Before PU26, Business event run in batch, following menu System admin \u0026gt; Business events \u0026gt; Start business events batch job\nBusiness-events-and-HTTPs-endpoint Business-events-and-HTTPs-endpoint Business-events-and-HTTPs-endpoint In BusinessEventsParameters, the value will be Enabled = 0 , BatchEnabled = 1.\nAfter PU26, the sending business events will be triggered directly from FinOps, you won\u0026rsquo;t find the menu System admin \u0026gt; Business events \u0026gt; Start business events batch job\nIn BusinessEventsParameters, the value will be Enabled = 1 , BatchEnabled = 0. If you have just upgraded from PU26 to higher version, the Business events are not getting triggered because the value might not be changed in BusinessEventsParameters and there is no batch. You should check this table according to the situation.\nThank you for reading.\n","date":"5 November 2019","externalUrl":null,"permalink":"/posts/business-events-and-https-endpoint/","section":"Posts","summary":"Complete guide to setting up Business Events with HTTPS endpoints in Dynamics 365 Finance \u0026amp; Operations using Azure Functions, AAD app registration, and Key Vault for secure webhook integration.","title":"Business events and HTTPs endpoint","type":"posts"},{"content":"","date":"5 November 2019","externalUrl":null,"permalink":"/tags/business-events/","section":"Tags","summary":"","title":"Business-Events","type":"tags"},{"content":"","date":"5 November 2019","externalUrl":null,"permalink":"/tags/https-endpoint/","section":"Tags","summary":"","title":"Https-Endpoint","type":"tags"},{"content":"Got inspired by this topic, I\u0026rsquo;d like to write this article to show you how to post multiple records in single request by using Postman.\nGenerally, batch requests are supported in the OData service, The easiest way is you can use the C# code approach from github and the excel add-ins in Dynamics 365 for finance and operations use Odata batch to communicate in a single request but how can we leverage it in Postman.\nUsing Excel add-in then add 2 customer groups records and submit to Dynamics 365 for finance and operations, while you are doing that using fiddler on the same box to see how the odata batch framework works. This can be done from POSTMAN too and you need to use header and body as you see in Fiddler.\nFor basic setting up Dynamics 365 for finance and operations and Postman please follow this offical document\n1. Get Dynamics 365 for finance and operations authorization # This is a result\n2019-10-15-Insert-multiple-records-in-single-request-using-Odata-from-Postman_1.png 2. Create a new POST request in Postman with header # 2019-10-15-Insert-multiple-records-in-single-request-using-Odata-from-Postman_2.png URL: {{resource}}/data/$batch*\nContent-Type: multipart/mixed;boundary=batch_d63a-e9be-2927\n3. Modify the Body in Postman # I will place 2 records for customer groups\n2019-10-15-Insert-multiple-records-in-single-request-using-Odata-from-Postman_3.png Full text here\n--batch_d63a-e9be-2927 Content-Type: multipart/mixed; boundary=changeset_2499-90ab-7b93 --changeset_2499-90ab-7b93 Content-Type: application/http Content-Transfer-Encoding: binary POST CustomerGroups?cross-company=true HTTP/1.1 Content-ID: 1 Accept: application/json;q=0.9, */*;q=0.1 OData-Version: 4.0 Content-Type: application/json OData-MaxVersion: 4.0 {\u0026#34;CustomerGroupId\u0026#34;:\u0026#34;1060\u0026#34;,\u0026#34;Description\u0026#34;:\u0026#34;Wholesales customers\u0026#34;,\u0026#34;PaymentTermId\u0026#34;:\u0026#34;Net30\u0026#34;,\u0026#34;IsSalesTaxIncludedInPrice\u0026#34;:\u0026#34;No\u0026#34;,\u0026#34;dataAreaId\u0026#34;:\u0026#34;usmf\u0026#34;} --changeset_2499-90ab-7b93-- --batch_d63a-e9be-2927 Content-Type: multipart/mixed; boundary=changeset_b573-33b2-85ff --changeset_b573-33b2-85ff Content-Type: application/http Content-Transfer-Encoding: binary POST CustomerGroups?cross-company=true HTTP/1.1 Content-ID: 2 Accept: application/json;q=0.9, */*;q=0.1 OData-Version: 4.0 Content-Type: application/json OData-MaxVersion: 4.0 {\u0026#34;CustomerGroupId\u0026#34;:\u0026#34;1070\u0026#34;,\u0026#34;Description\u0026#34;:\u0026#34;Wholesales customers1\u0026#34;,\u0026#34;PaymentTermId\u0026#34;:\u0026#34;Net30\u0026#34;,\u0026#34;IsSalesTaxIncludedInPrice\u0026#34;:\u0026#34;No\u0026#34;,\u0026#34;dataAreaId\u0026#34;:\u0026#34;usmf\u0026#34;} --changeset_b573-33b2-85ff-- Click send and this is what you got from response\n2019-10-15-Insert-multiple-records-in-single-request-using-Odata-from-Postman_4.png Full Response\n--batchresponse_45e87829-5a26-480e-8aaa-8a08c7a82c60 Content-Type: multipart/mixed; boundary=changesetresponse_27ed7621-d939-40b7-9f8b-be0421ff0cea --changesetresponse_27ed7621-d939-40b7-9f8b-be0421ff0cea Content-Type: application/http Content-Transfer-Encoding: binary Content-ID: 1 HTTP/1.1 201 Created ETag: W/\u0026#34;JzEsNjg3MTk0Nzk4MzUn\u0026#34; Location: https: //fodevb2819a3b6966913ddevaos.cloudax.dynamics.com/data/CustomerGroups(dataAreaId=\u0026#39;usmf\u0026#39;,CustomerGroupId=\u0026#39;1060\u0026#39;) Content-Type: application/json; odata.metadata=minimal OData-Version: 4.0 { \u0026#34;@odata.context\u0026#34;: \u0026#34;https://fodevb2819a3b6966913ddevaos.cloudax.dynamics.com/data/$metadata#CustomerGroups/$entity\u0026#34;, \u0026#34;@odata.etag\u0026#34;: \u0026#34;W/\\\u0026#34;JzEsNjg3MTk0Nzk4MzUn\\\u0026#34;\u0026#34;, \u0026#34;dataAreaId\u0026#34;: \u0026#34;usmf\u0026#34;, \u0026#34;CustomerGroupId\u0026#34;: \u0026#34;1060\u0026#34;, \u0026#34;ClearingPeriodPaymentTermName\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;DefaultDimensionDisplayValue\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;CustomerAccountNumberSequence\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;IsSalesTaxIncludedInPrice\u0026#34;: \u0026#34;No\u0026#34;, \u0026#34;Description\u0026#34;: \u0026#34;Wholesales customers\u0026#34;, \u0026#34;WriteOffReason\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;PaymentTermId\u0026#34;: \u0026#34;Net30\u0026#34;, \u0026#34;TaxGroupId\u0026#34;: \u0026#34;\u0026#34; } --changesetresponse_27ed7621-d939-40b7-9f8b-be0421ff0cea-- --batchresponse_45e87829-5a26-480e-8aaa-8a08c7a82c60 Content-Type: multipart/mixed; boundary=changesetresponse_541a7d21-af21-4d66-b410-fb4165599b54 --changesetresponse_541a7d21-af21-4d66-b410-fb4165599b54 Content-Type: application/http Content-Transfer-Encoding: binary Content-ID: 2 HTTP/1.1 201 Created ETag: W/\u0026#34;JzEsNjg3MTk0Nzk4MzYn\u0026#34; Location: https: //fodevb2819a3b6966913ddevaos.cloudax.dynamics.com/data/CustomerGroups(dataAreaId=\u0026#39;usmf\u0026#39;,CustomerGroupId=\u0026#39;1070\u0026#39;) Content-Type: application/json; odata.metadata=minimal OData-Version: 4.0 { \u0026#34;@odata.context\u0026#34;: \u0026#34;https://fodevb2819a3b6966913ddevaos.cloudax.dynamics.com/data/$metadata#CustomerGroups/$entity\u0026#34;, \u0026#34;@odata.etag\u0026#34;: \u0026#34;W/\\\u0026#34;JzEsNjg3MTk0Nzk4MzYn\\\u0026#34;\u0026#34;, \u0026#34;dataAreaId\u0026#34;: \u0026#34;usmf\u0026#34;, \u0026#34;CustomerGroupId\u0026#34;: \u0026#34;1070\u0026#34;, \u0026#34;ClearingPeriodPaymentTermName\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;DefaultDimensionDisplayValue\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;CustomerAccountNumberSequence\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;IsSalesTaxIncludedInPrice\u0026#34;: \u0026#34;No\u0026#34;, \u0026#34;Description\u0026#34;: \u0026#34;Wholesales customers1\u0026#34;, \u0026#34;WriteOffReason\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;PaymentTermId\u0026#34;: \u0026#34;Net30\u0026#34;, \u0026#34;TaxGroupId\u0026#34;: \u0026#34;\u0026#34; } --changesetresponse_541a7d21-af21-4d66-b410-fb4165599b54-- --batchresponse_45e87829-5a26-480e-8aaa-8a08c7a82c60-- Check the data in Dynamics 365 for finance and operations\n2019-10-15-Insert-multiple-records-in-single-request-using-Odata-from-Postman_5.png Note: refer this article for an C# example: https://learn.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/data-entities/odata#run-multiple-requests-in-a-single-transaction\nThank you for reading.\n","date":"15 October 2019","externalUrl":null,"permalink":"/posts/insert-multiple-records-in-single-request-using-odata-from-postman/","section":"Posts","summary":"Learn how to insert multiple records in a single OData batch request using Postman for Dynamics 365 Finance and Operations integration.","title":"Insert multiple records in a single transaction using Odata from Postman","type":"posts"},{"content":"","date":"15 October 2019","externalUrl":null,"permalink":"/tags/multiple-records/","section":"Tags","summary":"","title":"Multiple-Records","type":"tags"},{"content":"","date":"10 October 2019","externalUrl":null,"permalink":"/tags/coc/","section":"Tags","summary":"","title":"Coc","type":"tags"},{"content":"","date":"10 October 2019","externalUrl":null,"permalink":"/tags/cust-account-statement/","section":"Tags","summary":"","title":"Cust-Account-Statement","type":"tags"},{"content":"","date":"10 October 2019","externalUrl":null,"permalink":"/tags/customer-statement/","section":"Tags","summary":"","title":"Customer Statement","type":"tags"},{"content":"","date":"10 October 2019","externalUrl":null,"permalink":"/tags/customization/","section":"Tags","summary":"","title":"Customization","type":"tags"},{"content":" 1. Adding a new field 2. Duplicate the report 3. Modify the report design, right click on report dataset and choose restore to refresh the new field 4. Create a new Extension class that extends the standard report controller class. 5. Create new report handler class 6. Add a delegate handler method to start to use your custom report. 7. Create extension for the existing menu items 8. Update the Print management settings to use the custom business document 9. Run report and test the result In this article, I will show the procedure for the SSRS Reports development and customization in Dynamics 365 finance and operations (Version 8.1 and above).\nThe scenario is you would like to extend the customer account statement report with 2 main tasks\nCreate custom design for the report Expand the standard report data sets Same with AX 2012 version, there is no change on how you developer a new SSRS report with query based and report data provider. But if you want to extend or modify the standard one you need to understand how to use extensions in general, Event handlers and Chain of Command.\nThe steps\n1. Adding a new field # The main temp table is CustAccountStatementExtTmp, right click and create an extension; I\u0026rsquo;m going to add a new string field MaxTxT\n2019-10-10-Extend-the-standard-reports-in-Dynamics-365-finance-and-operations_1.png 2. Duplicate the report # Duplicate the CustAccountStatementExt report in the Application explorer \u0026gt; AOT \u0026gt; Reports \u0026gt; CustAccountStatementExt as shown in below screen shot:\n2019-10-10-Extend-the-standard-reports-in-Dynamics-365-finance-and-operations_2.png Rename the report and provide any appropriate name: MaxCustAccountStatementExt\n3. Modify the report design, right click on report dataset and choose restore to refresh the new field # 2019-10-10-Extend-the-standard-reports-in-Dynamics-365-finance-and-operations_3.png Open report designer and add that field into a table\n2019-10-10-Extend-the-standard-reports-in-Dynamics-365-finance-and-operations_4.png 4. Create a new Extension class that extends the standard report controller class. # class MaxCustAccountStatementExtController_Ext extends CustAccountStatementExtController{}\n//Add construct public static MaxCustAccountStatementExtController_Ext construct() { return new MaxCustAccountStatementExtController_Ext(); } Copy the main method from the standard controller class and add references to the new Controller class\npublic static void main(Args _args) { SrsPrintMgmtFormLetterController controller = new MaxCustAccountStatementExtController_Ext(); controller.parmReportName(PrintMgmtDocType::construct(PrintMgmtDocumentType::CustAccountStatement).getDefaultReportFormat()); controller.parmArgs(_args); MaxCustAccountStatementExtController_Ext::startControllerOperation(controller, _args); } protected static void startControllerOperation(SrsPrintMgmtFormLetterController _controller, Args _args) { _controller.startOperation(); } Optional method, determine which default design for report, some reports don\u0026rsquo;t use SrsPrintMgmtFormLetterController, so you can implement this method by your own.\nprotected void outputReport() { SRSCatalogItemName reportDesign; reportDesign = ssrsReportStr(MaxCustAccountStatementExt,Report); this.parmReportName(reportDesign); this.parmReportContract().parmReportName(reportDesign); formletterReport.parmReportRun().settingDetail().parmReportFormatName(reportDesign); super(); } 5. Create new report handler class # class MaxCustAccountStatementHandler{}\nWe have two different ways to Populate the data in the Report handler class:\nAdd a temp table Inserting event, row-by-row calculations. Go to CustAccountStatementExtTmp in AOT, expand Events node, and Copy event handler method. class MaxCustAccountStatementExtHandler { [DataEventHandlerAttribute(tableStr(CustAccountStatementExtTmp), DataEventType::Inserting)] public static void CustAccountStatementExtTmpInsertEvent(Common c, DataEventArgs e) { CustAccountStatementExtTmp tempTable = c; CustGroup custGroup; select * from tempTable where tempTable.CustGroup == custGroup.CustGroup; tempTable.MaxTxT = custGroup.Description; } } Add a data processing post-handler, inserting operations that use a single pass over the result set of the standard solution. class MaxCustAccountStatementExtHandler { [PostHandlerFor(classStr(CustAccountStatementExtDP), methodstr(CustAccountStatementExtDP, processReport))] public static void TmpTablePostHandler(XppPrePostArgs arguments) { CustAccountStatementExtDP dpInstance = arguments.getThis() as CustAccountStatementExtDP; CustAccountStatementExtTmp tmpTable = dpInstance.getCustAccountStatementExtTmp(); CustGroup custGroup; ttsbegin; while select forUpdate tmpTable { select * from tempTable where tempTable.CustGroup == custGroup.CustGroup; tempTable.MaxTxT = custGroup.Description; tmpTable.update(); } ttscommit; } } 6. Add a delegate handler method to start to use your custom report. # In this example, extend the getDefaultReportFormatDelegate method in the PrintMgtDocTypeHandlerExt class by using the following code.\nclass MaxPrintMgtDocTypeHandlersExt { [SubscribesTo(classstr(PrintMgmtDocType), delegatestr(PrintMgmtDocType, getDefaultReportFormatDelegate))] public static void getDefaultReportFormatDelegate(PrintMgmtDocumentType _docType, EventHandlerResult _result) { switch (_docType) { case PrintMgmtDocumentType::CustAccountStatement: _result.result(ssrsReportStr(MaxCustAccountStatementExt, Report)); break; } } } 7. Create extension for the existing menu items # Navigating to the CustAccountStatementExt output menu item and create extension.\n2019-10-10-Extend-the-standard-reports-in-Dynamics-365-finance-and-operations_5.png Also make sure to set the value of the Object property to MaxCustAccountStatementExtController_Ext to redirect user navigation to the extended solution.\nThat\u0026rsquo;s all, this is what you should have\n2019-10-10-Extend-the-standard-reports-in-Dynamics-365-finance-and-operations_9.png 8. Update the Print management settings to use the custom business document # Go to Account payable \u0026gt; Inquiries and reports \u0026gt; Setup \u0026gt; Forms \u0026gt; Form setup Click Print Management, find the document configuration settings, and then select the custom design\n2019-10-10-Extend-the-standard-reports-in-Dynamics-365-finance-and-operations_6.png 2019-10-10-Extend-the-standard-reports-in-Dynamics-365-finance-and-operations_7.png 9. Run report and test the result # 2019-10-10-Extend-the-standard-reports-in-Dynamics-365-finance-and-operations_8.png ","date":"10 October 2019","externalUrl":null,"permalink":"/posts/extend-the-standard-reports-in-dynamics-365-finance-and-operations/","section":"Posts","summary":"Complete tutorial for extending standard Customer Account Statement reports in D365 Finance Operations using SSRS, COC extensions, and customization techniques.","title":"Extend the standard reports in Dynamics 365 finance and operations (CustAccountStatementExt)","type":"posts"},{"content":"","date":"28 September 2019","externalUrl":null,"permalink":"/tags/dynamics-365/","section":"Tags","summary":"","title":"Dynamics 365","type":"tags"},{"content":"","date":"28 September 2019","externalUrl":null,"permalink":"/tags/finops/","section":"Tags","summary":"","title":"FinOps","type":"tags"},{"content":"","date":"28 September 2019","externalUrl":null,"permalink":"/tags/reference-documentation/","section":"Tags","summary":"","title":"Reference Documentation","type":"tags"},{"content":"","date":"28 September 2019","externalUrl":null,"permalink":"/tags/technical-reference/","section":"Tags","summary":"","title":"Technical Reference","type":"tags"},{"content":"The following reports provide details about technical objects available in Dynamics 365 for Finance Operations version 10.0. This version was released in May 2019 and has a build number of 10.0.2.\n","date":"28 September 2019","externalUrl":null,"permalink":"/posts/technical-referece-report-data-entites-d365/","section":"Posts","summary":"Comprehensive technical reference documentation for data entities in Dynamics 365 Finance and Operations version 10.0 with detailed technical object specifications.","title":"Technical reference - Data entity - Dynamics 365 finance and operations","type":"posts"},{"content":"","date":"5 August 2019","externalUrl":null,"permalink":"/tags/database-synchronization/","section":"Tags","summary":"","title":"Database Synchronization","type":"tags"},{"content":"You can either execute the script for cloud-hosted, onebox VHD, or UAT environment. This is not applied with one-box Microsoft hosted environment.\nOpen PowerShell, run following script\nK:\\AOSService\\webroot\\bin\\Microsoft.Dynamics.AX.Deployment.Setup.exe -bindir \u0026#34;K:\\AosService\\PackagesLocalDirectory\u0026#34; metadatadir \u0026#34;K:\\AosService\\PackagesLocalDirectory\u0026#34; -sqluser \u0026#34;axdbadmin\u0026#34; -sqlserver \u0026#34;.\u0026#34; -sqldatabase \u0026#34;AxDB\u0026#34; -setupmode \u0026#34;sync\u0026#34; -syncmode \u0026#34;fullall\u0026#34; -isazuresql \u0026#34;false\u0026#34; -sqlpwd \u0026#34;************\u0026#34; -logfilename \u0026#34;C:\\Temp\\dbsync.log\u0026#34; For example\nK:\\AOSService\\webroot\\bin\\Microsoft.Dynamics.AX.Deployment.Setup.exe -bindir \u0026#34;K:\\AosService\\PackagesLocalDirectory\u0026#34; metadatadir \u0026#34;K:\\AosService\\PackagesLocalDirectory\u0026#34; -sqluser \u0026#34;axdbadmin\u0026#34; -sqlserver \u0026#34;.\u0026#34; -sqldatabase \u0026#34;AxDB\u0026#34; -setupmode \u0026#34;sync\u0026#34; -syncmode \u0026#34;fullall\u0026#34; -isazuresql \u0026#34;false\u0026#34; -sqlpwd \u0026#34;AOSWebSite@123\u0026#34; -logfilename \u0026#34;C:\\Temp\\dbsync.log\u0026#34; AX DB user you can get from LCS, if you want to sync Azure DB please change -isazuresql to True\nYou can also use d365fo.tools to trigger the DB sync.\nTier 1\nInvoke-D365DBSync -Verbose Tier 2\nInvoke-D365DbSync -DatabaseServer .database.windows.net -DatabaseName db_d365opsprod -SqlUser JIT-6h8cg -SqlPwd NjT -LogPath \u0026#34;C:\\Temp\\d365fo.tools\\dbsync.log\u0026#34; ","date":"5 August 2019","externalUrl":null,"permalink":"/posts/database-sync-d365fo/","section":"Posts","summary":"Learn how to perform database synchronization in Dynamics 365 Finance \u0026amp; Operations using command line tools and d365fo.tools. Includes examples for both cloud-hosted and on-premises environments.","title":"Dynamics 365 for finance and operations database synchronization using command line","type":"posts"},{"content":"","date":"7 August 2017","externalUrl":null,"permalink":"/tags/error-handling/","section":"Tags","summary":"","title":"Error Handling","type":"tags"},{"content":"","date":"7 August 2017","externalUrl":null,"permalink":"/tags/exception-handling/","section":"Tags","summary":"","title":"Exception Handling","type":"tags"},{"content":"When we write a code, or make a customization to Dynamics 365 For Operation which is using X++ should make use of Exception Handling to provide some context for the message or a different more useful message. In this article, I will be exploring how I can come up with a uniform way to catch multiple types of exception that can be raised in X++.\n1. Exception type # There are many several types of exception and the type differs depending on what caused the error. Much of exception types are determined by the kernel and are not normally thrown by application code. All exception types, however, can be caught, and it is the developers’ responsibility to decide which exceptions need to be handled.\nThe exception type is identified using the system-based enumeration called an exception. Because it is a system Enum, it cannot be modified, so users cannot add new exception types.\nThe following table shows the exception literals that are the values of the Exception enumeration.\nException_Handling 2. Key commands # The Try command signifies the start of a block of code that you want to control with the X++ exception handling system. Any exceptions that are thrown in that block of code can be caught and handled accordingly. The block of code inside the Try statement must be contained between brackets ( { } ).\nCatch statements come after the block of code and define what code is executed when each exception is thrown.\nYou do not have to define a catch statement for every possible exception; however, each try statement must have at least one catch statement.\nA Retry command tells the system to go back to the Try statement and attempt to execute the code again. Any data that was loaded before the Try command will remain as it was, but any data retrieved or modified after the Try statement will be refreshed.\nWhen a deadlock exception is thrown, all locks on tables that this process holds are released, which may allow the other process or processes that are also deadlocked to continue.\nBy calling a retry, the process can attempt to update the record again and may now be able to complete. It is a best practice that a retry uses a counter so that the number of retries can be controlled, and a user does not become stuck in a loop.\nThe final keyword is now available to follow the try and catch keywords. The semantics are identical to the semantics in C#. The statements provided in the final clause is executed irrespective of whether the try block threw any exceptions.\n3. Code Statement # We will use these lines of code example here for testing Exception handling\nclass CustCreateCustomer { public static void main(Args _args) { CustCreateCustomer custCreateCustomer = new CustCreateCustomer(); custCreateCustomer.run(); } public void run() { Dialog dlg = new Dialog(\u0026#34;Create new customer\u0026#34;); DialogField dlgCust; DialogField dlgGrp; CustTable custTable; dlgCust = dlg.addField(extendedTypeStr(CustVendAc), \u0026#34;Customer account\u0026#34;); dlgGrp = dlg.addField(extendedTypeStr(CustGroupId)); if (dlg.run()) { try { custTable.AccountNum = dlgCust.value(); custTable.CustGroup = dlgGrp.value(); if (!custTable.validateWrite()) { throw error(\u0026#34;Please enter all required fields.\u0026#34;); } else { custTable.insert(); } } catch (Exception::Error) { error(\u0026#34;An error occurred. Please try again\u0026#34;); } } } } This code will try to create a customer after revived inputted value from users, this code also handling errors when user do not input enough information. A Throw statement is used to throw an error that can be caught by a Catch statement. When the system throws an exception ttsabort is called automatically, and so does not have to be called in a Catch statement.\n4. Optimistic Concurrency Exceptions # The optimistic concurrency check (OCC) is a performance enhancing function within Microsoft Dynamics 365 For Operation. It presumes that any record retrieved from the database is not updated until it is proven to be updated by the database. This means that fewer locks must be placed on records in the database. This allows for faster access for other users.\nThis also means that one user can update a record after another user has retrieved it from the database. This can cause data inconsistency. If the second user then also tries to update the record, an UpdateConflict exception is thrown. The system does this by comparing the recVersion field on the record buffer at runtime and the actual record in the database. The recVersion field value is changed every time that an update is successfully made to a record.\nThere are two main table update exceptions, UpdateConflict and DeadLock. An update conﬂict occurs due to the optimistic concurrency failing, whereas a deadlock is the classic database scenario where both transactions have each locked a table that the other needs.\nUpdate conﬂicts are normally handled within the insert, delete, and update methods of a table. The BOM table is a good example of this. You may also hard to find many examples where this has been used. We use this pattern only if we deem it to be required. The code within the table\u0026rsquo;s update method also updates other records, so it has been written to handle update conﬂicts.\nThe following code is an example of how to handle the UpdateConflict exception that might be thrown.\npublic void update() { #OCCRetryCount try { ttsbegin; // code that updates records in other tables super(); // do the update // other code that updates records in other tables ttscommit; } //Deadlock catch (Exception::Deadlock) { retry; } //UpdateConflict catch (Exception::UpdateConflict) { if (appl.ttsLevel() == 0) { if (xSession::currentRetryCount() \u0026gt;= #RetryNum) { throw Exception::UpdateConflictNotRecovered; } else { retry; } } else { throw Exception::UpdateConflict; } } } If a conflict due to OCC occurs, the system throws the UpdateConflict exception and it is caught by the catch statement.\nThe other new element here is ttsLevel. Since transactions can be nested, we do want the exception to falling through to the parent transaction if one exists. If ttsabort is issued (directly or due to a throwing error) at any level, the whole transaction will be rolled back; we can\u0026rsquo;t roll back just the level where the error is thrown.\nThe code checks the current TTS level. If it is not Zero, in other words, it is still in a TTS transaction, it throws another UpdateConflict exception to the next Catch list of the next outer Try statement in scope. This continues until it is no longer inside a TTS transaction. We must make sure that when the code is retired, all data is refreshed.\nIt is important that we don\u0026rsquo;t retry indefinitely, as this may cause the client to hang. To control this, we use xSession::currentRetryCount() to get the number of retries and check this against the #RetryNum macro. The macro defines the standard number of retries deemed appropriate by Microsoft, which is five. then the UpdateConflictNotRecovered exception is thrown. This means the whole transaction is aborted and stops retrying.\n5. Conclusion # We do not, in any case, want an error to be thrown that stops the form from opening. Also, if there is an error, we need to decide whether the user actually needs to know that an error occurred. It may be enough for our purposes that the fields don\u0026rsquo;t appear, and we can use the debugger to trace through the code to determine why.\nThank you for reading!\n","date":"7 August 2017","externalUrl":null,"permalink":"/posts/exception-handling-in-dynamics-365-for-finance-and-operation/","section":"Posts","summary":"Comprehensive guide to exception handling in Dynamics 365 Finance \u0026amp; Operations using X++ including try-catch blocks, optimistic concurrency exceptions, UpdateConflict, deadlock handling, and best practices.","title":"Exception Handling in Dynamics 365 For Finance and Operation","type":"posts"},{"content":"","date":"24 July 2017","externalUrl":null,"permalink":"/tags/balance-sheet/","section":"Tags","summary":"","title":"Balance Sheet","type":"tags"},{"content":"","date":"24 July 2017","externalUrl":null,"permalink":"/tags/dynamics-365-for-finance-and-operations/","section":"Tags","summary":"","title":"Dynamics 365 for Finance and Operations","type":"tags"},{"content":"","date":"24 July 2017","externalUrl":null,"permalink":"/categories/financial-report/","section":"Categories","summary":"","title":"Financial Report","type":"categories"},{"content":"","date":"24 July 2017","externalUrl":null,"permalink":"/tags/financial-statements/","section":"Tags","summary":"","title":"Financial Statements","type":"tags"},{"content":"","date":"24 July 2017","externalUrl":null,"permalink":"/tags/income-statement/","section":"Tags","summary":"","title":"Income Statement","type":"tags"},{"content":"","date":"24 July 2017","externalUrl":null,"permalink":"/tags/management-reporter/","section":"Tags","summary":"","title":"Management Reporter","type":"tags"},{"content":" 1. Overview Management Reporter in New AX # Management Reporter is now Financial reports.\nAs you know Management Reporter is a real-time financial reporting application that is designed to empower information workers to quickly and easily create, generate, secure, and publish financial statements, such as Profit and Loss statements, balance sheets, and cash flow reports.\nIn Dynamics 365 For Operation, I can access these reports within AX means directly from the web client in the browser. This feature allows me to run financial statements, such as a balance sheet and income statements.\nThe 22 default reports that are included, default financial reports including income statements, balance sheet reports, cash flow statements, and general ledger reports, which can be modified depending on your company’s requirements.\nHere is the list\nFinancial_reports 2. Access # You can find the financial reporting menu in Dynamics 365 For Operation by visiting General Ledger \u0026gt; Inquiries and reports \u0026gt; Financial reporting\nAlthough, there are some privileges and duties relating to this. These report functions are available to users that have their appropriate privileges and duties assigned to them already.\nIn order to view, edit, and manage reports in Management Reporter you need to add security administrator role to business Users. Besides, if you only need users can run the financial reports then you have to add the appropriate privileges and duties assigned to them.\nBefore creating and generating financial reports for a legal entity, you must be done set up for that legal entity:\nFiscal calendar Ledger Chart of Accounts Currency 3. Management Reporter Benefits # With Management Reporter, business users can:\nCreate their own boardroom-quality reports without IT assistance. Take advantage of secure report distribution through the centralized Report Library. Gain strong support for regulatory compliance (Change the report date, currency, view in Summary view or a detailed view, Add either dimension filters or attribute filters). Report design flexibility likes Save dimension combinations, and reuse the dimensions for multiple reports. Management Report Components. Financial report collaboration: Schedule reports so that they are automatically generated on a daily, weekly, monthly, or annual basis. Export to the read-only XPS format, which provides better document security through digital signatures. Export to a Microsoft Excel worksheet. To share reports, you can create email messages that contain links to the reports. 4. Management Report Components # Some important components I want to mention here:\nReport Designer Create report building blocks that can be combined to define and generate a report. The report wizard guides less experienced users through the design process. Advanced users can create new report building blocks or modify existing building blocks to meet their requirements. Desktop Viewer Used to organize and view reports and supporting files. It also stores the report library. Web Viewer Displays Management Reporter reports in a web browser. The Web Viewer does not require an installation of Management Reporter server components. Report schedules A user can schedule a single report or a group of reports to generate regularly. Management Reporter database This SQL database stores the components, known as building blocks, which are used to generate reports. It also stores report definitions and previously generated reports. Application service Controls access to the data provider and provides connectivity to clients. Process service Generates the reports that are created and queued by the Management Reporter client. 5. Generate financial reports # We are currently at Financial reports screen as picture below\nFinancial_reports As you can see there\u0026rsquo;s nowhere on the screen or anything that indicates that there\u0026rsquo;s the Management Reporter available, but if we click this edit button and entering your email account and password. After you log in, it will open the Report Definitions Management Reporter window for us.\nFinancial_reports On the left, here we have a list of all the same reports that we were looking at in AX. Let\u0026rsquo;s look at the income statement - default report, So I have a couple parameter fields we need to change before we can generate our report. Please prefer below picture\nFinancial_reports After we click generate button, Financial will be generated on current web browser\nFinancial_reports we can see here by the report date. So, on our income statement, we have all the usual fields here. We have total revenues, gross profit, total operating experiences, net operating income and net income. That all is pretty standard and it all looks good.\n6. Conclusion # Row, Column, Tree, Report definitions work essentially the same as they did in Dynamics AX 2012. I can still use row, column, and tree definitions with multiple reports, and options for the Report definition tabs.\nFinancial_reports Here are some of the functions that are not available in Financial Reporting for Dynamics 365 for Operations:\nPublishing/distributing reports to SharePoint and/or SharePoint Online locations is not available. Report Viewer/Library has been removed. Import data from an Excel file is not available. XBRL (extensible Business Reporting Language) is no longer available. Comments are not currently available in the web client. Running a consolidation between companies in different instances of AX is not available. The Wizard has been removed. Management Reporter includes direct integration with the Microsoft Dynamics AX general ledger so that there is no need to create a custom connection to the data source. Nevertheless, with custom reporting structures, ledger accounts, and dimensions mapping, creation and the capabilities to publish reports to multiple channels and formats from the desktop, and embedding transactional and analytical reports into a customizable dashboard, Financial Reporting in Dynamics 365 For Operation is all set to simplify the financial reporting process, providing instant insight into your financials.\nThank you for reading!\n","date":"24 July 2017","externalUrl":null,"permalink":"/posts/management-reporter-in-dynamics-365-for-operation/","section":"Posts","summary":"Complete guide to Management Reporter (Financial reports) in Dynamics 365 Finance and Operations including balance sheet and income statement creation.","title":"Management reporter in new AX, Dynamics 365 For Operation","type":"posts"},{"content":" There are many explanations that we can find in internet about C# OOP, but here in my article I will give a very simple example. In this article, I will use a “House (like the houses we live in) “as a real-time example for easy understanding of OOP Concept in C#.\n1. Class # Class is a like a Blueprint.\nBlueprint is outline drawing of our actual plan. For example if we plan to build our new house, the Engineer will explain our new house plan with a blue print as shown in the image below. Once we finalized the plan the engineer will start building the house with same plan.\nSame like blueprint class is an outline of program. Using the class we can write our own method and declare the variables and using the objects we can access the class Method and Variables. The class will be complete with Variables, Methods and Objects.\nBlueprint For more easy understanding of OOP with real world example here I have explained a class with House.\nWe can imagine a House as an example for a Class. In a house, we will have rooms like living room, bedroom, kitchen and items like TV, fridge etc. House owner can access and use all the rooms and rooms\u0026rsquo; items. Same like this in a Class will have a group of Methods and Variables.\nRooms and Rooms\u0026rsquo;items are example for Methods and Variables. So now, we have a complete house with all rooms and rooms\u0026rsquo;items. House owner can access and use all the rooms and Rooms\u0026rsquo; Items. To access and use a Class, methods and variables here we use Objects. Objects are instance of a class. We will see details about objects in the next section.\nWhat will happen if there are no rooms and items in a House? It will be empty and no one can use the house until it has all the rooms and Items. See the below image as an example for the empty house.\nEmptyHouse Now this empty house is a Class. So what is the use of a Class without Methods and variable. Now let’s see an example for a Complete House with Rooms and items.\nCompleteHouse So here, we have a complete house. Similarly, the Class will be complete with group of Variables, Methods and Objects. We can see details of all this in next sections of this article.\nClass and objects are the base concept of OOP – Object Oriented Programming.\nClass should be started with the Keyword class and next we give the name for our class we can give any meaning full name as Class Name, next we will have the Open and close brackets.\nusing System; public class ClassA { } 2. Object # As we have already seen that, House Owner will access and use all the Rooms of the House and its Items. Similarly, to access all Class Method and Variable we use Objects. We can create one or many object for a same Class. Example we can say for a house there might be one or many owners.\nobjHouseOwner is the Object for a class which will be used to access all variable and Method of a class.\nnamespace ConsoleApplication1 { class Program { static void Main(string[] args) { Program pro = new Program(); } } } 3. Variable # Variables are used to store our value. Our value can be numeric or characters for example to store a Phone no we can use int type variable and to store our name we can use string type variable with name for each variable.\nVariables can be local or Global. For Example, we can say if we buy a new TV , TV Service man will come and setup the TV in our home. He will give his contact number for future contacts. Usually what we do is take a memo paper and write his contact number and keep it in a common place or in a wallet of ours.\nIf we keep the memo in a Common place everyone who is visiting our house can see that contact number. Global or public variables are similar to this. If we declared the variable as Global, All the Methods inside the class can access the variable. If we store the memo Only in our wallet, we can see the contact number. Local or private variables are similar to this.\nSyntax for variable:\nAccess-Modifiers Data-Type Variable-Name\nBy default the Access-Modifiers are by private, we can also use public to variable.\nExample of Variable:\nnamespace ConsoleApplication1 { // Example Program class ShanuHouseClass { public int noOfTV = 0; private Boolean doYouHaveTV = true; protected String yourTVName = \u0026#34;SAMSUNG\u0026#34;; static void Main(string[] args) { ShanuHouseClass objHouseOwner = new ShanuHouseClass(); Console.WriteLine(\u0026#34;You Have total \u0026#34; + objHouseOwner.noOfTV + \u0026#34; no of TV :\u0026#34;); Console.WriteLine(\u0026#34;Your TV Name is :\u0026#34; + objHouseOwner.yourTVName); Console.ReadLine(); } } } basic-c-oop-concept_1.png In Above example program I have declared two variables inside a class. In main method I have created object for class. Here we can see using the object we can access the variable of a class and display the output.\nMain Method is the default Method of C#, where every console and windows application will start the program execution, In the Main Method, we can declare the Object for the class and use the object, and we can access all variables and Methods of a Class. For example, we can say there will be entrance gate for every house. Using the entrance gate we can enter inside our house. Similarly, to run our program there should be some default program execution starting Method. Main method will be useful in this program execution starting point. Whenever we run our C# Console or windows application, first the Main method will be executed .From the main method we can create an object for our other classes and call their Methods.\n4. Method or Functions # Method is a group of code statement .Now here we can see the above example program with method.\nclass ShanuHouseClass { public int noOfTV = 2; private Boolean doYouHaveTV = true; protected String yourTVName = \u0026#34;SAMSUNG\u0026#34;; public void myFirstMethod() { Console.WriteLine(\u0026#34;You Have total \u0026#34; + noOfTV + \u0026#34;no of TV :\u0026#34;); Console.WriteLine(\u0026#34;Your TV Name is :\u0026#34; + yourTVName); Console.ReadLine(); } } class a { static void Main(string[] args) { ShanuHouseClass a = new ShanuHouseClass(); a.myFirstMethod(); } } basic-c-oop-concept_2.png Most of developers were wondering about what is the difference between the Method and Function, both Methods and Functions are the same. Here in my article, I will use Method instead of functions. However, there is one difference in Methods and Functions, In OOP Languages like C#, Java etc. We use the term Method while the non-OOP programming like C etc. we use the term Function.\nWhat is the use of Methods? Another real-time example let’s take our mobile phone, we can say as we have Mobile phone and store many Songs in it. However, we always like to listen to the selected songs. It will be boring and hard for us to select our favorite song every time and play it.\nInstead of doing the same work repeatedly, we use the playlist. In playlist, we can add all-favorite songs of ours. Just click on the playlist of our collections and listen to the music. This will make our work easier and we don’t need to do the same thing again and again. Methods are used like a playlist where we can write all our repeated code in one Method and just call the method wherever we needed.\nIn a house, there might be one big room or multiple rooms but each room will have different facilities, similarly in a class we can write one or multiple Methods. In a house, there might be two or three Bedrooms. Here the room name is Bedroom, but each bedroom can be different by size, color etc. This means same Rooms with different type. Similarly, in a class we can create more than one method with the same name but different parameter. In OOP it’s called as Polymorphism we can see details about Polymorphism later on in this article.\nSyntax for the Functions Access-Modifiers Return-Type Method-Name (Parameter-List)\nAccess-Modifiers: We will see more details about this Topic later on. Return-Type: If our Method returns any value then we use the return Type with any Data Type as String, int etc., if our Method does not return any value then we use the type “Void”. Method-Name: Here we give our Name for every Method, which we create Parameter-List: Parameter-List or Arguments, which we pass to the function. Here is an example of Method:\nMethod with Void Type: Void is a keyword which will not return any data from the Method, for example we can see the below Method with void Type, here in this method we display all our output using the Console.WriteLine and have used the Console.ReadLine()); to get the Input. This Method has all Input and Output Operation but this method don’t return any value. // Function with void and no parameter -- here void means no return type public void veranda() { Console.WriteLine(\u0026#34;Welcome to Veranda\u0026#34;); Console.WriteLine(\u0026#34;How Many Chairs Do you have in your Veranda\u0026#34;); NoofChair = Convert.ToInt32(Console.ReadLine()); Console.WriteLine(\u0026#34;I have total \u0026#34; + NoofChair + \u0026#34; Chairs in my Veranda\u0026#34;); } Method with Return Type: Method with return type will return some result, which can be used in our program, for example, here we have Method TVNAME with return Type as String. We can say in our home we might have a TV in our LivingROOM and in the parent’s bedroom and also in kids bedroom .We might have different TV brand in each room, suppose if we want to know each room TV Brand Name then we need to enter the same code 3 times. Instead of writing the same code again, we can use a method with Return Type. // Function with Return type as String public string TVNAME() { String YOURTVName; Console.WriteLine(\u0026#34;Enter Your TV Brand NAME\u0026#34;); YOURTVName = Console.ReadLine(); return YOURTVName; } Method with Parameter-List: So far, we have seen methods without arguments. Arguments are used to pass some data to the Method to do our process in a better way. For example, we can say we want to do a painting, to our bedrooms. We need to get the opinions of all the member of the house in order to know there choices of color for each bedroom, we can pass the member Name and their favorite color as parameter to a Method. //Function with parameter public void BedRoom(String nameandColor) { Console.WriteLine(nameandColor); } Same Method name with different arguments are called as Method over loading, here we can see below .Both Method has the same name but it has different arguments.\n// Same Function Name with Different Paramenter public void BedRoom(String MemberName, String Color) { Console.WriteLine(MemberName + \u0026#34; Like \u0026#34; + Color + \u0026#34;Color\u0026#34;); } The Complete Class with Main Method Example:\nusing System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; // Example Program class ShanuHouseClass { public int noOfTV = 2; private Boolean doYouHaveTV = true; protected String yourTVName = \u0026#34;SAMSUNG\u0026#34;; public int NoofChair; public void myFirstMethod() { Console.WriteLine(\u0026#34;You Have total \u0026#34; + noOfTV + \u0026#34;no of TV :\u0026#34;); Console.WriteLine(\u0026#34;Your TV Name is :\u0026#34; + yourTVName); Console.ReadLine(); } // Function with void and no parameter -- here void means no return type public void veranda() { Console.WriteLine(\u0026#34;Welcome to Veranda\u0026#34;); Console.WriteLine(\u0026#34;How Many Chairs Do you have in your Veranda\u0026#34;); NoofChair = Convert.ToInt32(Console.ReadLine()); Console.WriteLine(\u0026#34;I have total \u0026#34; + NoofChair + \u0026#34; Chairs in my Veranda\u0026#34;); } // Function with Return type as String public string TVNAME() { String YOURTVName; Console.WriteLine(\u0026#34;Enter Your TV Brand NAME\u0026#34;); YOURTVName = Console.ReadLine(); return YOURTVName; } //Function with parameter public void BedRoom(String nameandColor) { Console.WriteLine(nameandColor); } // Same Function Name with Different Paramenter public void BedRoom(String MemberName, String Color) { Console.WriteLine(MemberName + \u0026#34; Like \u0026#34; + Color + \u0026#34;Color\u0026#34;); } static void Main(string[] args) { ShanuHouseClass objHouseOwner = new ShanuHouseClass(); objHouseOwner.veranda(); String returnvalue = objHouseOwner.TVNAME(); Console.WriteLine(\u0026#34;Your TV BRAND NAME IS: \u0026#34; + returnvalue); objHouseOwner.BedRoom(\u0026#34;My Name is Shanu I like Lavender color\u0026#34;); objHouseOwner.BedRoom(\u0026#34;My Name is Afraz I like Light Blue color\u0026#34;); objHouseOwner.BedRoom(\u0026#34;SHANU\u0026#34;, \u0026#34;Lavender\u0026#34;); Console.ReadLine(); } } The Output of above class is here:\nbasic-c-oop-concept_3.png 5. Access Modifiers # Access Modifiers are nothing but the Usage and Limitation of our type like variable, Methods and Class. For Example we can say it as a security limit. This six are the basic Access modifiers which we used in our C# Class/method and in Variables.\nPrivate Let’s take our House Example .We will have a Security Guard in House, His duty is till the Entrance of the house. He cannot go inside the house and access all the things. In this case we can create a SecurityGuardClass and declare the variable and method for Security as private .\nPublic House Owners are public to the class where they can access all classes related to the House. They have no restrictions to access their house.\nInternal Access limit of variable or method is within a project. For example let’s consider in our project we have more than one class and we have declared a variable as internal in one class. Let’s see an example program for internal variable.\nclass Modifiers { public class sampleInternalClass { internal String myInternal = \u0026#34;Iam Internal Variable\u0026#34;; } class ShanuHouseClass { int noOfTV = 2; public String yourTVName = \u0026#34;SAMSUNG\u0026#34;; public void myFirstMethod() { Console.WriteLine(\u0026#34;You Have total \u0026#34; + noOfTV + \u0026#34;no of TV :\u0026#34;); Console.WriteLine(\u0026#34;Your TV Name is :\u0026#34; + yourTVName); } static void Main(string[] args) { ShanuHouseClass objHouseOwner = new ShanuHouseClass(); objHouseOwner.myFirstMethod(); sampleInternalClass intObj = new sampleInternalClass(); Console.WriteLine(\u0026#34;Internal Variable Example :\u0026#34; + intObj.myInternal); Console.ReadLine(); } } } basic-c-oop-concept_4.png Protected Only the main class and derived class can have access of protected variable or method. For example servants and Guests are example for the Protected. For Example Servants can go to all room and do cleaning and other activates. However, they have limitations of access in the house, as they cannot take rest in a bed of house owner.\nProtected Internal Protected Internal variable or Method has limitation with in a project of class or Derived class. Here is a sample program for Protect Internal Variable .In this example I have used the Inheritance .we will see in detail about Inheritance more detail in this article.\npublic class sampleProtectedInternalClass { protected internal String myprotectedInternal = \u0026#34;Iam Protected Internal Variable\u0026#34;; public void protectedInternalMethod() { Console.WriteLine(\u0026#34;Protected Internal Variable Example :\u0026#34; + myprotectedInternal); } } public class derivedClass : sampleProtectedInternalClass { public void derivedprotectedInternal() { Console.WriteLine(\u0026#34;Derived Protected Internal Variable Example :\u0026#34; + myprotectedInternal); } } class ShanuHouseClass { int noOfTV = 2; public String yourTVName = \u0026#34;SAMSUNG\u0026#34;; public void myFirstMethod() { Console.WriteLine(\u0026#34;You Have total \u0026#34; + noOfTV + \u0026#34;no of TV :\u0026#34;); Console.WriteLine(\u0026#34;Your TV Name is :\u0026#34; + yourTVName); } static void Main(string[] args) { ShanuHouseClass objHouseOwner = new ShanuHouseClass(); objHouseOwner.myFirstMethod(); sampleProtectedInternalClass intObj = new sampleProtectedInternalClass(); intObj.protectedInternalMethod(); derivedClass proIntObj = new derivedClass(); proIntObj.derivedprotectedInternal(); Console.ReadLine(); } } basic-c-oop-concept_5.png The main and major things we need to know in OOP concept are Encapsulation, Abstraction,Polymorphism and Inheritance. We will discuss them in detail in this article.\n6. Encapsulation # Encapsulation is to hide the member or variable to outside class. In our house example, I have already told that House security guard limitation is till the entrance of the house. The security guard doesn’t need to know about what is happening inside the house. Therefore, the House Owner will hide all the happenings to Security guard for more safety. The hiding and limitation are called as Encapsulation.\nFor example, we have two Classes the first one is Houseclass and the other class as houseSecurityClass.\nHere we can see all the variables are wrap into a class where houseSecurityClass is set as public, so the Houseclass can access that, but houseClass has both Public and private variable where the private variable of a class cannot be accessed outside of the class.\n//Encapsulation in OOP public class houseSecurityClass { public int noofSecurity; public String SecurityName = String.Empty; } public class Houseclass { private int noofLockerinHosue = 2; public string OwnerName = String.Empty; } 7. Abstraction # Abstraction is to show and share some common information to the user. Let’s take our House example, in our house we will have servant, servants can go to all rooms and do cleaning and other works. The house owner can give full rights or some partial rights to the servant for accessing his house. Here we can see an example program as private declared variables and Methods are not shared with servant but the public variable and Methods are shared with servant.\npublic class HouseServerntClass { private int SaftyLoackerKeyNo = 10001; public String roomCleanInstructions = \u0026#34;Clean All rooms\u0026#34;; private void saftyNos() { Console.WriteLine(\u0026#34;My SaftyLoackerKeyNo is\u0026#34; + SaftyLoackerKeyNo); } public void roomCleanInstruction() { Console.WriteLine(roomCleanInstructions); } static void Main(string[] agrs) { HouseServerntClass a = new HouseServerntClass(); a.saftyNos(); a.roomCleanInstruction(); Console.ReadLine(); } } basic-c-oop-concept_6.png 8. Inheritance # Inheritance is used to reuse the code. In Protected Internal Access modifier section we have already seen an example program for Inheritance. Inheritance is nothing but accessing and using all base class variable and methods in the Derived Class. Inheritance can be\nSingle level Inheritance With one Base class and one derived Class for example.\npublic class baseClass { private void privateMethod() { Console.WriteLine(\u0026#34;private Method\u0026#34;); } public void publicMethod() { Console.WriteLine(\u0026#34;This Method Shared\u0026#34;); } } public class DerivedClass : baseClass { static void Main(string[] args) { DerivedClass obj = new DerivedClass(); obj.publicMethod(); //This will be error as private method can not be accessed in Derived Class obj.privateMethod(); } } The Error is:\nbasic-c-oop-concept_7.png Some time users might be not clear of what Base class is and what Derived class is. Base class is the super class and derived class is the classes which inherit the base class.\nHere we can see a simple Inheritance where the base class is the GuestVist and derived class is the HouseOwnerClass. Here HouseOwnerClass class inherits the base class of GuestVist\nbasic-c-oop-concept_8.png Multi level Inheritance With more than one Derived Class for example. Here we can see an example first base class is derived in DerivedClass1 and then the DerivedClass1 is derived in DerivedClass2 .Now from DerivedClass2 we can access both baseClass and DerivedClass1 variable and methods.\npublic class baseClass { private void privateMethod() { Console.WriteLine(\u0026#34;private Method\u0026#34;); } public void publicMethod() { Console.WriteLine(\u0026#34;This Method Shared\u0026#34;); } } public class DerivedClass1 : baseClass { public void DerivedClass1() { Console.WriteLine(\u0026#34;Derived Class 1\u0026#34;); } } public class DerivedClass2 : DerivedClass1 { static void Main(string[] args) { DerivedClass2 obj = new DerivedClass2(); obj.publicMethod(); obj.DerivedClass1(); //This will be error as private method can not be accessed in Derived Class //obj.privateMethod(); } } basic-c-oop-concept_9.png Multiple Inheritance\nWill the .Net Support Multiple Inheritance? The Answer to this Question is No. In C #, it’s not possible to write a Multiple Inheritance using Class. What is Multiple Inheritance? Multiple Inheritance is nothing but we can have more than one class and we can inherit both Classes in our derived class. What will happen if I write a Multiple Class Inheritance Using C#? Let’s take our example House .Here we have the derived Class as HouseOwnerClass and have Two More classes as GuestVist and FriendsandRelationsClass. Now suppose for our house both Guest and Friend have visited. For this, we write above three classes and inherit the two classes in our derived class. When I write the Multiple Inheritance in C #, it will display the warning message during our code and execute our program. See the below image which shows the Warning error message while I write Multiple Inheritance. basic-c-oop-concept_10.png * Then how can we use the Multiple Inheritance Interface will be used for Multiple Inheritance.\n9. Polymorphism # Ploy means more than one form. In the beginning of the Article at Method Section, we have already seen an example of Polymorphism. Same method name with different parameter is an example for the polymorphism. Method Overloading and Method Overriding will be used in polymorphism. Polymorphism have two types of execution one is Compile Time Polymorphism and the other one is called the Run time Polymorphism.\nMethod Overloading Method overloading are nothing but same Method name will be used for more than one method with different Argument. Here is an example program for the Method Overloading. As we can see here Method name BedRoom has been used for two Method but the parameter for both methods are different.\nclass HouseOwnerClass { //Function with parameter public void BedRoom(String nameandColor) { Console.WriteLine(nameandColor); } // Same Function Name with Different Paramenter public void BedRoom(String MemberName, String Color) { Console.WriteLine(MemberName + \u0026#34; Like \u0026#34; + Color + \u0026#34; Color\u0026#34;); } static void Main(string[] args) { HouseOwnerClass objHouseOwner = new HouseOwnerClass(); objHouseOwner.BedRoom(\u0026#34;My Name is Shanu I like Lavender color\u0026#34;); objHouseOwner.BedRoom(\u0026#34;My Name is Afraz I like Light Blue color\u0026#34;); objHouseOwner.BedRoom(\u0026#34;SHANU\u0026#34;, \u0026#34;Lavender\u0026#34;); Console.ReadLine(); } } basic-c-oop-concept_11.png Method Overriding The difference between the Method Overloading and Overriding are.In Method Overloading we will have same method name with different argument. In Method Overriding we will have same Method Name same Argument and same type but method overriding can only be used in the derived class, Method Overriding cannot be done in the same class. We will see how Method Overriding can be used in Abstract Method, Virtual Method and in Sealed Method kindly refer to that section in this article.\n10. Abstract Class/Method # Abstract Class: Abstract class will have a keyword abstract. The Abstract class will be as a super class for all our class. Abstract class cannot be accessed by an object, which means we cannot create an object for an abstract class.\nWhat will happen when we create an object for an Abstract Class? Here we can see an error warning message as “An instance of an abstract class cannot be created” when I try to create an object for my abstract class.\nbasic-c-oop-concept_12.png Abstract class can have both Abstract Method and normal Method. In Abstract Class at least one Abstract Method should be declared. In addition, derived class should override the abstract method. To access the abstract method we should use the “override” keyword in our derived class.\nWhat will happen if we create an abstract method but which is not override in derived class? Here we can see an abstract class has an abstract method, But the abstract method is not override in the derived class. See the below image for the warning message displaying as class must implement the abstract member.\nbasic-c-oop-concept_13.png Here we can see an example of Abstract Class and for Abstract Method in detail. In this example, we can see an abstract class, which has normal Method and Abstract Method. Abstract Methods; do not have body part in Abstract Class, which means we can only declare an Abstract Method at Abstract Class, There should be minimum one Abstract Method in an Abstract Class.\npublic abstract class GuestVist { public void Guestwelcomemessage() { Console.WriteLine(\u0026#34;Welcome to our AbstractHome\u0026#34;); } public void GuestName() { Console.WriteLine(\u0026#34;Guest name is: Abstract\u0026#34;); } public abstract void purposeofVisit(); } // derived class to inherit the abstract class public class A : GuestVist { public override void purposeofVisit() { Console.WriteLine(\u0026#34;Abstract just came for a Meetup and spend some time \u0026#34;); } static void Main(string[] args) { A objHouse = new A(); objHouse.purposeofVisit(); objHouse.Guestwelcomemessage(); objHouse.GuestName(); Console.ReadLine(); } } basic-c-oop-concept_14.png 11. Virtual Class/Method # Virtual method is very useful in our day-to-day programming.\nWhat is virtual Method and what is the use of Virtual Method? Take our House example one guest confirms, as today total five persons will visit your home. For this, we write a function as message display as five Guest visiting our home. Once Guest visits, we see their total 20 persons have visited. In Some cases it might be increase or decrease we will come to know when they reach us.\nIn that case, the guest will be as a Separate Class and House will be as separate class. Without changing the message in Guest class how can we change the data in our Derived class?\nWhat is the Difference between Abstract Method and Virtual Method? Both similarities use the override keyword. Abstract Method can only be declared in Abstract Class, which means no body part for abstract method in Abstract class. However, for virtual it can have body part.\nSee the example program below. Here we have both Abstract Method and Virtual Method.\nIn Abstract class, the virtual method says as total five guests but in the derived Class program, the message was override as 20 guests. See the final output in below. Guess what will be displayed for Virtual Method? Will the result be 5 Guests or 20 Guests check for the output below the program.\npublic abstract class GuestVist { public abstract void purposeofVisit(); // Abstract Method public virtual void NoofGuestwillvisit() // Virtual Method { Console.WriteLine(\u0026#34;Total 5 Guest will Visit your Home\u0026#34;); } } class AbstractHouseClass : GuestVist { public override void purposeofVisit() // Abstract method Override { Console.WriteLine(\u0026#34;Abstract just for a Meetup and spend some time \u0026#34;); } public override void NoofGuestwillvisit() // Virtual method override { Console.WriteLine(\u0026#34;Total 20 Guest Visited our Home\u0026#34;); } static void Main(string[] args) { AbstractHouseClass objHouse = new AbstractHouseClass(); objHouse.purposeofVisit(); objHouse.NoofGuestwillvisit(); Console.ReadLine(); } } basic-c-oop-concept_15.png 12. Sealed Class/Method # Sealed Class: As name says this class cannot be inherited by other classes.\nTake our House Example. In a house, the Houseowner can have a secret room, as might be official or financial rooms. The owner don’t want others to access his official room. The sealed class will be useful in those cases. Sealed class can be declared using the keyword Sealed. If one class is declared as Sealed, it cannot be inherited in other derived classes.\nWhat will happen when we inherit sealed class in our derived class? Let’s see an example when I try to inherit my sealed class from my derived class. It shows me the below warning message.\nbasic-c-oop-concept_16.png Here we can see an example program of Sealed Class.\npublic sealed class OwnerofficialRoom { public void AllMyPersonalItems() { Console.WriteLine(\u0026#34;All Items in this rooms are personal to me no one else can access or inherit me\u0026#34;); } } class HouseSealedClass { static void Main(string[] args) { OwnerofficialRoom obj = new OwnerofficialRoom(); obj.AllMyPersonalItems(); Console.ReadLine(); } } Sealed Method: If we declared a method as sealed that specific method cannot be override in the derived class.\nLet’s see our house class here I have base class with Virtual Method and virtual Sealed method.\nThe Virtual method can be override in the derived class .But the Virtual Sealed Method cannot be override in sealed class.\n13. Static Class/Method # We have already learned about what is Sealed Class in this Article; now let’s see what are Static Class and Static Method. Both Static and Sealed Class cannot be inherited.\nWhat is the Difference between Static Class and Sealed Class? We can create an Object (instance) for the Sealed Class, we can see in my sealed class section I have created a sample Sealed class and in Main Method I have created an object to access the sealed Class. And in a Sealed Class both Static and non-Static methods can be written.\nBut for a Static Class it’s not possible to create an Object. In Static Class only Static members are allowed which means in a static Class it’s not possible to write non-static method.\nWe can say our main method as an example for the Static method. When we create a console application in c# we can see each class will have a default main method. In my article I have explained that when an Console or Windows application start execute first the main method will be executed .There is no need to create an object for the main method since it was been declared as a static method.\nstatic void Main(string[] args)\nAnother interesting one in Static class is that memory will be allocated for all static variable and methods during execution but for the non static variable and methods memory will be allocated only when the object for the class are created. Let’s take our same sealed class Example for our static Class and method.\nWhat will happen when we inherit Static class in our derived class? Let’s see an example when I try to inherit my static class from my derived class. It shows me the below warning message.\nbasic-c-oop-concept_17.png What will happen when we declare non-Static method in a Static class? Let’s see an example when I try to create a non-Static method at my Static Class.\nbasic-c-oop-concept_18.png What will happen when we create an object for the Static class? Let’s see an example when I try to create an object for my Static Class.\nbasic-c-oop-concept_19.png When we run the program we get the error message as Can not create an instance of a static class\nHow to call the Static Class Method and variable without creating the Object? It’s simple just we can use the ClassName.Variable or Method Name for example OwnerofficialRoom.AllMyPersonalItems(); See the below example with Static class\npublic static class OwnerofficialRoom { public static void AllMyPersonalItems() { Console.WriteLine(\u0026#34;All Items in this rooms are personal to me no one else can access or inherit me\u0026#34;); } } class HouseStaticClass { static void Main(string[] args) { OwnerofficialRoom.AllMyPersonalItems(); Console.ReadLine(); } } Is that possible to create a Static Method in non-Static Class? The answer is yes. We can create a Static Method to the non Static class. No need to create an object to access the static method in non-static class. We can directly use the class name to access the Static method. See the below example with Static method in non-static Class.\npublic class OwnerofficialRoom { public static void AllMyPersonalItems() { Console.WriteLine(\u0026#34;No need to create object for me just use my class name to access me :)\u0026#34;); } public void non_staticMethod() { Console.WriteLine(\u0026#34;You need to create an Object to Access Me :(\u0026#34;); } } class StaticmethodClass { static void Main(string[] args) { // for statci method no need to create object just call directly using the classname. OwnerofficialRoom.AllMyPersonalItems(); // for non-static method need to create object to access the method. OwnerofficialRoom obj = new OwnerofficialRoom(); obj.non_staticMethod(); Console.ReadLine(); } } basic-c-oop-concept_20.png 14. Interface # Interface is same like abstract class but in Interface we will have only method declaration but in abstract class we can have both method declaration and method definition .Methods of Interface must be implemented in a implementing class.\nSee the below Example program for an Interface. All the methods of Interface have been implemented in the class. As I have already told you that c# don’t support multiple inheritance for using multiple inheritance we can use Interface.\nThis below program is an example for multiple inheritance using Interface.\ninterface GuestInterface { void GuestWelcomeMessage(); void NoofGuestes(); } interface FriendsandRelationsInterface { void friendwelcomemessage(); void FriendName();} class HouseOwnerClass : GuestInterface, FriendsandRelationsInterface { public void GuestWelcomeMessage() { Console.WriteLine(\u0026#34;All guests are well come to our home\u0026#34;); } public void NoofGuestes() { Console.WriteLine(\u0026#34;Total 15 Guestes has visited\u0026#34;); } public void friendwelcomemessage() { Console.WriteLine(\u0026#34;Welcome to our Home\u0026#34;); } public void FriendName() { Console.WriteLine(\u0026#34;Friend name is: Afraz\u0026#34;); } static void Main(string[] args) { HouseOwnerClass obj = new HouseOwnerClass(); obj.GuestWelcomeMessage(); obj.NoofGuestes(); obj.friendwelcomemessage(); obj.FriendName(); Console.ReadLine(); } } basic-c-oop-concept_21.png In some cases we need to have certain methods which will be used in many derived classes. Each derived can implement different functionality for those Methods. In These cases, we can use the Interface. We can say our Guest and house example. For Guest the Welcome Message and No of Guest Function are common, but it will be different for different owners in the same house, Guest might a fathers guest, Mothers Guest, Children’s Guest or Family Guest. Each guest can have different welcome message subject, but the functions are same as Message .let’s consider now Father is a Class, Mother is a class and Children are one Class. Both guestWelcome Message and Noofguest method are same for all. In this case, we can create an Interface and declare both methods in the Interface. All father, mother and Children Classes can inherit the interface and write their own method details.\nInterface is similar to Abstract class but the major difference between the Abstract Class and the Interface are .In Abstract Class there can be both Abstract Method and Non Abstract methods .But in Interface all methods are abstract by default which means there is no non Abstract type method in the Interface. All the Methods declared in Interface should be override in the derived class.\nWhat will happen when non-abstract methods with body part are declared in an Interface? It will display the warning message as unexpected modifier in Access modifier part and Unexpected Method body error warning at message Body.\nThis article repost from here under markdown format. Thank you!\n","date":"10 April 2017","externalUrl":null,"permalink":"/posts/oops_concept/","section":"Posts","summary":"Simple introduction to C# object-oriented programming concepts including classes, objects, inheritance, and polymorphism using real-world house building analogies.","title":"Basic C# OOP Concept","type":"posts"},{"content":"","date":"10 April 2017","externalUrl":null,"permalink":"/tags/classes/","section":"Tags","summary":"","title":"Classes","type":"tags"},{"content":"","date":"10 April 2017","externalUrl":null,"permalink":"/tags/encapsulation/","section":"Tags","summary":"","title":"Encapsulation","type":"tags"},{"content":"","date":"10 April 2017","externalUrl":null,"permalink":"/tags/inheritance/","section":"Tags","summary":"","title":"Inheritance","type":"tags"},{"content":"","date":"10 April 2017","externalUrl":null,"permalink":"/tags/methods/","section":"Tags","summary":"","title":"Methods","type":"tags"},{"content":"","date":"10 April 2017","externalUrl":null,"permalink":"/tags/object-oriented-programming/","section":"Tags","summary":"","title":"Object-Oriented-Programming","type":"tags"},{"content":"","date":"10 April 2017","externalUrl":null,"permalink":"/tags/oop/","section":"Tags","summary":"","title":"Oop","type":"tags"},{"content":"","date":"10 April 2017","externalUrl":null,"permalink":"/tags/polymorphism/","section":"Tags","summary":"","title":"Polymorphism","type":"tags"},{"content":"","date":"10 April 2017","externalUrl":null,"permalink":"/categories/programming/","section":"Categories","summary":"","title":"Programming","type":"categories"},{"content":"","date":"29 March 2017","externalUrl":null,"permalink":"/tags/aot/","section":"Tags","summary":"","title":"Aot","type":"tags"},{"content":" 1. Create Menu in AOT 2. Finally, we need to add our menu as a module to the main menu, which is done as follows: All main entry points to the UI and reports are access though the menu structure. This is presented in three ways: the left-hand navigation pane, the content area, and the navigation bar (at the top of the client). The menu design is controlled from the Menus node in the AOT.\nEach module will have a menu, which is created by adding a menu reference (or shortcut) to the main menu:\nreference_menu This matches the list of modules shown in the client\u0026rsquo;s left-hand navigation pane.\n1. Create Menu in AOT # Open your project.\nRight-click on the Menus node and select New \u0026gt; Menu.\nRename the menu as YourMainMeunuName and open the property sheet.\nFor Porperties of created Menu:\nEnter the label and create a label. As this menu will be a module with company-specifc information, set the SetCompany property to Yes. Choose the icons in the NormalImage property and set ImageLocation to EmbeddedResource. Create Submenu, by right-clicking on the menu and navigating to New | Submenu.\n2. Finally, we need to add our menu as a module to the main menu, which is done as follows: # Place the AOT window next to our project window (if required, open the AOT window by pressing Ctrl + D).\nScroll down to Menus and expand MainMenu.\nRight-click on MainMenu and navigate to New \u0026gt; Menu reference.\nThis opens a new window titled Select: Menus. Locate your menu and drag it to MainMenu, as shown in the following screenshot (the title changes from Select: Menus to the path of the select node when you click on it):\nmainmenu2 Note: Do not drag the menu from your project!\nSave AOT and you can check new menu on AX client.\nThank you for reading!\n","date":"29 March 2017","externalUrl":null,"permalink":"/posts/how-to-create-main-menu-in-dynamics-ax-2012/","section":"Posts","summary":"Step-by-step tutorial for creating custom main menus in Dynamics AX 2012 AOT, including menu design and module integration techniques.","title":"How to create main menu in Dynamics AX 2012","type":"posts"},{"content":"","date":"29 March 2017","externalUrl":null,"permalink":"/tags/main-menu/","section":"Tags","summary":"","title":"Main Menu","type":"tags"},{"content":"","date":"29 March 2017","externalUrl":null,"permalink":"/tags/menu-design/","section":"Tags","summary":"","title":"Menu Design","type":"tags"},{"content":"","date":"29 March 2017","externalUrl":null,"permalink":"/tags/ui/","section":"Tags","summary":"","title":"Ui","type":"tags"},{"content":"","date":"19 January 2017","externalUrl":null,"permalink":"/tags/ax-2012/","section":"Tags","summary":"","title":"AX 2012","type":"tags"},{"content":"","date":"19 January 2017","externalUrl":null,"permalink":"/tags/database-design/","section":"Tags","summary":"","title":"Database Design","type":"tags"},{"content":"","date":"19 January 2017","externalUrl":null,"permalink":"/tags/delete-actions/","section":"Tags","summary":"","title":"Delete Actions","type":"tags"},{"content":" number-sequence-overview For this demo, I will create New module along with NumberSequence, about creating Number Sequence without module you also use same steps just leave some steps base on Design picture above.\n1. ETD # Create ETD ContosoId extends num datatype.\n2. Table # Create Contoso Table with ContosoId field.\n3. Enum # Create a new enum value Contoso in BaseEnum NumberSeqModule.\nThis value will be used to link number sequence to the module and to restrict displayed number sequence by module in Form.\n4. NumberSeqModule Class # Create NumberSeqModuleXXX class\nCreate a new NumberSeqModuleXXX class, such as NumberSeqModuleContoso, which extends the NumberSeqApplicationModule class. The sample code for creating this class is as follows:\npublic class NumberSeqModuleContoso extends NumberSeqApplicationModule { } protected void loadModule() { NumberSeqDatatype datatype = NumberSeqDatatype::construct(); ; /* Contoso Id */ datatype.parmDatatypeId(extendedtypenum(ContosoId)); datatype.parmReferenceHelp(\u0026#34;ContosoId\u0026#34;); datatype.parmWizardIsContinuous(true); datatype.parmWizardIsManual(NoYes::No); datatype.parmWizardIsChangeDownAllowed(NoYes::No); datatype.parmWizardIsChangeUpAllowed(NoYes::No); datatype.parmWizardHighest(999999); datatype.addParameterType(NumberSeqParameterType::DataArea, true, false); this.create(datatype); } public NumberSeqModule numberSeqModule() { ; return NumberSeqModule::Contoso; } Use of the DataArea segment in Step 4 to describe the default segment for the extended data types used for ContosoId.\nNote In Microsoft Dynamics AX 2009, number sequence references could be initialized by restarting the Application Object Server (AOS). In Microsoft Dynamics AX 2012, the initialization of references to populate the NumberSequenceDatatype and NumberSequenceParameterType tables has moved to the initialization checklist. To initialize the newly created references, run a job that executes the LoadModule method likes below.\nstatic void loadNumSeq (Args _args) { //define the class variable NumberSeqModuleContoso seqMod = new NumberSeqModuleContoso (); //load the number sequences that were not generated seqMod.load(); } You can also reinitialize all references by running a job that executes the LoadAll method in the NumberSequenceModuleSetup class. However, for reinitializing all references, you must ensure that there are no existing number sequences already defined in the system.\nThen run the wizard in Organization Administration \u0026gt; CommonForms \u0026gt; Numbersequences \u0026gt; Numbersequences \u0026gt; Generate \u0026gt; run the wizard.\n5. Parameters Table and Form # Create a Number sequences page in the parameters form of the new module.\nYou need to Create ContosoParameters Table along with form, See existing forms such as CustParameters or LedgerParameters for examples of the implementation.\nThese forms are using DetailsFormMaster form parten as Best Practice for Setup form.\n5.1. Create ContosoParameters Table # Add field key, Extends from ParametersKey\nProperties on Field key Visible = false, AllowEdit = false, AllowEditOnCreate = false\nCreate index name Key with AllowDuplicate = No.\nSet table properties.\nTableContent = Default data\nConfigurationKey\nCacheLookup = Found\nTableGroup = Parameter\nPrimaryKey = Key\nClusterKey = Key\nThe sample code for creating method this table as below:\nvoid delete() { throw error(\u0026#34;@SYS23721\u0026#34;); } public void initValue() { ; super(); // Key is set to mandatory so set it to 1 this.Key = 1; } static ContosoParameters find(boolean _forupdate = false) { ContosoParameters parameter; if (_forupdate) { parameter.selectForUpdate(_forupdate); } select firstonly RecId from parameter where parameter.Key == 1; if (!parameter \u0026amp;\u0026amp; !parameter.isTmp()) { Company::createParameter(parameter); } return parameter; } client server static NumberSeqModule numberSeqModule() { ; return NumberSeqModule::Contoso; } public server static NumberSequenceReference numRefContosoId() { ; NumberSeqScopeFactory::CreateDataAreaScope(curext()); return NumberSeqReference::findReference(extendedtypenum (ContosoId)); } 5.2. Create ContosoParameters form # Note This form can only be used for references that have a scope of DataArea. The administration forms described in the Setup and Administration of number sequences section can be used for references that have any scope. These forms can be found in Organization Administration \u0026gt; Common \u0026gt; Number Sequences\nThe data source of Parameters form likes picture below, you can also refer to CustParameters form for design.\nContosoParameters Code example for form methods:\npublic class FormRun extends ObjectRun { NumberSeqReference numberSeqReference; boolean runExecuteDirect; TmpIdRef tmpIdRef; NumberSeqScope scope; NumberSeqApplicationModule numberSeqApplicationModule; container numberSequenceModules; } void init() { ; this.numberSeqPreInit(); super(); ContosoParameters::find(); this.numberSeqPostInit(); } void numberSeqPostInit() { numberSequenceReference_ds.object(fieldNum(NumberSequenceReference, AllowSameAs)).visible(numberSeqApplicationModule.sameAsActive()); referenceSameAsLabel.visible(numberSeqApplicationModule.sameAsActive()); } void numberSeqPreInit() { ; runExecuteDirect = false; numberSequenceModules = [NumberSeqModule::Contoso]; numberSeqApplicationModule = new NumberSeqModuleContoso (); scope = NumberSeqScopeFactory::createDataAreaScope(); NumberSeqApplicationModule::createReferencesMulti(numberSequenceModules, scope); tmpIdRef.setTmpData(NumberSequenceReference::configurationKeyTableMulti(numberSequenceModules)); } Code example for NumberSequenceReference data source methods\nvoid removeFilter() { ; runExecuteDirect = false; numbersequenceReference_ds.executeQuery(); } void executeQuery() { if (runExecuteDirect) { super(); } else { runExecuteDirect = true; this.queryRun(NumberSeqReference::buildQueryRunMulti(numberSequenceReference, tmpIdRef, numberSequenceTable, numberSequenceModules, scope)); numbersequenceReference_ds.research(); } } 6. How to use on Table # Set number sequence in Contoso Table\nprivate void setContosoId() { NumberSeq num; NumberSequenceReference numberSequenceReference; ; numberSequenceReference = CVRParameters::numRefContosoId(); if (numberSequenceReference) { num = NumberSeq::newGetNum(numberSequenceReference); this.Id = num.num(); } } Optional method – in case you don’t want to expose Number sequence on Form Level\npublic void initValue() { ; super(); // Initialise the title id this. setContosoId (); } public void insert() { ; if(!this.Id) { this. setContosoId (); } super(); } From now on you can create new record in Contoso Table with number sequence.\n7. How to use on Form # How to use on form level (In case you don’t want to expose NS in Table Level)\nIn the class declaration of the form that will be accessing data, add a variable declaration for the number sequence handler. The following example shows the variable definition for a number sequence handler. public class FormRun extends ObjectRun { NumberSeqFormHandler numberSeqFormHandlerContosoId; } Add the NumberSeqFormHandler method to the form. The code in this method will create an instance of the number sequence form handler and return it. public NumberSeqFormHandler numSeqFormHandlerContosoId() { if (!numberSeqFormHandlerContosoId) { numberSeqFormHandlerContosoId = NumberSeqFormHandler::newForm(ContosoParameters:: numRefContosoId().NumberSequenceId, element, Contoso_ds, fieldNum(Contoso, ContosoId) ); } return numberSeqFormHandlerContosoId; } Add create, delete, and write methods to the data source of the table that contains the field for which the number sequence is being used. The following code examples show these methods that are added to the data source for the Contoso table to support the number sequence for the ContosoId field. public void create(boolean _append = false) { //before create, (ensure the number seuence has not run out of numbers) element.numSeqFormHandlerContosoId().formMethodDataSourceCreatePre(); // start: inherited table code // we need to let the create happen so the user can // choose the type super(_append); //number sequence, create action, (get next number) element.numSeqFormHandlerContosoId().formMethodDataSourceCreate(); } public void delete() { //release the number sequence value. element. numSeqFormHandlerContosoId().formMethodDataSourceDelete(); //delete the record super(); } public void write() { super(); element. numSeqFormHandlerContosoId().formMethodDataSourceWrite(); } public boolean validateWrite() { boolean ret; ret = super(); ret = element.numberSeqFormHandler().formMethodDataSourceValidateWrite(ret) \u0026amp;\u0026amp; ret; if (ret) { Contoso.validateWrite(); } return ret; } Link Active() public void linkActive() { ; element.numberSeqFormHandler().formMethodDataSourceLinkActive(); super(); } 8. Optional method # Continuous sequence\nTo avoid having gaps for continuous sequence you should add this code to the delete of the table.\npublic void delete() { super(); NumberSeq::releaseNumber(ContosoParameters::numRefContosoId().NumberSequenceId, this.ContosoId); } 9. Testing # Testing Number sequence by Job\nstatic void Max_numberSeqRefCustAccount(Args _args) { NumberSequenceReference numberSeqRefCustAccount = CustParameters::numRefCustAccount(); NumberSeq numSeqCustAccount; try { //Use the TTS level to decide whether sequence is consumed or not. ttsBegin; if (numberSeqRefCustAccount) { numSeqCustAccount = NumberSeq::newGetNum(numberSeqRefCustAccount); if (numSeqCustAccount) { info(numSeqCustAccount.num()); } } ttsCommit; } catch (Exception::Error) { info(\u0026#34;Caught \u0026#39;Exception::Error\u0026#39;.\u0026#34;); } } Thank you for reading!\n","date":"19 January 2017","externalUrl":null,"permalink":"/posts/number-sequence-farmework-in-dynamics-ax-2012/","section":"Posts","summary":"Comprehensive tutorial on implementing number sequence framework in Dynamics AX 2012 with module creation and X++ development examples.","title":"Number sequence farmework overview in Dynamics AX 2012","type":"posts"},{"content":"","date":"19 January 2017","externalUrl":null,"permalink":"/tags/numbersequence/","section":"Tags","summary":"","title":"Numbersequence","type":"tags"},{"content":"We normally create action delete in foreign table to make sure referential integrity in Logic and validation.\nThe delete action has the following options: None, Restricted, Cascade, Cascade + Restricted\n1. None: # This has no effect, and effectively disables the delete action. This is useful if you want to specifically state do nothing so that someone else doesn\u0026rsquo;t try to correct what seems to be an omission.\n2. Restricted: # This will prevent the record from being deleted if there are records in the related table that match the selected relation. This occurs within the validateDelete table event, which is called by the delete table event.\n3. Cascade: # This will delete the record in the related table, based on the relation. Ex: A sales order line is of no use without a sales order. This is an extension of the delete table event.\n4. Cascade + Restricted # This is a little special. In a two-table scenario, it is the same as Restricted. It will stop the record from being deleted if a related record exists. But if the record is being deleted as part of a cascade from a table related to it, the records will be deleted.\nfor more infomation about how to create DeleteActions at MSDN.\n","date":"19 January 2017","externalUrl":null,"permalink":"/posts/overview-delete-action-in-dyanmics-ax-2012/","section":"Posts","summary":"Complete guide to delete actions in Dynamics AX 2012 table relations including None, Restricted, Cascade, and Cascade + Restricted options for referential integrity.","title":"Overview delete action in Dynamics AX 2012","type":"posts"},{"content":"","date":"19 January 2017","externalUrl":null,"permalink":"/tags/referential-integrity/","section":"Tags","summary":"","title":"Referential Integrity","type":"tags"},{"content":"","date":"19 January 2017","externalUrl":null,"permalink":"/tags/table-relations/","section":"Tags","summary":"","title":"Table Relations","type":"tags"},{"content":"","date":"19 January 2017","externalUrl":null,"permalink":"/tags/x++/","section":"Tags","summary":"","title":"X++","type":"tags"},{"content":"","date":"12 January 2017","externalUrl":null,"permalink":"/tags/aif/","section":"Tags","summary":"","title":"Aif","type":"tags"},{"content":"","date":"12 January 2017","externalUrl":null,"permalink":"/categories/aif/","section":"Categories","summary":"","title":"AIF","type":"categories"},{"content":"Normally, when we consume AIF Service, we use this code like below to handle Error messages\ntry { client.register(ctx, contract); Console.WriteLine(\u0026#34;items registed on Trans Id: \u0026#34; + contract.InventTransId + \u0026#34; with \u0026#34; + contract.Qty + \u0026#34; quantities.\u0026#34;); Console.ReadLine(); } catch (Exception ex) { Console.WriteLine(string.Format(\u0026#34;Ex: {0}\u0026#34;, ex.Message)); Console.ReadLine(); } If it cause error, message would return like this\nIf you want to know more details, you have to go In Dynamics ax AIF Exceptions form then check\nIt\u0026rsquo;s quite hard for 3rd party developer, especially they don\u0026rsquo;t have right to access AX server.\nAnyway, we can get meaningful error message by doing below steps\nCheck that box in AIF inbound ports Use FaultException class to get message try { client.register(ctx, contract); Console.WriteLine(\u0026#34;items registed on Trans Id: \u0026#34; + contract.InventTransId + \u0026#34; with \u0026#34; + contract.Qty + \u0026#34; quantities.\u0026#34;); Console.ReadLine(); } catch (System.ServiceModel.FaultException\u0026lt;ItemsRegistration.RegRef.AifFault\u0026gt; aifFault) { //FaultMessageList[] list = aifFault.Detail.FaultMessageListArray[0]; InfologMessage[] list = aifFault.Detail.InfologMessageList; foreach (InfologMessage message in list) { Console.WriteLine(message.Message); } Console.ReadLine(); } what we got\nThank you for reading.\n","date":"12 January 2017","externalUrl":null,"permalink":"/posts/handle-aif-error-messages-in-dynamics-ax-2012-r3/","section":"Posts","summary":"Comprehensive guide for handling and managing AIF error messages in Dynamics AX 2012 R3 integration scenarios with practical troubleshooting techniques.","title":"Handle AIF error messages in dynamics AX 2012 R3","type":"posts"},{"content":"We normally use NETTCP adapter for .NET system, It going to very easy to consume by.\nAs my experience, if we use NETTCP adapter for consuming by Java system, we will need add some extension or 3rd party due to binding and mismatch schema and of course client doesn’t want to do that either me.\nSo, my solution is creating HTTP adapter for Java, you can also use .NET system to consume HTTP adapter without any problems\nHow to do # You need to make sure install web services component on Internet Information Services (IIS) and verify that the default website is working. In AX, under System administrator \u0026gt; Services and AIF \u0026gt; Web sites, open from a create new record follow information Name: DynamicsAXAif60 Virtual directory share path: \\\\YourServerName\\MicrosoftDynamicsAXAif60 URL: http://YourServerName/MicrosoftDynamicsAXAif60\nFrom now on, you can create AIF inbound port with HTTP adapter. After you\u0026rsquo;ve actived the services, that Port will deployed under DynamicsAXAif60 folder in IIS.\nThank you for reading.\n","date":"12 January 2017","externalUrl":null,"permalink":"/posts/how-to-create-http-adapter-port/","section":"Posts","summary":"Step-by-step guide for creating HTTP adapter ports in Dynamics AX 2012 AIF integration, including configuration and setup procedures.","title":"How to create HTTP adapter port","type":"posts"},{"content":"At the previous post I already show how to customize Response Value list in AIF Document standard service, today we will talk about response in Custom AIF service class.\nWe already know for Custom AIF service we actually need 2 classes, one is contract for data input and one is service to process a logic. With Response class, it\u0026rsquo;s literally same with contract class. They both hold parm value.\ncontract class gets parametters.\nResponse class sets return values.\n1. Scenario # I want to get HcmPersonnelNumberId and HcmWorkerName of current userID on C#.NET application.\n2. Solution # Write Custom AIF service to get Worker information, and then public this service.\nWrite C#.NET console to consume that service.\n3. Walkthrough # 3.1. Response class # [DataContractAttribute] class MaxWorkerResponse { str gId; str gName; } two value that I want to return is HcmPersonnelNumberId and HcmWorkerName, I will store it in 2 parms method\n[DataMemberAttribute(\u0026#39;HcmWorkerName\u0026#39;)] public HcmWorkerName parmName(HcmWorkerName _name = gName) { gName = _name; return gName; } [DataMemberAttribute(\u0026#39;HcmPersonnelNumberId\u0026#39;)] public HcmPersonnelNumberId parmId(HcmPersonnelNumberId _id = gId) { gId = _id; return gId; } 3.2. Service class # Create MaxPRService Class, This class consume through service that need to be extend SysOperationServiceBase class\nclass MaxPRService extends SysOperationServiceBase { } Main logic\n[SysEntryPointAttribute(true), AifCollectionTypeAttribute(\u0026#39;return\u0026#39;, Types::String)] public MaxWorkerResponse getEmployee() { HcmWorkerRecId workerRecId; HcmPersonnelNumberId personnelNumber; HcmWorkerName name; MaxWorkerResponse response; workerRecId = DirPersonUser::currentWorker(); personnelNumber = HcmWorker::find(workerRecId).PersonnelNumber; name = HcmWorker::find(workerRecId).name(); response = new MaxWorkerResponse(); response.parmId(personnelNumber); response.parmName(name); return response; } 3.3. Create service # In AOT create new service and add recent created class to that Service, in operations node add getEmployee method, you will get something likes\nThen right click service \u0026gt; Add-ins \u0026gt; Register Service.\ngo to AIF inbound form to create new service and add getEmployee operation to that service then Active.\n3.4. Consume service # Add recent WSDL URI http://WINSERVER:8104/DynamicsAx/Services/MaxPurchReqGeneral into Service reference in C# Console project\nstatic void Main(string[] args) { CallContext context = new CallContext() { Company = \u0026#34;USMF\u0026#34;, Language = \u0026#34;EN-US\u0026#34;, }; MaxPRServiceClient client = new MaxPRServiceClient(); MaxWorkerResponse response = client.getEmployee(context); Console.WriteLine(response.HcmWorkerName + \u0026#34;, \u0026#34; + response.HcmPersonnelNumberId); Console.ReadLine(); } Thank you for reading.\n","date":"12 January 2017","externalUrl":null,"permalink":"/posts/respone-in-aif-custom-service-class/","section":"Posts","summary":"Learn how to handle and customize response objects in AIF custom service classes for Dynamics AX 2012 integration scenarios.","title":"Response in AIF custom service class","type":"posts"},{"content":"For this demonstration, I use AIF service to create Sales order with SalesSalesOrderService and I gonna consume AIF using C#.NET.\nNormally, in consume service application we handle return value by using EntityKeyList, EntityKey, KeyData[0].Value. And for Sales Order It will return Created SalesID.\nLet\u0026rsquo;s take a look on AxdSalesOrder class. More about Axd class please prefer this.\nThen go to createList method, this method will handle response value\npublic AifEntityKeyList createList( AifDocumentXml _xml, AifEndpointActionPolicyInfo _actionPolicyInfo, AifConstraintListCollection _constraintListCollection) { AifEntityKeyList aifEntityKeyList; aifEntityKeyList = super(_xml, _actionPolicyInfo, _constraintListCollection); // Sales orders are committed - master planning explosion can be executed and confirmed dates be set this.postSalesOrderCreation(aifEntityKeyList); return aifEntityKeyList; } So, how about customer wants another meaning value beside SalesID likes InventTransId information in SalesLine table or another tables base on your requirement. To do that, we need to customize this method.\nHow to do # I will use Map and MapEnumerator classes (Please refer MSDN to understand these class), this is steps:\nWe get the SalesId from the original entityKeyList and add into Map. add Map to MapEnumerator. Use SalesId to find the sales line. (mapEnumerator.currentValue() can get current SalesID). Create a new entityKey and insert the sales line information to this entityKey. add back entityKey to entityKeyList From here in entityKeyList will store information of SalesID and List fields of SalesLine table.\nHere is the code for createList method, beside SalesId I will try to get InventTransId in SalesLine Table\npublic AifEntityKeyList createList( AifDocumentXml _xml, AifEndpointActionPolicyInfo _actionPolicyInfo, AifConstraintListCollection _constraintListCollection) { AifEntityKeyList aifEntityKeyList; SalesId salesId; SalesLine salesLine; AifEntityKey entityKey; AifEntityKey salesEntityKey; Map keyDataMap; Map salesOrderMap; MapEnumerator mapEnumerator; aifEntityKeyList = super(_xml, _actionPolicyInfo, _constraintListCollection); // Sales orders are committed - master planning explosion can be executed and confirmed dates be set this.postSalesOrderCreation(aifEntityKeyList); entityKey = aifEntityKeyList.getEntityKey(1); keyDataMap = entityKey.parmKeyDataMap(); mapEnumerator = keyDataMap.getEnumerator(); while (mapEnumerator.moveNext()) { salesId = mapEnumerator.currentValue(); if (salesId) { while select InventTransId, RecId from salesLine where salesLine.SalesId == salesId { salesEntityKey = new AifEntityKey(); salesOrderMap = new Map(Types::Integer, Types::Container); salesEntityKey.parmTableId(tableNum(SalesLine)); salesEntityKey.parmRecId(salesLine.RecId); salesOrderMap.insert(fieldNum(SalesLine, InventTransId), [salesLine.InventTransId]); salesEntityKey.parmKeyDataMap(salesOrderMap); aifEntityKeyList.addEntityKey(salesEntityKey); } } } return aifEntityKeyList; } Code in C#.NET to get list key\nSalesOrderServiceClient client = new SalesOrderServiceClient(); try { EntityKey[] salesOrderCreatedEntity = client.create(callContext, salesOrder); //EntityKey salesOrderCreated = (EntityKey)salesOrderCreatedEntity.GetValue(0); System.Collections.IEnumerator enumerator = salesOrderCreatedEntity.GetEnumerator(); while (enumerator.MoveNext()) { EntityKey salesOrderCreated = (EntityKey)enumerator.Current; Console.WriteLine(salesOrderCreated.KeyData[0].Field); Console.WriteLine(salesOrderCreated.KeyData[0].Value); } //Console.WriteLine(\u0026#34;The sales order created has a Sales ID of \u0026#34; + salesOrderCreated.KeyData[0].Value); Console.ReadLine(); } catch (Exception e) { Console.WriteLine(e.ToString()); Console.ReadLine(); } Output:\nThank you for reading.\n","date":"11 January 2017","externalUrl":null,"permalink":"/posts/aif-custom-response-value-in-dynamics-ax-2012-r3/","section":"Posts","summary":"Learn how to customize AIF response values in Dynamics AX 2012 R3 for sales order creation using C# integration and EntityKeyList handling.","title":"AIF Custom response value in Dynamics AX 2012 R3","type":"posts"},{"content":"","date":"11 January 2017","externalUrl":null,"permalink":"/tags/custom-response/","section":"Tags","summary":"","title":"Custom-Response","type":"tags"},{"content":"","date":"11 January 2017","externalUrl":null,"permalink":"/tags/sales-order/","section":"Tags","summary":"","title":"Sales-Order","type":"tags"},{"content":"","date":"10 January 2017","externalUrl":null,"permalink":"/tags/batch-job/","section":"Tags","summary":"","title":"Batch Job","type":"tags"},{"content":"","date":"10 January 2017","externalUrl":null,"permalink":"/tags/email/","section":"Tags","summary":"","title":"Email","type":"tags"},{"content":"Main requirements is Using batch to find and block vendor base on last transaction condition and notify for them by emails.\n1. Set up E-mail parameters # For set up email, we need Go to AX System administrator \u0026gt; Setup \u0026gt; E-mail parameters\n2. Vendor emails # Vendor emails locate on LogisticsElectronicAddress.Locator, partyTable.PrimaryContactEmail, partyLocation.Location, please take a look on this job to find how to update Vendor emails and you also could see the relations more clearly.\nstatic void UpdateVendorEmail(Args _args) { VendTable vendTable; LogisticsElectronicAddress electronicAddress; DirPartyTable partyTable; DirPartyLocation partyLocation; electronicAddress.initValue(); electronicAddress.Type = LogisticsElectronicAddressMethodType::Email; electronicAddress.Description = \u0026#34;max\u0026#34;; electronicAddress.Locator = \u0026#34;luan52@outlook.com\u0026#34;; electronicAddress.IsPrimary = NoYes::Yes; electronicAddress.insert(); while select forUpdate partyTable exists join vendTable where vendTable.Party == partyTable.RecId { ttsBegin; partyTable.PrimaryContactEmail = electronicAddress.RecId; partyTable.update(); ttsCommit; select firstOnly forupdate partyLocation where partyLocation.Party == partyTable.RecId; if (partyLocation) { ttsBegin; partyLocation.Location = electronicAddress.Location; partyLocation.update(); ttsCommit; } else { partyLocation.initValue(); partyLocation.Location = electronicAddress.Location; partyLocation.Party = partyTable.RecId; partyLocation.insert(); } } } 3. Batch class # Main logic here is find Vend accounts are not exist in VendTrans table with condition endTrans.TransDate \u0026gt;= beginDate, and beginDate count from today systemDateGet().\npublic class Max_VendorBlockedBatch extends RunBaseBatch { } Get the date before 6 months from today\npublic TransDate getBeginDate() { TransDate beginDate; TransDate currentDate; Months month; YearBase years; Day day; currentDate = systemDateGet(); day = dayOfMth(currentDate); month = mthOfYr(currentDate); years = year(currentDate); if (month \u0026lt; 6) { beginDate = mkDate(day, 12 - (6 - month) + 1, years - 1); } else { beginDate = mkDate(day, month - 6 + 1, years); } return beginDate; } Send E-mail\npublic void sendEmail(AccountNum _vendor, str _recipient) { str sender = \u0026#39;sender@email.com\u0026#39;; str subject = \u0026#39;Account blocked\u0026#39;; str body = \u0026#39;Your account is blocked due to last transaction\u0026#39;; List toList; ListEnumerator le; Set permissionSet; System.Exception e; str mailServer; int mailServerPort; System.Net.Mail.SmtpClient mailClient; System.Net.Mail.MailMessage mailMessage; System.Net.Mail.MailAddress mailFrom; System.Net.Mail.MailAddress mailTo; System.Net.Mail.MailAddressCollection mailToCollection; try { toList = strSplit(_recipient, \u0026#39;;\u0026#39;); permissionSet = new Set(Types::Class); permissionSet.add(new InteropPermission(InteropKind::ClrInterop)); CodeAccessPermission::assertMultiple(permissionSet); mailServer = SysEmaiLParameters::find(false).SMTPRelayServerName; mailServerPort = SysEmaiLParameters::find(false).SMTPPortNumber; mailClient = new System.Net.Mail.SmtpClient(mailServer, mailServerPort); le = toList.getEnumerator(); le.moveNext(); mailFrom = new System.Net.Mail.MailAddress(sender); mailTo = new System.Net.Mail.MailAddress(strLTrim(strRTrim(le.current()))); mailMessage = new System.Net.Mail.MailMessage(mailFrom, mailTo); mailToCollection = mailMessage.get_To(); while (le.moveNext()) { mailToCollection.Add(strLTrim(strRTrim(le.current()))); } mailMessage.set_Priority(System.Net.Mail.MailPriority::High); mailMessage.set_Subject(subject); mailMessage.set_Body(body); mailClient.Send(mailMessage); mailMessage.Dispose(); CodeAccessPermission::revertAssert(); info(strFmt(\u0026#39;Email was sent to vendor %1.\u0026#39;, _vendor)); } catch (Exception::CLRError) { e = ClrInterop::getLastException(); while (e) { info(e.get_Message()); e = e.get_InnerException(); } CodeAccessPermission::revertAssert(); } } Initializes a new instance of the Batch class.\npublic static MAX_VendorBlockedBatch construct() { return new MAX_VendorBlockedBatch(); } Gets description of the dialog.\npublic static ClassDescription description() { return \u0026#39;Vendor blocked batch\u0026#39;; } Find the vendor without transaction and disable, then send email to vendor\npublic void run() { VendTrans vendTrans; VendTable vendTable; TransDate beginDate; Email email; int i; try { beginDate = this.getBeginDate(); while select forUpdate AccountNum, Party from vendTable Notexists join vendTrans where vendTrans.AccountNum == vendTable.AccountNum \u0026amp;\u0026amp; vendTrans.TransDate \u0026gt;= beginDate { //Set the vendor blocked ttsBegin; vendTable.Blocked = CustVendorBlocked::All; vendTable.update(); ttsCommit; //Send E-mail to vendor email = vendTable.email(); if (email) { this.sendEmail(vendTable.AccountNum, email); } else { warning(strFmt(\u0026#39;The vendor %1 did not have E-mail address.\u0026#39;, vendTable.AccountNum)); } } } catch (Exception::Deadlock) { retry; } } Provides an enter point for the Batch class.\npublic static void main(Args _args) { MAX_VendorBlockedBatch vendorBlockedBatch = MAX_VendorBlockedBatch::construct(); if (vendorBlockedBatch.prompt()) { vendorBlockedBatch.run(); } } From here you can run class and set up recurrence for batch job.\nThank you for reading!\n","date":"10 January 2017","externalUrl":null,"permalink":"/posts/block-vendor-and-send-email-for-notification-in-dynamics-ax/","section":"Posts","summary":"Automated X++ solution to block vendors based on transaction conditions and send email notifications using batch jobs in Dynamics AX 2012.","title":"How to block vendor and send email for notification","type":"posts"},{"content":"","date":"10 January 2017","externalUrl":null,"permalink":"/tags/vendor-management/","section":"Tags","summary":"","title":"Vendor Management","type":"tags"},{"content":"","date":"3 January 2017","externalUrl":null,"permalink":"/tags/key/","section":"Tags","summary":"","title":"Key","type":"tags"},{"content":" There is a maximum of one Primary Key per table, whereas a table can have several alternate keys. The primary key is usually the type of key that other tables, called child tables, refer to when a foreign key field in those other tables need a relational identifier.\nFor new tables the default is a primary key based on the RecId field , incremented number or a completely meaningless number that is generated by the system surrogate key. A surrogate key is a system-generated value that acts as the primary key of a table. This value is typically used instead of a set of fields called the natural key which would typically act as the primary key of a table. Microsoft Dynamics AX 2012 uses Recld as the surrogate key.\nAlternate key can be chosen as the Replacement Key of a table that can display on forms instead of a meaningless numeric primary key value. Each table can have a maximum of one replacement key.\nNatural key has meaning to people. Most replacement keys are natural keys.\nRelations represents a foreign key.\nThank you for reading!\n","date":"3 January 2017","externalUrl":null,"permalink":"/posts/summary-key/","section":"Posts","summary":"Explanation of database key concepts in Dynamics AX including primary keys, alternate keys, and their role in table relationships.","title":"Simple summary Keys are in Dynamics AX","type":"posts"},{"content":"","date":"2 January 2017","externalUrl":null,"permalink":"/tags/.net-framework/","section":"Tags","summary":"","title":".NET Framework","type":"tags"},{"content":"","date":"2 January 2017","externalUrl":null,"permalink":"/tags/ax1004/","section":"Tags","summary":"","title":"AX1004","type":"tags"},{"content":"I got this error at version Dynamics 2012 R3 CU9, SQL Server 2014, Windows Server 2012 R2.\nThose kind of errors will come when you move report from Dev Server to Live Server, even compilation in DP Class, Query, Contract, table … without any error\nImage_rounded AX1004: Reference System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 was not a valid model assembly.\nMSB3644: The reference assemblies for framework \u0026ldquo;.NETFramework,Version=v4.0\u0026rdquo; were not found. To resolve this, install the SDK or Targeting Pack for this framework version or retarget your application to a version of the framework for which you have the SDK.\nCause # There is no reference Assemblies Version 4.0 under C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework on Windows Server 2012 R2 (only Version 4.5 it have)\nSolution # Copy those Assemblies from your any where (Windows 7,8,10) to the server, restore and compile again.\nThank you for reading!\n","date":"2 January 2017","externalUrl":null,"permalink":"/posts/ax1004-error/","section":"Posts","summary":"Troubleshooting guide for resolving AX1004 reference assembly errors in Dynamics AX 2012 when moving reports between dev and production environments.","title":"AX1004 error in Dynamics AX","type":"posts"},{"content":"","date":"2 January 2017","externalUrl":null,"permalink":"/tags/compilation/","section":"Tags","summary":"","title":"Compilation","type":"tags"},{"content":"","date":"2 January 2017","externalUrl":null,"permalink":"/tags/date-ranges/","section":"Tags","summary":"","title":"Date Ranges","type":"tags"},{"content":"","date":"2 January 2017","externalUrl":null,"permalink":"/tags/inventsum/","section":"Tags","summary":"","title":"Inventsum","type":"tags"},{"content":"","date":"2 January 2017","externalUrl":null,"permalink":"/tags/primary-keys/","section":"Tags","summary":"","title":"Primary Keys","type":"tags"},{"content":"","date":"2 January 2017","externalUrl":null,"permalink":"/tags/querybuildrange/","section":"Tags","summary":"","title":"Querybuildrange","type":"tags"},{"content":"","date":"2 January 2017","externalUrl":null,"permalink":"/tags/queryfilter/","section":"Tags","summary":"","title":"Queryfilter","type":"tags"},{"content":"InventSum is needed to recalculate sometimes. We should use InventSumRecalcItem class in Dynamics AX.\nInventSumRecalcItem InventSumRecalcItem; ; InventSumRecalcItem = new InventSumRecalcItem(\u0026#34;ITEM001\u0026#34;, true, checkfix::fix); InventSumRecalcItem.updatenow(); First parameter : ItemId\nSecond parameter : Show errors\nThird parameter : Fix or only check\nWhat if you want to calculate for all items:\nInventTable InventTable; InventSumRecalcItem InventSumRecalcItem; WHILE SELECT InventTable WHERE (InventTable.ItemType == ItemType::Item) || (InventTable.ItemType == ItemType::BOM) { InventSumRecalcItem = new InventSumRecalcItem(InventTable.ItemId, true, checkfix::fix); InventSumRecalcItem.updatenow(); } This is outdate, please refer this post.\nThank you for reading!\n","date":"2 January 2017","externalUrl":null,"permalink":"/posts/recalculate-inventsum/","section":"Posts","summary":"Simple X++ code example showing how to recalculate InventSum using InventSumRecalcItem class for inventory management in Dynamics AX 2012.","title":"Recalculate InventSum in Dynamics AX","type":"posts"},{"content":"","date":"2 January 2017","externalUrl":null,"permalink":"/tags/recalculation/","section":"Tags","summary":"","title":"Recalculation","type":"tags"},{"content":"","date":"2 January 2017","externalUrl":null,"permalink":"/tags/reference-assemblies/","section":"Tags","summary":"","title":"Reference Assemblies","type":"tags"},{"content":" There is a maximum of one Primary Key per table, whereas a table can have several alternate keys. The primary key is usually the type of key that other tables, called child tables, refer to when a foreign key field in those other tables need a relational identifier.\nFor new tables the default is a primary key based on the RecId field , incremented number or a completely meaningless number that is generated by the system surrogate key.\nAs The RecId data type, surrogate keys exist on a primary key table. As The RefRecId ETD, surrogate foreign keys exist on a foreign key table (Ex: Party field is on CustTable Table).\nAlternate key can be chosen as the Replacement Key of a table that can display on forms instead of a meaningless numeric primary key value. Each table can have a maximum of one replacement key.\nNatural key has meaning to people. A set of fields that uniquely identify a record and would have formed the primary key of the table, if not for the existence of a surrogate key.\nRelations represents a foreign key.\nThe use of surrogate keys has a history that is crucial to comprehend. These keys were initially introduced in AX 2012 to enhance performance and enable features such as the ledger account lookup when inputting general ledger journals. However, their hardcoded nature as RecId led to problems when foreign key relations were added, resulting in an unhelpful 64-bit integer being created in the field. To address this, an alternate key was introduced, which can be set as a property on the index definition to establish a more meaningful relationship for foreign keys. The primary key can only be set on unique indexes that have the Alternate Key property enabled. Another type of key introduced was the replacement key, which enables the display of a meaningful key instead of the numeric RecId-based SurrogateKey. Although SurrogateKey allows the use of RecId as a foreign key, it displays useful information from a field group on the parent table. For example, ReferenceGroup control showing fields from a field group on the related table.\nThere are several drawbacks to using surrogate keys, including the inability to use tables without a natural index as a primary key in a data entity, difficulty using tables with the Open in Excel experience, and increased complexity in data transfer, reporting, and business intelligence. Please use natural key for these scenarios.\nThank you for reading!\n","date":"2 January 2017","externalUrl":null,"permalink":"/posts/simple-summary-keys-are-in-dynamics-ax/","section":"Posts","summary":"Basic overview of primary keys, alternate keys, and foreign keys in Dynamics AX table design and relational database structure.","title":"Simple summary Keys are in Dynamics AX","type":"posts"},{"content":"","date":"2 January 2017","externalUrl":null,"permalink":"/tags/sysqueryrangeutil/","section":"Tags","summary":"","title":"Sysqueryrangeutil","type":"tags"},{"content":"In Dynamics AX, there is a class called SysQueryRangeUtil that can be utilized in both query ranges and table filters. Using methods from this class allow you to be very precise about what dates you want to use in reports or for filtering your data.\nLet’s say you have a report that you always want to run to see orders with shipping dates of the next day. It is possible to do so by using one of the methods from the SysQueryRangeUtil. The use of the letter \u0026rsquo;t\u0026rsquo; will work for today’s date, but when you try to add days to it, it doesn’t work in reports. Instead, I will use the currentdate() method and add 1 to it.\nAll methods \u0026amp; expressions must be surrounded by parentheses as shown below.\nFiltering the requested ship dates in an AX query for tomorrow (current day() + 1)\nOn any form with a grid, you filter your data by pressing Ctrl+G.\nIf I were to want to see open customer invoices from the last 90 days, I would filter my open customer invoices form and use the method (dayRange(-90,0)). The first number represents how many months backward from this month, and the second represents how many months forward. The same sorts of things can be done for the monthRange(), yearRange(), and dateRange() methods. The best part about this is that you can of course save these filters to create views that you might use on a daily basis.\nIf you are creating your query ranges in code, these methods can also be utilized whenever you are setting them. Definitely be sure to check out the SysQueryRangeUtil class as there are many more methods to use.\nHere is some methods you can use:\ncurrentCustomerAccount() currentVendorAccount() currentUserId() currentDate() dateRange() day() dayRange() greaterThanDate() greaterThanUtcDate() greaterThanUtcNow() lessthanDate() lessthanUtcDate() lessthanUtcNow() monthRange() yearRange() for example:\n(dayRange(-30,0)) – Results in a date range for the last 30 days: \u0026#34;26-01-2017\u0026#34;..\u0026#34;25-02-2017\u0026#34; (day(-1)) – Results in yesterday\u0026#39;s date: 24-02-2017 (day(0)) – Results in today\u0026#39;s date: 25-02-2017 (day(1)) – Results in tomorrow\u0026#39;s date: 26-02-2017 (greaterThanDate(2)) – Results in every date after today plus 2: \u0026gt; 27-02-2017 (lessThanDate(-1)) – Results in every date of today minus 1: \u0026lt; 24-02-2017 (monthRange(0,2)) – Results in first day till the last day of the month\u0026#39;s choosen (0 = current month): \u0026#34;01-02-2017\u0026#34;..\u0026#34;30-04-2017\u0026#34; (yearRange(-1,-1)) – Results in first day till the last day of the chosen year: \u0026#34;01-01-2017\u0026#34;..\u0026#34;31-12-2017\u0026#34; Thank you for reading!\n","date":"2 January 2017","externalUrl":null,"permalink":"/posts/using-methods-in-table-filters-query-ranges-in-dynamics-ax-2012/","section":"Posts","summary":"Learn how to use SysQueryRangeUtil class methods in Dynamics AX 2012 for dynamic date filtering in query ranges and table filters with practical examples.","title":"Using Methods in Table Filters \u0026 Query Ranges in Dynamics AX 2012","type":"posts"},{"content":"In Dynamics AX, we have two way to filter the result set of records in joined query is using QueryFilter class and QueryBuildRange class.\nSo what\u0026rsquo;s difference between them? when do we use QueryFilter class? When do we use QueryBuildRange class?\nToday, i will make a simple sample to show what is difference between them. I have a table DuyDang_ParentTable which have 1 columns ID.\nParent_Table And another table DuyDang_ChildTable which have 3 columns : ID, ParentID, Qty.\nChild_Table With the relation DuyDang_ParentTable.ID = DuyDang_ChildTable.ParentID.\nI have the Outer Join query:\nUse QueryFilter class: # static void DuyDang_QueryFilter(Args _args) { Query query; QueryBuildDataSource qbds, qbds1; QueryRun queryRun; DuyDang_ParentTable parentTable; DuyDang_ChildTable childTable; QueryFilter qFilter; QueryBuildRange qRange; struct structSet; structSet = new struct (\u0026#34;str ParentID;\u0026#34; + \u0026#34;str ChildID;\u0026#34; + \u0026#34;real Quantity\u0026#34; ); query = new Query(); qbds = query.addDataSource(tableNum(DuyDang_ParentTable)); qbds1 = qbds.addDataSource(tableNum(DuyDang_ChildTable)); qbds1.joinMode(JoinMode::OuterJoin); // Set join type. qbds1.addLink(fieldNum(DuyDang_ParentTable, ID), fieldNum(DuyDang_ChildTable, ParentID)); qFilter = query.addQueryFilter(qbds1, \u0026#39;Qty\u0026#39;); qFilter.value(queryValue(15)); queryRun = new QueryRun(query); while (queryRun.next()) { parentTable = queryRun.get(tableNum(DuyDang_ParentTable)); childTable = queryRun.get(tableNum(DuyDang_ChildTable)); structSet.value(\u0026#34;ParentID\u0026#34;, parentTable.ID); structSet.value(\u0026#34;ChildID\u0026#34;, childTable.ID); structSet.value(\u0026#34;Quantity\u0026#34;, childTable.Qty); info(structSet.toString()); } } The result\nChild_Table Use QueryBuildRange class: # static void DuyDang_QueryFilter(Args _args) { Query query; QueryBuildDataSource qbds, qbds1; QueryRun queryRun; DuyDang_ParentTable parentTable; DuyDang_ChildTable childTable; QueryFilter qFilter; QueryBuildRange qRange; struct structSet; structSet = new struct (\u0026#34;str ParentID;\u0026#34; + \u0026#34;str ChildID;\u0026#34; + \u0026#34;real Quantity\u0026#34; ); query = new Query(); qbds = query.addDataSource(tableNum(DuyDang_ParentTable)); qbds1 = qbds.addDataSource(tableNum(DuyDang_ChildTable)); qbds1.joinMode(JoinMode::OuterJoin); // Set join type. qbds1.addLink(fieldNum(DuyDang_ParentTable, ID), fieldNum(DuyDang_ChildTable, ParentID)); qRange = qbds1.addRange(fieldNum(DuyDang_ChildTable, Qty)); qRange.value(queryValue(15)); queryRun = new QueryRun(query); while (queryRun.next()) { parentTable = queryRun.get(tableNum(DuyDang_ParentTable)); childTable = queryRun.get(tableNum(DuyDang_ChildTable)); structSet.value(\u0026#34;ParentID\u0026#34;, parentTable.ID); structSet.value(\u0026#34;ChildID\u0026#34;, childTable.ID); structSet.value(\u0026#34;Quantity\u0026#34;, childTable.Qty); info(structSet.toString()); } } and result info here:\nChild_Table We can see the difference between them\nWhen you use QueryFilter class, the restriction is in the WHERE clause of the OUTER JOIN in the ANSI SQL select statement that is generated by the AOS for the underlying database system. SELECT * FROM DuyDang_ParentTable(DuyDang_ParentTable_1) OUTER JOIN * FROM DuyDang_ChildTable(DuyDang_ChildTable_1) ON DuyDang_ParentTable.ID = DuyDang_ChildTable.ParentID WHERE ((DuyDang_ChildTable(DuyDang_ChildTable_1).Qty = 15)) When you use QueryBuidRange class, the restriction is in the ON clause of the OUTER JOIN in the ANSI SQL select statement that is generated by the AOS for the underlying database system. SELECT * FROM DuyDang_ParentTable(DuyDang_ParentTable_1) OUTER JOIN * FROM DuyDang_ChildTable(DuyDang_ChildTable_1) ON DuyDang_ParentTable.ID = DuyDang_ChildTable.ParentID AND ((Qty = 15)) Thank you for reading!\n","date":"1 January 2017","externalUrl":null,"permalink":"/posts/difference-between-queryfilter-and-querybuildrange/","section":"Posts","summary":"Learn the key differences between QueryFilter and QueryBuildRange classes in Dynamics AX 2012 queries. Understand when conditions are applied in WHERE vs ON clause of OUTER JOIN statements.","title":"Difference between QueryFilter and QueryBuildRange","type":"posts"},{"content":"","date":"1 January 2017","externalUrl":null,"permalink":"/tags/dynamics-ax/","section":"Tags","summary":"","title":"Dynamics Ax","type":"tags"},{"content":"","date":"30 December 2016","externalUrl":null,"permalink":"/tags/code-snippets/","section":"Tags","summary":"","title":"Code Snippets","type":"tags"},{"content":"","date":"30 December 2016","externalUrl":null,"permalink":"/tags/helper-functions/","section":"Tags","summary":"","title":"Helper Functions","type":"tags"},{"content":"Useful functions to use in AX 2012\npublic static container list2Con (List _list) { container con; ListEnumerator listEnum; listEnum = _list.getEnumerator(); while (listEnum.moveNext()) { con += listEnum.current(); } return con; } ///Creates a file named _file with the content specified in _content parameter. //See the class SysImportUtil class for file related functions like get temfolder,tempfilename..etc. public static void createFile(str _file, str _content) { #File TextIo file = null; ; new FileIOPermission(_file, #io_write).assert(); // BP Deviation Documented file = new TextIo(_file, #io_write); file.write(_content); file.finalize(); } ///Creates an XML file named _file with the content specified in _content parameter. If the XML file ///can\u0026#39;t be created then it will try to create a normal file by calling createFile method. public static void createXmlFile(str _file, str _content) { #File XmlDocument document = null; ; try { document = XmlDocument::newXml(_content, false); new FileIOPermission(_file, #io_write).assert(); // BP Deviation Documented document.save(_file); } catch { SysImportUtil::createFile(_file, _content); } } ///Reads an XML file specified by _file parameter. public static str readXmlFile(str _file) { #File XmlDocument file = null; ; try { new FileIOPermission(_file, #io_read).assert(); // BP Deviation Documented file = XmlDocument::newFile(_file); return file.xml(); } catch { return \u0026#39;\u0026#39;; } } /// \u0026lt;summary\u0026gt; /// Opens Bing maps with the address. /// \u0026lt;/summary\u0026gt; /// \u0026lt;param name=\u0026#34;_address\u0026#34;\u0026gt; /// The address to map. /// \u0026lt;/param\u0026gt; public static void mapIt(LogisticsPostalAddress _address) { #DEFINE.MapURL(\u0026#39;http://maps.bing.com/default.aspx?where1=\\%1\u0026#39;) #DEFINE.comma(\u0026#39;,\u0026#39;) #DEFINE.newLine(\u0026#39;\\n\u0026#39;) str address; ; if (_address) { address = _address.Street + #comma + _address.City + #comma + _address.State + #comma + _address.ZipCode + #comma + _address.CountryRegionId; // Replace the newline with comma address = strReplace(address, #newline, #comma); // URL encode address = System.Web.HttpUtility::UrlEncode(address); // Add the address to the URL infolog.urlLookup(strFmt(#MapURL, address)); } } /// \u0026lt;summary\u0026gt; /// Function to get the list of Tables in AOT /// \u0026lt;/summary\u0026gt; /// \u0026lt;returns\u0026gt; /// In case the table is derived its parent i.e. base table is appended to it delimited by comma (,) /// Output example /// :Table1,Table1\u0026#39;s Base Table : Table2 : Table3 : Table4 , Table4\u0026#39;s Base Table /// \u0026lt;/returns\u0026gt; static str getAOTTables() { TreeNode node; TreeNode childNode; TreeNodeIterator nodeIt; FilePath path; TableId tableId; Dictionary dict = new Dictionary(); str parentName; str fieldArr; path = @\u0026#39;\\Data dictionary\\Tables\u0026#39;; node = TreeNode::findNode(path); nodeIt = node.AOTiterator(); childNode = nodeIt.next(); fieldArr =\u0026#39;\u0026#39;; while(childNode) { tableId = tableName2id(childNode.treeNodeName()); if ( !dict.tableObject(tableId).isTmp() \u0026amp;\u0026amp; !dict.tableObject(tableId).isMap() \u0026amp;\u0026amp; !dict.tableObject(tableId).isView()) { parentName = RetailUtils::getAOTTableParentName(tableId); if (parentName) { //Creating formated output , refer explaination and example on header fieldArr = fieldArr + \u0026#39;:\u0026#39; + strUpr(childNode.treeNodeName()) + \u0026#34;,\u0026#34; + strUpr(parentName); } else { fieldArr = fieldArr + \u0026#39;:\u0026#39; + strUpr(childNode.treeNodeName()); } } childNode = nodeIt.next(); } return fieldArr; } /// \u0026lt;summary\u0026gt; /// This method receives a table id and find the corresponding Base Table from AOT /// This method takes care of Multilevel inheritence /// \u0026lt;/summary\u0026gt; /// \u0026lt;param name=\u0026#34;tableid\u0026#34;\u0026gt; /// tableid of derived table. /// \u0026lt;/param\u0026gt; /// \u0026lt;returns\u0026gt; /// Name of parent table. /// \u0026lt;/returns\u0026gt; static str getAOTTableParentName(TableId tableid) { Dictionary dict = new Dictionary(); TableId parentId, temp; str result; parentId = dict.tableObject(tableid).extends(); // Loop until reached to the table for whcih Extends property is not defined while (parentId) { temp = dict.tableObject(parentId).extends(); if (temp) { parentId = temp; } else { break; } } if (parentId) { result = tableId2name(parentId); } else { result = \u0026#39;\u0026#39;; } return result; } /// \u0026lt;summary\u0026gt; /// Function to accepts a table name and returns all its field /// \u0026lt;/summary\u0026gt; /// \u0026lt;param name=\u0026#34;tableName\u0026#34;\u0026gt; /// Table name for which field are to be retreived. /// \u0026lt;/param\u0026gt; /// \u0026lt;returns\u0026gt; /// Field are arranged in a : delimited string and passed back /// Fields are read from AOT structure and defaults field are manually added /// as those are not present in the tree structure /// Example = :Field1:Field2:Field3:Field4 /// \u0026lt;/returns\u0026gt; static str getAOTTableFields(str tableName) { TreeNode node; TreeNode childNode; TreeNodeIterator nodeIt; FilePath path; TableId tableId; str fieldArr; Dictionary dict = new Dictionary(); fieldArr = \u0026#39;\u0026#39;; if (!tableName) { return fieldArr; } // Construct the path till table fields node path = @\u0026#39;\\Data dictionary\\Tables\\\\\u0026#39; + tableName + \u0026#39;\\\\Fields\u0026#39; ; node = TreeNode::findNode(path); nodeIt = node.AOTiterator(); childNode = nodeIt.next(); while(childNode) { fieldArr = fieldArr + \u0026#39;:\u0026#39; + strUpr(childNode.treeNodeName()); childNode = nodeIt.next(); } tableId = tableName2id(tableName); if (dict.tableObject(tableId).dataPrCompany()) { //Append the default Fields fieldArr = fieldArr + \u0026#39;:\u0026#39; + \u0026#39;DATAAREAID\u0026#39;; } if (dict.tableObject(tableId).dataPerPartition()) { fieldArr = fieldArr + \u0026#39;:\u0026#39; + \u0026#39;PARTITION\u0026#39;; } return fieldArr; } // get enum values to container static void Enum2container(Args _args) { int i = 0; DictEnum dimCode; container ret; ; dimCode = new DictEnum(enumnum(SysDimension)); while(i \u0026lt; dimCode.values()) { ret += dimCode.index2Name(i); i++; } info(strfmt(\u0026#34;%1\u0026#34;,con2Str(ret))); } public static boolean checkDateIsInPeriod(TransDate _transDate, PeriodCode _periodCode = PeriodCode::Regular) { return BudgetTransactionManager::validateTransactionDate(_transDate); } // New method for returning ledgerperiod last date static transDate findLastOpenPeriod(transdate _ledgerTransDate) { FiscalCalendarRecId fiscalCalendarRecId; fiscalCalendarRecId = Ledger::fiscalCalendar(CompanyInfo::find().RecId); return FiscalCalendars::findLastDayofPeriod( fiscalCalendarRecId, _ledgerTransDate); } // New method for returning first open ledgerperiod first date static transDate findFirstOpenPeriod(transdate _ledgerTransDate) { FiscalCalendarRecId fiscalCalendarRecId; fiscalCalendarRecId = Ledger::fiscalCalendar(CompanyInfo::find().RecId); return FiscalCalendars::findFirstDayofPeriod( fiscalCalendarRecId, _ledgerTransDate); } //Calculate Hash for the string. public static str CalculateHash(str tb) { str s; ClrObject obj; ClrObject md5; System.Text.StringBuilder sBuilder; ClrObject clrStr; ClrObject clrStrObject; System.Exception clrException; System.Array resultByteArray; int i; int arrayLength ; InteropPermission perm; perm = new InteropPermission(InteropKind::ClrInterop); perm.assert(); try { obj = System.Text.Encoding::get_ASCII().GetBytes(tb); md5 = System.Security.Cryptography.MD5::Create(); resultByteArray = md5.ComputeHash(obj); //BP deviation documented sBuilder = new System.Text.StringBuilder(); arrayLength = resultByteArray.get_Length() ; // Loop through each byte of the hashed data // and format each one as a hexadecimal string. for (i = 0; i \u0026lt;arrayLength; i++) { clrStrObject = resultByteArray.GetValue(i); clrStr = clrStrObject.ToString(\u0026#39;x2\u0026#39;); sBuilder.Append(clrStr); } // Return the hexadecimal string. s = sBuilder.ToString(); } catch (Exception::CLRError) { //BP deviation documented clrException = CLRInterop::getLastException(); s = clrException.get_Message(); error(s); throw error(\u0026#34;@SYS106158\u0026#34;); } CodeAccessPermission::revertAssert(); return s; } //Transforms xml to another format of xml using xslt. public static str transform(str aifXml, str xsltResourceName) { #define.XsltArgumentList(\u0026#34;System.Xml.Xsl.XsltArgumentList\u0026#34;) #AOT ResourceNode resourceNode; TreeNode resourcesNode; container data; str xsltString; str doXml; System.Xml.Xsl.XslCompiledTransform transform; System.Text.StringBuilder stringBuilder; System.IO.StringWriter stringWriter; System.IO.StringReader stringReader; System.Xml.XmlTextReader xmlTextReader; System.IO.StringReader stringReaderForXslt; System.Xml.XmlTextReader xmlTextReaderForXslt; System.Xml.Xsl.XsltArgumentList xsltArguments; System.IDisposable disposableObj; ; // Get the top Resource node in the AOT resourcesNode = infolog.findNode(#ResourcesPath); if (resourcesNode) { // Get the XML string holding the data from the resource item resourceNode = resourcesNode.AOTfindChild(xsltResourceName); if (resourceNode) { resourceNode.AOTload(); data = SysResource::getResourceNodeData(resourceNode); xsltString = conpeek(data, 1); } } try { //Local XSLT transform = new System.Xml.Xsl.XslCompiledTransform(); stringReaderForXslt = new System.IO.StringReader(xsltString); xmlTextReaderForXslt = new System.Xml.XmlTextReader(stringReaderForXslt); transform.Load(xmlTextReaderForXslt); //Transform the input AIF XML stringReader = new System.IO.StringReader(aifXml); xmlTextReader = new System.Xml.XmlTextReader(stringReader); stringBuilder = new System.Text.StringBuilder(); stringWriter = new System.IO.StringWriter(stringBuilder); xsltArguments = ClrInterop::Null(#XsltArgumentList); transform.Transform(xmlTextReader, xsltArguments, stringWriter); doXml = stringBuilder.ToString(); } catch (Exception::CLRError) { throw Global::error(ClrInterop::getLastException().toString()); } if (!ClrInterop::isNull(xmlTextReaderForXslt)) { disposableObj = xmlTextReaderForXslt; disposableObj.Dispose(); } if (!ClrInterop::isNull(stringReaderForXslt)) { disposableObj = stringReaderForXslt; disposableObj.Dispose(); } if (!ClrInterop::isNull(xmlTextReader)) { disposableObj = xmlTextReader; disposableObj.Dispose(); } if (!ClrInterop::isNull(stringReader)) { disposableObj = stringReader; disposableObj.Dispose(); } if (!ClrInterop::isNull(stringWriter)) { disposableObj = stringWriter; disposableObj.Dispose(); } return doXml; } //Converts from string to Time. static int str2Time(str 8 _timeStr) { int time; ; time += str2int(substr(_timeStr,0,2)) * 3600; time += str2int(substr(_timeStr,4,2)) * 60; time += str2int(substr(_timeStr,7,2)); return time; } //This function is used to get xml string from xml file. static public str getXMLstringFromFile(str _filepath) { str xmlstring=\u0026#39;\u0026#39;; XmlDocument document=new XmlDocument(); document.load(_filepath); xmlstring=document.innerXml(); return xmlstring; } // this function is used to convert string to array. public static Array str2array(str _inputString, str _delimiter = \u0026#39;\u0026#34;,\u0026#34;\u0026#39;) { List list = AmcBankFunctions::strSplit(_inputString, _delimiter); ListEnumerator enumerator = list.getEnumerator(); Array a = new Array(Types::String); int i = 1; str tmpString; ; if (strLen(_inputString) == 0 || strScan(_inputString, _delimiter, 1, strLen(_inputString)) == 0) return a; // this is not a XTL record enumerator.reset(); while (enumerator.moveNext()) { tmpString = enumerator.current(); // Removes first substring\u0026#39;s preceding \u0026#34; and last substring\u0026#39;s succeeding \u0026#34; if (strLen(tmpString) \u0026gt; 0) { if (i == 1 \u0026amp;\u0026amp; tmpString) tmpString = subStr(tmpString, 2, strLen(tmpString)); if (i == list.elements()) tmpString = subStr(tmpString, 1, strLen(tmpString)-1); } a.value(i, tmpString); i++; } return a; } /// \u0026lt;summary\u0026gt; /// Prefixes a string with a parameter provided character /// \u0026lt;/summary\u0026gt; /// \u0026lt;param name=\u0026#34;inputString\u0026#34;\u0026gt; /// The integer that is to be converted into a string /// \u0026lt;/param\u0026gt; /// \u0026lt;param name=\u0026#34;outputStringLength\u0026#34;\u0026gt; /// The length of the final string being returned /// \u0026lt;/param\u0026gt; /// \u0026lt;param name=\u0026#34;prefixWithChar\u0026#34;\u0026gt; /// The character which to prefix the output string with /// \u0026lt;/param\u0026gt; /// \u0026lt;returns\u0026gt; /// The converted integer as a string with the parameter provided length (possible prefixed with provided char) /// \u0026lt;/returns\u0026gt; public static str prefixString(str inputString, int outputStringLength, str 1 prefixWithChar) { str outputString = inputString; if (prefixWithChar == \u0026#39;\u0026#39;) return outputString; while (strLen(outputString) \u0026lt; outputStringLength) { outputString = prefixWithChar + outputString; } return outputString; } // to test that we have access right for the the file or folder. public static client IO_Status writeFileAndClose(Filename filename) { TextIo textIo; ; new FileIOPermission(filename,\u0026#39;rw\u0026#39;).assert(); textIo = new TextIo(filename,\u0026#39;w\u0026#39;); if (textIo!=null) textIo.write(\u0026#39;This is a test file for checking the access rights\u0026#39;); CodeAccessPermission::revertAssert(); if (textIo!=null) return textIo.status(); return IO_Status::WriteError; } // send email using smtp //Please change the parameters accordingly for your client public static boolean emailSmtpSend(str _receiver, str _subject, str _body, Filename _attachment = \u0026#39;\u0026#39;) { AmcBankParameters amcBankParameters; System.Net.Mail.Attachment attachment; System.Net.Mail.AttachmentCollection attachmentCollection; System.Net.Mail.MailAddress mailFrom; System.Net.Mail.MailAddress mailTo; System.Net.Mail.MailMessage mailMessage; System.Net.Mail.SmtpClient smtpClient; ; if (!_receiver) return checkFailed(\u0026#34;@ABA32081\u0026#34;); amcBankParameters = AmcBankParameters::find(); try { mailFrom = new System.Net.Mail.MailAddress(amcBankParameters.SmtpSenderAddress); mailTo = new System.Net.Mail.MailAddress(_receiver); mailMessage = new System.Net.Mail.MailMessage(mailFrom, mailTo); mailmessage.set_Subject(_subject); mailmessage.set_Body(_body); // Adding attachment if (_attachment) { attachment = new System.Net.Mail.Attachment(_attachment); attachmentCollection = mailMessage.get_Attachments(); attachmentCollection.Add(attachment); } smtpClient = new System.Net.Mail.SmtpClient(amcBankParameters.SmtpServerName, amcBankParameters.SmtpPortNumber); smtpClient.Send(mailmessage); info(strFmt(\u0026#34;@SYS80635\u0026#34;, _receiver)); attachmentCollection.Dispose(); // Releases attachement resources (files) } catch (Exception::CLRError) { // If a CLR exception occurs it is important that the exceptions is shown (which it is not per default) error(CLRInterop::getLastException()); attachmentCollection.Dispose(); // Releases attachement resources (files) return checkFailed(strFmt(\u0026#34;@ABA32082\u0026#34;, _receiver)); } catch { attachmentCollection.Dispose(); // Releases attachement resources (files) return checkFailed(strFmt(\u0026#34;@ABA32082\u0026#34;, _receiver)); } return true; } // archive the files. public static void fileArchive(Filename _file, FilePath _archivePath) { Filename filenameArchive; InteropPermission interopPermission = new InteropPermission(InteropKind::ClrInterop); Set interopPermissionSet = new Set(Types::Class); ; if (!_archivePath) return; // Granting file permission rights interopPermissionSet.add(interopPermission); CodeAccessPermission::assertMultiple(interopPermissionSet); filenameArchive = _archivePath + AmcBankFile::getFileNameAndExtension(_file); System.IO.File::Delete(filenameArchive); System.IO.File::Move(_file, filenameArchive); // Reverting file permission rights CodeAccessPermission::revertAssert(); } // getting the filename and extesion in container. public static Filename getFileNameAndExtension(Filename _filename) { ; if (!_filename) return \u0026#39;\u0026#39;; return strFmt(\u0026#39;%1%2\u0026#39;, conPeek(Global::fileNameSplit(_filename), 2), // Filename conPeek(Global::fileNameSplit(_filename), 3)); // File extension (including prefixed dot (.)) } //FolderExists public static boolean folderExists(FilePath _directory) { boolean dirExists; InteropPermission interopPermission = new InteropPermission(InteropKind::ClrInterop); Set interopPermissionSet = new Set(Types::Class); ; // Granting file permission rights interopPermissionSet.add(interopPermission); CodeAccessPermission::assertMultiple(interopPermissionSet); dirExists = System.IO.Directory::Exists(_directory); // Reverting file permission rights CodeAccessPermission::revertAssert(); return dirExists; } /// \u0026lt;summary\u0026gt; /// internal use only. /// \u0026lt;/summary\u0026gt; /// \u0026lt;param name=\u0026#34;text\u0026#34;\u0026gt; /// A String value. /// \u0026lt;/param\u0026gt; /// \u0026lt;returns\u0026gt; /// A String value. /// \u0026lt;/returns\u0026gt; private str trimLeadingTabs(str text) { int len = strlen(text); int start = 1; while ((start \u0026lt;= len) \u0026amp;\u0026amp; (substr(text, start, 1) == \u0026#39;\\t\u0026#39;)) start++; text = substr(text, start, len - start + 1); return text; } /// \u0026lt;summary\u0026gt; /// internal use only. /// \u0026lt;/summary\u0026gt; /// \u0026lt;returns\u0026gt; /// A String value. /// \u0026lt;/returns\u0026gt; public static str getClrErrorMessage() { #File str exceptionMessage; System.Exception exObject, innerException; ; new InteropPermission(InteropKind::ClrInterop).assert(); // BP deviation documented exObject = CLRInterop::getLastException(); if(exObject) { // We will ignore the first message since it is always a fixed message of // \u0026#34;Exception has been thrown from target of invocation\u0026#34;, this is from the reflection API being used // \u0026#34;ClrObject could not be created.\u0026#34; - This is also of no use in most cases innerException = exObject.get_InnerException(); while(innerException) { // BP deviation documented exceptionMessage = exceptionMessage + #delimiterSpace + CLRInterop::getAnyTypeForObject (innerException.get_Message()); innerException = innerException.get_InnerException(); } } CodeAccessPermission::revertAssert(); return exceptionMessage; } //Parse date from string public static date parseDate(str dateText) { str dateTimeText; ClrObject dateTimeObject; utcdatetime dateTimeValue; date dateValue; dateTimeText = strFmt(\u0026#39;%1T00:00:00Z\u0026#39;, dateText); // BP Deviation Documented dateTimeObject = Microsoft.Dynamics.IntegrationFramework.Util::ParseXmlDateTime(dateTimeText, false); // If the returned object is null, then deserialization failed if (CLRInterop::isNull(dateTimeObject)) { throw error(strfmt(\u0026#34;@SYS112380\u0026#34;, dateText, enum2str(Types::Date))); } dateTimeValue = CLRInterop::getAnyTypeForObject(dateTimeObject); // If the utcdatetime value is null, then the value is outside the valid range // unless the input was a null datetime if (dateTimeValue == utcDateTimeNull() \u0026amp;\u0026amp; !AifUtil::isNullDateTime(dateTimeObject)) { throw error(strfmt(\u0026#34;@SYS112380\u0026#34;, dateText, enum2str(Types::Date))); } dateValue = DateTimeUtil::date(dateTimeValue); return dateValue; } //Parse DateTime from string public static utcdatetime parseDateTime(str dateTimeText, System.DateTimeKind expectedDateTimeKind) { ClrObject dateTimeObject; utcdatetime dateTimeValue; System.DateTime systemDateTimeValue; // BP Deviation Documented dateTimeObject = Microsoft.Dynamics.IntegrationFramework.Util::ParseXmlDateTime(dateTimeText, false); // If the returned object is null, then deserialization failed if (CLRInterop::isNull(dateTimeObject)) { throw error(strfmt(\u0026#34;@SYS112380\u0026#34;, dateTimeText, enum2str(Types::UtcDateTime))); } dateTimeValue = CLRInterop::getAnyTypeForObject(dateTimeObject); // If the utcdatetime value is null, then the value is outside the valid range // unless the input was a null datetime if (dateTimeValue == utcDateTimeNull() \u0026amp;\u0026amp; !AifUtil::isNullDateTime(dateTimeObject)) { throw error(strfmt(\u0026#34;@SYS112380\u0026#34;, dateTimeText, enum2str(Types::UtcDateTime))); } // If the value is of unexpected kind, throw an error. systemDateTimeValue = dateTimeObject; if (systemDateTimeValue.get_Kind() != expectedDateTimeKind) { throw error(strfmt(\u0026#34;@SYS112380\u0026#34;, dateTimeText, enum2str(Types::UtcDateTime))); } return dateTimeValue; } // get the sequence number for the dateformat. public static int getSequenceForDateFormat( DateFormat _dateFormat) { ; switch (_dateFormat) { case DateFormat::YMD: return 321; case DateFormat::DMY: return 123; case DateFormat::DYM: return 132; case DateFormat::MDY: return 213; case DateFormat::MYD: return 231; case DateFormat::YDM: return 312; default: return 123; } } // returns time from str. static int str2Time(str 8 _timeStr) { int time; ; time += str2int(substr(_timeStr,0,2)) * 3600; time += str2int(substr(_timeStr,4,2)) * 60; time += str2int(substr(_timeStr,7,2)); return time; } // \u0026lt;CostCenter:Department\u0026gt; _dimaatributesString, // \u0026lt;1010:MBS\u0026gt; dimValueString public static RecId generateDefaultDimension(Str _dimValueString, str _dimaatributesString, str _delimeter) { container dimAttributeList, dimValueList; int j; RecId defDimRecId; DimensionAttributeValueSetStorage storage; if (_dimaatributesString \u0026amp;\u0026amp; _dimValueString) { dimAttributeList = str2con(_sourceProperties, _delimeter,false); dimValueList = str2con(_dimValueString, _delimeter,false); if(!dimValueList) { throw error(strFmt(\u0026#34;This dimvalue string was not available\u0026#34;)); } storage = new DimensionAttributeValueSetStorage(); for (j=1;j\u0026lt;=conLen(dimValueList);j++) { if(conPeek(dimValueList,j)) { DMFDimensionHelper::dynamicDimensionCreation(dimAttributeList, dimValueList, j); storage.addItem(DimensionAttributeValue::findByDimensionAttributeAndValue(DimensionAttribute::findByName(conPeek(dimAttributeList,j)), conPeek(dimValueList,j), false, true)); } } defDimRecId = storage.save(); } return defDimRecId; } //Generate the Dimension String from default dimension // \u0026lt;CostCenter:Department\u0026gt; dimAttributeString // \u0026lt;1010:MBS\u0026gt; dimValueString public static str generateDefaultDimensionStr(RefRecId _defaultDimension,str _dimattrString, str _delimeter) { DMFDefaultDimensionStr defaultDimensionStr; DimensionAttributeValueSetItem setItem; DimensionAttributeValue dimAttrValue; DimensionAttribute dimAttr; container con; Int i; DimensionValue displayValue; con = str2con(_dimattrString,_delimeter,false); if (_dimattrString \u0026amp;\u0026amp; _defaultDimension) { for( i = 1; i \u0026lt;= conLen(con); i ++) { displayValue = conPeek(con,i); select RecId, DisplayValue from setItem where setItem.DimensionAttributeValueSet == _defaultDimension join RecId from dimAttrValue where dimAttrValue.RecId == setItem.DimensionAttributeValue \u0026amp;\u0026amp; dimAttrValue.IsDeleted == false join RecId from dimAttr where dimAttr.RecId == dimAttrValue.DimensionAttribute \u0026amp;\u0026amp; dimAttr.Name == displayValue; if (defaultDimensionStr) { defaultDimensionStr += _delimeter; } defaultDimensionStr += setItem.DisplayValue; } } return defaultDimensionStr; } static int strLineCount(str freeTxt) { int start = 1; int end; int length; int lines = 0; length=strLen(freeTxt); end = strScan(freeTxt, \u0026#39;\\n\u0026#39;, start, length); while (start) { lines+=1; if (end) { start=end+1; end = strScan(freeTxt, \u0026#39;\\n\u0026#39;, start, length); } else start=0; } if (!lines) lines=1; return lines; } /// \u0026lt;summary\u0026gt; /// Determines whether the specified string is a date time string. /// \u0026lt;/summary\u0026gt; /// \u0026lt;param name=\u0026#34;_value\u0026#34;\u0026gt; /// The string to check. /// \u0026lt;/param\u0026gt; /// \u0026lt;returns\u0026gt; /// true if it is date time; otherwise, false. /// \u0026lt;/returns\u0026gt; /// \u0026lt;remarks\u0026gt; /// Input can have a format like \u0026#34;5/7/2010 12:00:00 AM\u0026#34; or \u0026#34;2010-05-07T00:00:00”. Both cases will be /// handled. /// \u0026lt;/remarks\u0026gt; public static boolean isDateTimeStr(str _value) { boolean isDateTime; System.Text.RegularExpressions.Regex regex; System.Text.RegularExpressions.Match regexMatch; #define.MatchTimeRegex(@\u0026#34;[\\sT]\\d{1,2}:\\d{1,2}:\\d{1,2}\u0026#34;) #define.ISODateTimeIdentifier(\u0026#34;T\u0026#34;) #define.ZeroTime(\u0026#34;00:00:00\u0026#34;) #define.DefaultLCID(1033) // check if in ISO format. isDateTime = strFind(_value, #ISODateTimeIdentifier, 0, strLen(_value)) \u0026gt; 0; if(!isDateTime) { // search for a time on the value // BP deviation documented regex = new System.Text.RegularExpressions.Regex(#MatchTimeRegex); // BP deviation documented regexMatch = regex.Match(_value); isDateTime = regexMatch.get_Success(); } return isDateTime; } //Swapping the key value from map /// \u0026lt;summary\u0026gt; /// Creates a \u0026lt;c\u0026gt;Map\u0026lt;/c\u0026gt; class with the value and key swapped. /// \u0026lt;/summary\u0026gt; /// \u0026lt;param name=\u0026#34;_key2ValueMap\u0026#34;\u0026gt; /// Map that has the keys and values swapped. /// \u0026lt;/param\u0026gt; /// \u0026lt;returns\u0026gt; /// A map that has the value switched with the keys. /// \u0026lt;/returns\u0026gt; public static Map getValue2KeyMap(Map _key2ValueMap) { // reverses the valid values map. The original map contains \u0026lt;key, label\u0026gt;, we will create a \u0026lt;label, key\u0026gt; Map value2KeyMap; MapEnumerator mapEnum; if(_key2ValueMap) { value2KeyMap = new Map(_key2ValueMap.valueType(), _key2ValueMap.keyType()); mapEnum = _key2ValueMap.getEnumerator(); while(mapEnum.moveNext()) { value2KeyMap.insert(mapEnum.currentValue(), mapEnum.currentKey()); } } return value2KeyMap; } //Show viewhistory on form datasources if you have ValidaTimeState Enabled DateTime enabled on the tables of that form. //create this method in Global class so you can call whereever you want in form button click as below. void clicked() { buttonHistoryClick(element, this); Super(); } static public void buttonHistoryClick(FormRun _formRun, FormButtonControl _fbc) { void changeDataSources(ValidTimeStateAutoQuery _from, ValidTimeStateAutoQuery _to, boolean _allowDelete) { Counter dataSourceNo; FormDataSource formDataSource; for (dataSourceNo=1;_formRun.dataSourceCount()\u0026gt;=dataSourceNo;dataSourceNo++) { formDataSource = _formRun.dataSource(dataSourceNo) as FormDataSource; if (formDataSource.validTimeStateAutoQuery() == _from \u0026amp;\u0026amp; new DictTable(formDataSource.table()).isValidTimeStateTable()) { formDataSource.validTimeStateAutoQuery(_to); switch (_to) { case ValidTimeStateAutoQuery::AsOfDate: formDataSource.validTimeStateAutoQuery(ValidTimeStateAutoQuery::AsOfDate); formDataSource.query().resetValidTimeStateQueryType(); formDataSource.allowDelete(_allowDelete); break; case ValidTimeStateAutoQuery::DateRange: formDataSource.validTimeStateAutoQuery(ValidTimeStateAutoQuery::DateRange); formDataSource.query().validTimeStateDateTimeRange(DateTimeUtil::minValue(), DateTimeUtil::maxValue()); formDataSource.allowDelete(_allowDelete); break; } formDataSource.executeQuery(); } } } if (_fbc.labelText() == \u0026#34;@SYS110266\u0026#34;) { changeDataSources(ValidTimeStateAutoQuery::AsOfDate, ValidTimeStateAutoQuery::DateRange, false); _fbc.text(\u0026#34;Stoping History\u0026#34;); _fbc.normalImage(\u0026#34;10006\u0026#34;); } else { changeDataSources(ValidTimeStateAutoQuery::DateRange, ValidTimeStateAutoQuery::AsOfDate, true); _fbc.Text(\u0026#34;@SYS110266 _fbc.normalImage(\u0026#34;10007\u0026#34;); } } // this method is used to create filenameTimeStamp. static FileName createFilenameTimeStamp() { FileName ret; Microsoft.Dynamics.IntegrationFramework.Adapter.FileSystem fileSystem; #Aif fileSystem = AifUtil::getClrObject(#FileSystemProgId); ret = fileSystem.GetCurrentTimestamp(); return ret; } // This method is used to split the string, and returns the conatiner with the position defined in the parameter public static str rsaStrSplit(str _splitString,str _splitchar,int _pos) { List strlist=new List(Types::String); ListIterator iterator; container packedList; ; strlist=strSplit(_splitString,_splitchar); iterator = new ListIterator(strlist); while(iterator.more()) { packedList += iterator.value(); iterator.next(); } return conPeek(packedList,_pos); } public static str encrypt(str _input, str _salt = \u0026#39;\u0026#39;) { System.Security.Cryptography.SHA512Managed sha512managed = new System.Security.Cryptography.SHA512Managed(); System.Text.Encoding encoding = System.Text.Encoding::get_UTF8(); System.Byte[] inputBytes; System.Byte[] resultBytes; int i; str returnString; ; new InteropPermission(InteropKind::ClrInterop).assert(); inputBytes = encoding.GetBytes(strLwr(_salt) + _input); // Convert lower case salt + input into byte array // The input is hashed 1024 times for attack resiliency for (i = 0; i \u0026lt; 1024; i++) { resultBytes = resultBytes ? resultBytes : inputBytes; // First loop uses input for hashing resultBytes = sha512managed.ComputeHash(resultBytes); } returnString = System.Convert::ToBase64String(resultBytes); CodeAccessPermission::revertAssert(); return returnString; } private static Map fileGetList(FilePath _filePathArchive) { Map mapFiles; InteropPermission interopPermission = new InteropPermission(InteropKind::ClrInterop); Set interopPermissionSet = new Set(Types::Class); System.Array arrayFiles; int i; ; // Granting file permission rights interopPermissionSet.add(interopPermission); CodeAccessPermission::assertMultiple(interopPermissionSet); mapFiles = new Map(Types::String, Types::String); // Key = return file | Value = archive path if (!System.IO.Directory::Exists(_filePathArchive)) { throw error(\u0026#34;Path doesnt exist\u0026#34;); } arrayFiles = System.IO.Directory::GetFiles(_filePathArchive); // CLRInterop::getAnyTypeForObject method is used to handle difference in AX and System types (e.g. System.Int32 != int) for (i = 0; i \u0026lt; CLRInterop::getAnyTypeForObject(arrayFiles.get_Length()); i++) { mapFiles.insert(CLRInterop::getAnyTypeForObject(arrayFiles.GetValue(i)), _filePathArchive); } } // Reverting file permission rights CodeAccessPermission::revertAssert(); return mapFiles; } /// \u0026lt;summary\u0026gt; /// Gets the SenderID from AIF xml . /// \u0026lt;/summary\u0026gt; /// \u0026lt;param name=\u0026#34;messagePartsXml\u0026#34;\u0026gt; /// An \u0026lt;c\u0026gt;AifXml\u0026lt;/c\u0026gt; value. /// \u0026lt;/param\u0026gt; /// \u0026lt;returns\u0026gt; /// An instance of the \u0026lt;c\u0026gt;str document Namespace\u0026lt;/c\u0026gt; class. /// \u0026lt;/returns\u0026gt; public static str getSenderIDValue(AifXml messagePartsXml) { XmlTextReader xmlReader; str value,currentElement,pureElement; ; #Aif xmlReader = XmlTextReader::newXml(messagePartsXml); while (xmlReader.Read()) { switch (xmlReader.nodeType()) { case XmlNodeType::Element: currentElement = xmlReader.name(); break; case XmlNodeType::Text: pureElement = subStr(currentElement,strFind(currentElement,\u0026#39;:\u0026#39;,1,256)+1,256); switch (pureElement) { case \u0026#34;SenderId\u0026#34;: { value=xmlReader.value(); return value; } break; } break; } } return value; } ","date":"30 December 2016","externalUrl":null,"permalink":"/posts/useful-functions-to-use-in-ax-2012/","section":"Posts","summary":"Comprehensive collection of useful X++ utility functions for Dynamics AX 2012 including file operations, XML processing, email sending, data encryption, dimension handling, and AOT manipulation. Essential developer toolkit.","title":"Useful functions to use in AX 2012","type":"posts"},{"content":"","date":"30 December 2016","externalUrl":null,"permalink":"/tags/utility-functions/","section":"Tags","summary":"","title":"Utility Functions","type":"tags"},{"content":"The workflow process moves purchase requisitions through the review process, from an initial status of Draft to a final status of Approved. When a purchase requisition is submitted for review, the workflow process is started. After a purchase requisition is approved, a purchase order can be generated for the purchase requisition lines and submitted to the vendor for order fulfillment.\nWe will use AIF standard service for import PR from outside, service name PurchReqImportService.\nin AxPurchReqTable class and setPurchReqId() method\nprotected void setPurchReqId() { NumberSequenceReference numberSequenceReference; if (this.isMethodExecuted(funcName())) { return; } if (this.isFieldSetExternally(fieldNum(PurchReqTable, PurchReqId))) { if (this.isSetMethodsCalledFromSave()) { if (!this.purchReqTable()) { numberSequenceReference = PurchReqTable::numRefPurchReqId(); this.checkNumber(numberSequenceReference.numberSequenceTable(),fieldNum(PurchReqTable,PurchReqId),this.parmPurchReqId()); if (numberSequenceReference.NumberSequenceId \u0026amp;\u0026amp; numberSequenceReference.numberSequenceTable().Continuous) { NumberSeq::newReserveNum(numberSequenceReference).reserve(this.parmPurchReqId()); } } } } else { if (this.isFieldSet(fieldNum(PurchReqTable, PurchReqId))) { return; } if (!this.parmPurchReqId()) { if (this.isSetMethodsCalledFromSave()) { //this.parmPurchReqId(NumberSeq::newGetNum(PurchParameters::numRefPurchReqId()).num()); numberSequenceReference = PurchReqTable::numRefPurchReqId(); if(numberSequenceReference) { this.setField(fieldNum(PurchReqTable, PurchReqId), NumberSeq::newGetNum(PurchParameters::numRefPurchReqId()).num()); } else { this.setField(fieldNum(PurchReqTable, PurchReqId), this.parmExternalSourceID()); } } } } } Base on this method, you could know how System get PurchReqId.\nHow to do # Go to Inbound ports form to create new service with NETTCP adapter, choose service operations likes below:\nThen active AIF inbound service\nConsume Pruchase requisition service # Open visual studio and create new console project.\nAdd service reference\nhttp://DEV-ERP:8101/DynamicsAx/Services/MavPurchaseRequisition\nThis one just for demo, so I just create code base on required fields of AIF.\nHere is the code in main method\nPurchReqImportServiceClient client = new PurchReqImportServiceClient(); CallContext context = new CallContext() { Company = \u0026#34;BGR\u0026#34;, Language = \u0026#34;En-us\u0026#34; }; AxdEntity_PurchReqLine purchReqLine = new AxdEntity_PurchReqLine() { Requisitioner = \u0026#34;000007\u0026#34;, BuyingLegalEntity = \u0026#34;BGR\u0026#34;, ItemId = \u0026#34;110329\u0026#34;, PurchUnitOfMeasure = \u0026#34;Box\u0026#34;, CurrencyCode = \u0026#34;KRW\u0026#34;, PurchQty = 100, PurchQtySpecified = true, PriceUnit = 1, PriceUnitSpecified = true, }; // Create an instance of the document class. AxdEntity_PurchReqTable purchReqTable = new AxdEntity_PurchReqTable() { PurchReqId = \u0026#34;\u0026#34;, PurchReqName = \u0026#34;Purch Req by Max\u0026#34;, ExternalSourceID = \u0026#34;PR002\u0026#34;, ExternalSourceName = \u0026#34;PR002\u0026#34;, AutoSubmitToWorkflowRequired = AxdEnum_NoYes.No, StatusToBeSaved = AxdEnum_PurchReqCreationStatus.Draft, RequisitionStatus = AxdEnum_PurchReqRequisitionStatus.Draft, RequisitionStatusSpecified = true, RequiredDate = new DateTime(2016, 12, 30), RequiredDateSpecified = true, TransDate = new DateTime(2016, 12, 30), TransDateSpecified = true, PurchReqLine = new AxdEntity_PurchReqLine[1] { purchReqLine } }; // Create instances of the entities that are used in the service and // set the needed fields on those entities. AxdPurchReqImport purchReq = new AxdPurchReqImport() { PurchReqTable = new AxdEntity_PurchReqTable[1] { purchReqTable } }; try { client.create(context, purchReq); } catch (Exception e) { Console.WriteLine(e.ToString()); Console.ReadLine(); } Run it and check result in AX\nPlease prefer previous post for another operations.\nThank you for reading!\n","date":"29 December 2016","externalUrl":null,"permalink":"/posts/crud-purchase-requisition-using-aif-in-dynamics-ax-2012-r3/","section":"Posts","summary":"Complete walkthrough for implementing purchase requisition create, read, update, and delete operations using AIF integration in Dynamics AX 2012 R3.","title":"CRUD Purchase Requisition using AIF in Dynamics AX 2012 R3","type":"posts"},{"content":" 1. Create Query 2. Using AIF Wizards 3. Create Service operation and AxBC class 4. Deploy and create service 5. Consume service using C#.NET Code for read purchase order Code for update purchase order Code for delete purchase order Due to Purchase order doesn’t have Standard document service so we have to create new Document service for that using AIF wizards.\nWe can use the AIF document service with NETTCP or HTTP Adapter to Create Purchase order service, here is steps\n1. Create Query # with three datasouce (PurchTable, PurchLine, InventDim) likes below\nAs best practice for Document service, name of query should be start with Axd* prefix.\n2. Using AIF Wizards # In AX development environment, go to Tools \u0026gt; Wizards \u0026gt; AIF document service wizards\nChoose recent created query and click next.\n3. Create Service operation and AxBC class # Click next and then Generate.\nYou will get service project in Private project\n4. Deploy and create service # •\tRight click on PurchOrderService \u0026gt; Add-Ins \u0026gt; Register service\n•\tSystem administration \u0026gt; Setup \u0026gt; Services and AIF \u0026gt; Inbound ports\n•\tClick New on Inbound ports form and name the Service.\n•\tAdapter: NETTCP (it also works with HTTP adapter)\n•\tIn Service contract customizations fast tab click Service operations\nActive recent created Service\n5. Consume service using C#.NET # After service is activated, you can get WSDL URI likes\nhttp://servername:port/DynamicsAx/Services/PurchaseOrder\nCreate console project and Add Service References, the code below In Class, I will write method to return list of EnityKey PurchId\nprivate static EntityKey[] EntityForPurchId(string purchId) { KeyField field = new KeyField() { Field = \u0026#34;PurchId\u0026#34;, Value = purchId }; EntityKey key = new EntityKey() { KeyData = new[] { field } }; return new[] { key }; } Code for create purchase order # var dim = new AxdEntity_InventDim() { InventSiteId = \u0026#34;DN\u0026#34;, InventLocationId = \u0026#34;F10-S120\u0026#34;, InventBatchId = \u0026#34;BATCH001\u0026#34; }; var purchLine = new AxdEntity_PurchLine() { ItemId = \u0026#34;220067\u0026#34;, PurchQty = 15, PurchUnit= \u0026#34;ea\u0026#34;, InventDim = new AxdEntity_InventDim[] { dim } }; var purchTable = new AxdEntity_PurchTable() { OrderAccount = \u0026#34;101-01-75441\u0026#34;, LanguageId = \u0026#34;en-us\u0026#34;, CurrencyCode = \u0026#34;KRW\u0026#34;, PurchName = \u0026#34;AIF PO Test\u0026#34;, PurchLine = new AxdEntity_PurchLine[] { purchLine } }; AxdMav_PurchOrderService purchOrder = new AxdMav_PurchOrderService(); purchOrder.PurchTable = new AxdEntity_PurchTable[] { purchTable }; CallContext callContext = new CallContext { Company = \u0026#34;bgr\u0026#34;, Language = \u0026#34;en-us\u0026#34; }; Mav_PurchOrderServiceServiceClient client = new Mav_PurchOrderServiceServiceClient(); try { EntityKey[] purchOrderCreatedEntity = client.create(callContext, purchOrder); EntityKey purchOrderCreated = (EntityKey)purchOrderCreatedEntity.GetValue(0); Console.WriteLine(\u0026#34;The purch order created has a Purch ID of \u0026#34; + purchOrderCreated.KeyData[0].Value); Console.ReadLine(); } catch (Exception e) { Console.WriteLine(e.ToString()); Console.ReadLine(); } Code for read purchase order # EntityKey[] entityKeyList = EntityForPurchId(\u0026#34;BGR-000054\u0026#34;); CallContext callContext = new CallContext(); callContext.Company = \u0026#34;bgr\u0026#34;; Mav_PurchOrderServiceServiceClient client = new Mav_PurchOrderServiceServiceClient(); AxdMav_PurchOrderService purchOrders = client.read(callContext, entityKeyList); AxdEntity_PurchTable[] purchTables = purchOrders.PurchTable; AxdEntity_PurchTable purchTable = purchTables[0]; AxdEntity_PurchLine purchLine = purchTable.PurchLine[0]; Console.WriteLine(\u0026#34;Purch Name: \u0026#34; + purchTable.PurchName); Console.WriteLine(\u0026#34;Order Account: \u0026#34; + purchTable.OrderAccount); Console.WriteLine(\u0026#34;Language Id: \u0026#34; + purchTable.LanguageId); Console.WriteLine(\u0026#34;Qty: \u0026#34; + purchLine.PurchQty); Console.WriteLine(\u0026#34;Item Id: \u0026#34; + purchLine.ItemId); client.Close(); Console.ReadLine(); Code for update purchase order # Mav_PurchOrderServiceServiceClient client = new Mav_PurchOrderServiceServiceClient(); CallContext callContext = new CallContext(); callContext.Company = \u0026#34;bgr\u0026#34;; EntityKey[] entityKeyList = EntityForPurchId(\u0026#34;BGR-000078\u0026#34;); AxdMav_PurchOrderService purchOrders = client.read(callContext, entityKeyList); //salesOrders.GetHashCode(); AxdEntity_PurchTable[] purchTables = purchOrders.PurchTable; AxdEntity_PurchTable purchTable = new AxdEntity_PurchTable(); purchTable = purchTables.First(); //salesTable.GetHashCode(); AxdEntity_PurchLine purchLine = new AxdEntity_PurchLine(); purchLine = purchTable.PurchLine.First(); decimal purchQty = 20; purchLine.PurchQty = purchQty; try { client.update(callContext, entityKeyList, purchOrders); EntityKey purchOrdersUpdated = (EntityKey)entityKeyList.GetValue(0); Console.WriteLine(\u0026#34;The purchase order has been updated has a Purch ID of \u0026#34; + purchOrdersUpdated.KeyData[0].Value + \u0026#34; with Qty \u0026#34; + purchQty.ToString() + \u0026#34;\u0026#34;); Console.ReadLine(); } catch (Exception ex) { Console.WriteLine(ex.ToString()); Console.ReadLine(); } Code for delete purchase order # Mav_PurchOrderServiceServiceClient client = new Mav_PurchOrderServiceServiceClient(); CallContext callContext = new CallContext(); callContext.Company = \u0026#34;bgr\u0026#34;; EntityKey[] entityKeyList = EntityForPurchId(\u0026#34;BGR-000054\u0026#34;); try { client.delete(callContext, entityKeyList); EntityKey purchOrdersDeleted = (EntityKey)entityKeyList.GetValue(0); Console.WriteLine(\u0026#34;The purch order has been deleted has a purch ID of \u0026#34; + purchOrdersDeleted.KeyData[0].Value); Console.ReadLine(); } catch (Exception ex) { Console.WriteLine(ex.ToString()); Console.ReadLine(); } Thank you for reading!\n","date":"28 December 2016","externalUrl":null,"permalink":"/posts/crud-purchase-order-using-aif-in-dynamics-ax-2012-r3/","section":"Posts","summary":"Comprehensive guide to implementing purchase order CRUD operations using AIF document services in Dynamics AX 2012 R3 with C# code examples.","title":"CRUD Purchase order using AIF in Dynamics AX 2012 R3","type":"posts"},{"content":"","date":"28 December 2016","externalUrl":null,"permalink":"/tags/crud-operations/","section":"Tags","summary":"","title":"Crud-Operations","type":"tags"},{"content":"","date":"28 December 2016","externalUrl":null,"permalink":"/tags/document-service/","section":"Tags","summary":"","title":"Document-Service","type":"tags"},{"content":"In previous post, I already show how to create purchase order through AIF with NETTCP or HTTP adapter. In this post, we will get little deep more about action on line of order.\nThe following code sample shows how to insert, update, delete a line of an existing purchase order through AIF, currently I’m using C#.NET console project for demo.\nAs Partial update, we must include just the fields to change and any fields required by the document (you can check Data policies in AIF Service ports form for that).\nAlso, notice how action properties are specified – no matter we do with the line, which means updating the order.\nI’m giving you an idea how it looks like, here is the code\nThe first method will handle the key of AIF Service\nprivate static EntityKey[] EntityForPurchId(string purchId) { KeyField field = new KeyField() { Field = \u0026#34;PurchId\u0026#34;, Value = purchId }; EntityKey key = new EntityKey() { KeyData = new[] { field } }; return new[] { key }; } create Line, delete Line, update line in Purchase order\nEntityKey[] entityKeyList = EntityForPurchId(\u0026#34;BGR-000054\u0026#34;); CallContext callContext = new CallContext(); callContext.Company = \u0026#34;bgr\u0026#34;; Mav_PurchOrderServiceServiceClient client = new Mav_PurchOrderServiceServiceClient(); AxdMav_PurchOrderService purchOrders = client.read(callContext, entityKeyList); //Define which line need to be update or delete var lastLine = purchOrders.PurchTable[0].PurchLine.Last(); var purchLine = new AxdEntity_PurchLine() { ItemId = \u0026#34;110329\u0026#34;, PurchQty = 1, CurrencyCode = \u0026#34;KRW\u0026#34;, RecIdSpecified = true, LineNumberSpecified = true, action = AxdEnum_AxdEntityAction.create, actionSpecified = true //for delete //RecId = lastLine.RecId, //RecIdSpecified = true, //action = AxdEnum_AxdEntityAction.delete, //actionSpecified = true //for Update //RecId = lastLine.RecId, //RecIdSpecified = true, //action = AxdEnum_AxdEntityAction.update, //actionSpecified = true }; var purchTable = new AxdEntity_PurchTable() { _DocumentHash = purchOrders.PurchTable[0]._DocumentHash, OrderAccount = \u0026#34;101-01-75441\u0026#34;, LanguageId = \u0026#34;en-us\u0026#34;, CurrencyCode = \u0026#34;KRW\u0026#34;, PurchName = \u0026#34;AIF PO Test\u0026#34;, action = AxdEnum_AxdEntityAction.update, actionSpecified = true, PurchLine = new[] { purchLine } }; AxdMav_PurchOrderService purchOrder = new AxdMav_PurchOrderService() { PurchTable = new AxdEntity_PurchTable[] {purchTable} }; client.update(callContext, entityKeyList, purchOrder); Thank you for reading!\n","date":"28 December 2016","externalUrl":null,"permalink":"/posts/insert-update-delete-order-line-through-aif-in-ax-2012-r3/","section":"Posts","summary":"Learn how to perform CRUD operations on order lines through AIF integration services in Dynamics AX 2012 R3 with detailed implementation examples.","title":"Insert, update, Delete order line through AIF In AX 2012 R3","type":"posts"},{"content":" Scenarios: # I\u0026rsquo;m trying to create product/master product in Dynamics AX using AIF inbound port, the AIF services consume by C#.NET.\nFrom AX 2012 R2, Item is replaced with Product. Item master was in Inventory Management Module, now there is a separate module for item/product creation Product information Management.\nSome definitions you should know There are two types of Products in 2012 they are:\nProduct: Product information management/Common/Products/Products Product Master: Product information management/Common/Products/Products master Variants: To create a product variant, you must define at least one product dimension for a product master. You can also rename dimensions. To create product variants, you must complete the following tasks:\nSet up dimensions, such as size, color, and style. Set up variant groups. Assign variant groups to a retail hierarchy. Create a product master and variants. Product dimensions Product dimensions are characteristics that serve to identify a product variant. You can use combinations of product dimensions to define product variants. You must define at least one product dimension for a product master to create a product variant.\nProcess: # Normally in AX, we create items master follow process:\nCreate product/product master. Assigning Dimensions Groups to a Product Master. Create Product dimension combinations (Product Variants) Release product to legal entities Assigning Item Model Group \u0026amp; Item Groups to a Product Master How to do: # Ax provides us standard services for this purpose, so we don’t need to create any custom services for this. I will use 4 services for this purpose, descriptions below\nService Purpose EcoResProductService Create products (all types). The service can also be used to retrieve data that has already been created (Create Product details in The EcoRes tables). EcoResProductMasterDimValueService Specify values of product dimensions for a product master. These values become available for the creation of product variants. The service can also be used to retrieve data that has already been created. ItemService Release distinct products and product masters. The service can also be used to retrieve data that has already been created. InventDimCombinationService Release product variants. The service can also be used to retrieve data that has already been created. 1. Create 4 AIF inbound services against Services operation above and active it # http://DEV-ERP:8103/DynamicsAx/Services/BCEcoResProduct http://DEV-ERP:8103/DynamicsAx/Services/BCEcoResProductMasterDimValue http://DEV-ERP:8103/DynamicsAx/Services/BCItemsMaster http://DEV-ERP:8103/DynamicsAx/Services/BCInventDimCombination\n2. After services creation, open visual studio then creates new Console project and add service References for that, you will get somethings like pic below: # CRUD 3. Using C#.Net to consume service # using ItemsMaster.ItemsRef; using ItemsMaster.EcoResProductRef; using ItemsMaster.EcoResProductMasterRef; using ItemsMaster.InventDimRef; static void Main(string[] args) { Program master = new Program(); master.createDistinctProduct(); Program.releaseProduct(); } EcoResDistinctProduct # public void createDistinctProduct() { AxdEntity_Product_EcoResDistinctProduct distinctProduct = new AxdEntity_Product_EcoResDistinctProduct() { DisplayProductNumber = \u0026#34;MAX00002\u0026#34;, ProductType = AxdEnum_EcoResProductType.Item, SearchName = \u0026#34;Max\u0026#34;, }; distinctProduct.Translation = new AxdEntity_Translation[1]; distinctProduct.Translation[0] = new AxdEntity_Translation() { LanguageId = \u0026#34;en-us\u0026#34;, Name = \u0026#34;max\u0026#34; }; distinctProduct.Identifier = new AxdEntity_Identifier[1]; distinctProduct.Identifier[0] = new AxdEntity_Identifier() { ProductNumber = \u0026#34;MAX00002\u0026#34; }; distinctProduct.StorageDimGroup = new AxdEntity_StorageDimGroup[1]; distinctProduct.StorageDimGroup[0] = new AxdEntity_StorageDimGroup() { Product = \u0026#34;MAX00002\u0026#34;, StorageDimensionGroup = \u0026#34;SW_P\u0026#34; }; distinctProduct.TrackingDimGroup = new AxdEntity_TrackingDimGroup[1]; distinctProduct.TrackingDimGroup[0] = new AxdEntity_TrackingDimGroup() { Product = \u0026#34;MAX00002\u0026#34;, TrackingDimensionGroup = \u0026#34;Batch Only\u0026#34; }; AxdEcoResProduct product = new AxdEcoResProduct() { Product = new AxdEntity_Product_EcoResProduct[1] { distinctProduct } }; EcoResProductRef.CallContext EcoResProductSctx = new EcoResProductRef.CallContext() { Company = \u0026#34;bgr\u0026#34;, Language = \u0026#34;en-us\u0026#34;, }; EcoResProductRef.EcoResProductServiceClient ecoResProductSClient = new EcoResProductRef.EcoResProductServiceClient(); ecoResProductSClient.create(EcoResProductSctx, product); } EcoResProductMaster # public void createMaster() { AxdEntity_Product_EcoResProductMaster productMaster = new AxdEntity_Product_EcoResProductMaster() { DisplayProductNumber = \u0026#34;MAX00002\u0026#34;, ProductType = AxdEnum_EcoResProductType.Item, SearchName = \u0026#34;max\u0026#34; }; productMaster.Translation = new AxdEntity_Translation[1]; productMaster.Translation[0] = new AxdEntity_Translation() { LanguageId = \u0026#34;en-us\u0026#34;, Name = \u0026#34;max\u0026#34; }; productMaster.Identifier = new AxdEntity_Identifier[1]; productMaster.Identifier[0] = new AxdEntity_Identifier() { ProductNumber = \u0026#34;MAX00002\u0026#34; }; productMaster.ProductDimGroup = new AxdEntity_ProductDimGroup[1]; productMaster.ProductDimGroup[0] = new AxdEntity_ProductDimGroup() { Product = \u0026#34;MAX00002\u0026#34;, ProductDimensionGroup = \u0026#34;MAX10\u0026#34; }; productMaster.VariantConfigurationTechnology = AxdEnum_EcoResVariantConfigurationTechnologyType.PredefinedVariants; AxdEcoResProduct axdProduct = new AxdEcoResProduct() { Product = new AxdEntity_Product_EcoResProduct[1] { productMaster } }; EcoResProductRef.CallContext EcoResProductSctx = new EcoResProductRef.CallContext() { Company = \u0026#34;bgr\u0026#34;, Language = \u0026#34;en-us\u0026#34;, }; EcoResProductRef.EcoResProductServiceClient ecoResProductSClient = new EcoResProductRef.EcoResProductServiceClient(); ecoResProductSClient.create(EcoResProductSctx, axdProduct); } EcoResProductMasterDimValueServiceClient # static void createMasterDimensions() { EcoResProductMasterRef.AxdEntity_EcoResSize ecoResSizeL = new EcoResProductMasterRef.AxdEntity_EcoResSize() { Name = \u0026#34;L\u0026#34; }; EcoResProductMasterRef.AxdEntity_EcoResSize ecoResSizeM = new EcoResProductMasterRef.AxdEntity_EcoResSize() { Name = \u0026#34;M\u0026#34; }; //master dimensions definition (two sizes, L and M) AxdEntity_MasterDim_EcoResProductMasterSize sizeDimensionL = new AxdEntity_MasterDim_EcoResProductMasterSize() { SizeProductMaster = \u0026#34;MAX00002\u0026#34;, Size = \u0026#34;L\u0026#34;, EcoResSize = new EcoResProductMasterRef.AxdEntity_EcoResSize[1] { ecoResSizeL } }; AxdEntity_MasterDim_EcoResProductMasterSize sizeDimensionM = new AxdEntity_MasterDim_EcoResProductMasterSize() { SizeProductMaster = \u0026#34;MAX00002\u0026#34;, Size = \u0026#34;M\u0026#34;, EcoResSize = new EcoResProductMasterRef.AxdEntity_EcoResSize[1] { ecoResSizeM } }; AxdEcoResProductMasterDimValue axdDimValue = new AxdEcoResProductMasterDimValue() { MasterDim = new AxdEntity_MasterDim_EcoResProductMasterDimensionValue[2] { sizeDimensionL, sizeDimensionM } }; EcoResProductMasterRef.CallContext masterDimctx = new EcoResProductMasterRef.CallContext(); EcoResProductMasterDimValueServiceClient masterDimensionService = new EcoResProductMasterDimValueServiceClient(); try { masterDimensionService.create(masterDimctx, axdDimValue); } catch (Exception e) { System.Console.WriteLine(e.Message); System.Console.ReadKey(); } } EcoResDistinctProductVariant # static void createVariant() { //product variant definition AxdEntity_Product_EcoResDistinctProductVariant productVariant = new AxdEntity_Product_EcoResDistinctProductVariant() { DisplayProductNumber = \u0026#34;MAXL\u0026#34;, ProductType = AxdEnum_EcoResProductType.Item, SearchName = \u0026#34;MAXL\u0026#34;, ProductMaster = \u0026#34;MAX00002\u0026#34; }; productVariant.Translation = new AxdEntity_Translation[1]; productVariant.Translation[0] = new AxdEntity_Translation() { LanguageId = \u0026#34;en-us\u0026#34;, Name = \u0026#34;Max L size\u0026#34; }; productVariant.VariantDimValue = new AxdEntity_VariantDimValue_EcoResProductVariantDimensionValue[1]; productVariant.VariantDimValue[0] = new AxdEntity_VariantDimValue_EcoResProductVariantSize() { DistinctProductVariant = \u0026#34;MAXL\u0026#34;, ProductDimensionAttribute = 3173,//The ID of the EcoResSize table Size = \u0026#34;L\u0026#34;, EcoResSize = new EcoResProductRef.AxdEntity_EcoResSize[1] { new EcoResProductRef.AxdEntity_EcoResSize() { Name = \u0026#34;L\u0026#34; } } }; AxdEcoResProduct axdProduct = new AxdEcoResProduct() { Product = new AxdEntity_Product_EcoResProduct[1] { productVariant } }; EcoResProductRef.CallContext inventDimctx = new EcoResProductRef.CallContext(); EcoResProductServiceClient productService = new EcoResProductServiceClient(); try { productService.create(inventDimctx, axdProduct); } catch (Exception e) { System.Console.WriteLine(e.Message); System.Console.ReadKey(); } } Release a distinct product or a product master # public static void releaseProduct() { var invent = new AxdEntity_Invent() { ItemId = \u0026#34;MAX00002\u0026#34;, UnitId = \u0026#34;box\u0026#34; }; var purch = new AxdEntity_Purch() { ItemId = \u0026#34;MAX00002\u0026#34;, UnitId = \u0026#34;box\u0026#34; }; var sales = new AxdEntity_Sales() { ItemId = \u0026#34;MAX00002\u0026#34;, UnitId = \u0026#34;box\u0026#34; }; var inventTable = new AxdEntity_InventTable() { ItemId = \u0026#34;MAX00002\u0026#34;, PmfProductType = AxdEnum_PmfProductType.MainItem, Product = \u0026#34;MAX00002\u0026#34;, Invent = new AxdEntity_Invent[] { invent }, Purch = new AxdEntity_Purch[] { purch }, Sales = new AxdEntity_Sales[] { sales }, }; var item = new AxdItem() { InventTable = new AxdEntity_InventTable[1] { inventTable } }; ItemsRef.CallContext callContext = new ItemsRef.CallContext(); ItemsRef.ItemServiceClient client = new ItemsRef.ItemServiceClient(); callContext.Company = \u0026#34;bgr\u0026#34;; callContext.Language = \u0026#34;en-us\u0026#34;; try { ItemsRef.EntityKey[] itemCreatedEntity = client.create(callContext, item); ItemsRef.EntityKey itemCreated = (ItemsRef.EntityKey)itemCreatedEntity.GetValue(0); Console.WriteLine(\u0026#34;AxdEntity_Invent \u0026#34; + itemCreated.KeyData[0].Value); Console.ReadLine(); } catch (Exception e) { Console.WriteLine(e.ToString()); Console.ReadLine(); } } Release product Variants # static void releaseProductVariants() { AxdEntity_InventDimCombination releasedVariant = new AxdEntity_InventDimCombination() { DistinctProductVariant = \u0026#34;MAX00002\u0026#34;, ItemId = \u0026#34;\u0026#34; }; AxdInventDimCombination inventDimCombination = new AxdInventDimCombination() { InventDimCombination = new AxdEntity_InventDimCombination[1] { releasedVariant } }; InventDimRef.CallContext itemsctx = new InventDimRef.CallContext() { Company = \u0026#34;bgr\u0026#34;, Language = \u0026#34;en-us\u0026#34; }; InventDimCombinationServiceClient inventDimCombinationService = new InventDimCombinationServiceClient(); try { inventDimCombinationService.create(itemsctx, inventDimCombination); } catch (Exception e) { System.Console.WriteLine(e.Message); System.Console.ReadKey(); } } CRUD In main I only create Distinct product and release it, but you can use another method to create master, variant, masterDim and so on.\n","date":"27 December 2016","externalUrl":null,"permalink":"/posts/crud-items-products-using-aif-in-dynamics-ax-2012-r3/","section":"Posts","summary":"Complete tutorial on creating, reading, updating, and deleting products and variants in Dynamics AX 2012 R3 using AIF services and C# integration.","title":"CRUD Items, products, products master dimension, variants using AIF in Dynamics AX 2012 R3","type":"posts"},{"content":"","date":"27 December 2016","externalUrl":null,"permalink":"/tags/item-master/","section":"Tags","summary":"","title":"Item-Master","type":"tags"},{"content":"","date":"27 December 2016","externalUrl":null,"permalink":"/tags/products/","section":"Tags","summary":"","title":"Products","type":"tags"},{"content":"","date":"27 December 2016","externalUrl":null,"permalink":"/tags/variants/","section":"Tags","summary":"","title":"Variants","type":"tags"},{"content":"","date":"26 December 2016","externalUrl":null,"permalink":"/tags/customer-payments/","section":"Tags","summary":"","title":"Customer Payments","type":"tags"},{"content":"","date":"26 December 2016","externalUrl":null,"permalink":"/tags/payment-journal/","section":"Tags","summary":"","title":"Payment Journal","type":"tags"},{"content":"Base on JournalId on LedgerJournalTable you can use code below to post the transactions.\n//Contract class [ DataMemberAttribute(\u0026#39;gJournalId\u0026#39;), SysOperationDisplayOrderAttribute(\u0026#39;1\u0026#39;) ] public LedgerJournalId parmJournalNum(LedgerJournalId _journalId = gJournalId) { gJournalId = _journalId; return gJournalId; } //Processing class [SysEntryPointAttribute] public void process(MAV_PostCustPaymentJourContract _contract) { LedgerJournalTable ledgerJournalTable; LedgerJournalCheckPost postCustPaymentJournal; ledgerJournalTable = LedgerJournalTable::find(_contract.parmJournalNum()); if (ledgerJournalTable) { postCustPaymentJournal = LedgerJournalCheckPost::newLedgerJournalTable(ledgerJournalTable, NoYes::Yes); postCustPaymentJournal.run(); } } ","date":"26 December 2016","externalUrl":null,"permalink":"/posts/posting-cust-payment-journal-using-xpp/","section":"Posts","summary":"Step-by-step X++ code examples for programmatically posting customer payment journals in Dynamics AX 2012 using LedgerJournalTable and posting routines.","title":"Posting cust payment journal using X++ Dynamics AX 2012","type":"posts"},{"content":"","date":"24 November 2016","externalUrl":null,"permalink":"/tags/operator/","section":"Tags","summary":"","title":"Operator","type":"tags"},{"content":"The Microsoft Dynamics AX runtime manages the storage of value type data on the call stack and reference type objects on the memory heap.\nThe call stack is the memory structure that holds data about the active methods called during program execution. The memory heap is the memory area that allocates storage for objects that are destroyed automatically by the Microsoft Dynamics AX run-time.\nValue types # Value types include the built-in primitive types, extended data types, enumeration types, and built-in collection types.\nThe primitive types are boolean, int, int64, real, date, utcDateTime, timeofday, str, and guid. The extended data types are specialized primitive types and specialized base enumerations. The enumeration types are base enumerations and extended data types. The collection types are the built-in array and container types. By default, variables declared as value types are assigned their zero value by the Microsoft Dynamics AX runtime. These variables can’t be set to null. Variable values are copied when variables are used to invoke methods and when they are used in assignment statements. Therefore, two value type variables can’t reference the same value.\nthe-type-system-of-dynamics-ax-2012 Reference types # Reference types include the record types, class types, and interface types.\nThe record types are table, map, and view. User-defined record types are dynamically composed from application model layers. Microsoft Dynamics AX runtime record types are exposed in the system application programming interface (API). Although the methods are not visible in the AOT, all record types implement the methods that are members of the system xRecord type, a Microsoft Dynamics AX runtime class type. User-defined class types are dynamically composed from application model layers and Microsoft Dynamics AX runtime class types exposed in the system API. Interface types are type specifications and can’t be instantiated in the Microsoft Dynamics AX runtime. Class types can, however, implement interfaces. Variables declared as reference types contain references to objects that the Microsoft Dynamics AX runtime instantiates from dynamically composed types defined in the application model layering system and from types exposed in the system API. The Microsoft Dynamics AX runtime also performs memory deallocation (garbage collection) for these objects when they are no longer referenced. Reference variables declared as record types reference objects that the Microsoft Dynamics AX runtime instantiates automatically. Class type objects are programmatically instantiated using the new operator. Copies of object references are passed as reference parameters in method calls and are assigned to reference variables, so two variables can reference the same object.\nThank you for reading!\n","date":"24 November 2016","externalUrl":null,"permalink":"/posts/the-type-system-of-dynamics-ax-2012/","section":"Posts","summary":"Comprehensive guide to Microsoft Dynamics AX 2012 type system covering value types, reference types, memory management, and X++ data structures.","title":"The Type system of Dynamics AX 2012","type":"posts"},{"content":"","date":"10 November 2016","externalUrl":null,"permalink":"/tags/aos/","section":"Tags","summary":"","title":"Aos","type":"tags"},{"content":"","date":"10 November 2016","externalUrl":null,"permalink":"/tags/custom-services/","section":"Tags","summary":"","title":"Custom-Services","type":"tags"},{"content":"","date":"10 November 2016","externalUrl":null,"permalink":"/tags/data-contracts/","section":"Tags","summary":"","title":"Data-Contracts","type":"tags"},{"content":"","date":"10 November 2016","externalUrl":null,"permalink":"/tags/document-services/","section":"Tags","summary":"","title":"Document-Services","type":"tags"},{"content":"","date":"10 November 2016","externalUrl":null,"permalink":"/tags/metadata-service/","section":"Tags","summary":"","title":"Metadata-Service","type":"tags"},{"content":"","date":"10 November 2016","externalUrl":null,"permalink":"/tags/query-service/","section":"Tags","summary":"","title":"Query-Service","type":"tags"},{"content":"","date":"10 November 2016","externalUrl":null,"permalink":"/tags/system-services/","section":"Tags","summary":"","title":"System-Services","type":"tags"},{"content":" 1. Document services # Document services use documents to represent business objects such as purchase and sales orders, customers, vendors, and so on.\nA document service is composed of the following components:\nDocument query : This is a query that is created in the Application Object Tree (AOT) and contains all the tables that are related to the business object that you want to expose. Based on this query, the Document Service Generation Wizard can be used to generate the other artifacts that make up the document service. Table AxBC classes : An AxBC class is a wrapper for a table and contains business logic that is needed for Create, Read, Update, Delete (CRUD) operations. Document class : The purpose of the document class is to contain business logic that is associated with the creation and modification of the business entity itself. For example, the AxdCustomer class could contain logic to handle party information of a customer. Document service class : This is the actual service implementation class and extends the AifDocumentService class. This class implements the service operations that are published through the service contract. When creating document services, developers need to make sure that the business object is mapped correctly to the document query. The document services framework will handle all other things such as the serialization and deserialization of XML, date effectiveness, and so on.\nDocument services can be deployed using the integration ports and all available adapters can be used.\n2. Custom services # Custom services were already available in Microsoft Dynamics AX 2009, but support for Extended Data Types(EDTs) was limited, which resulted in developers having to provide custom serialization and deserialization logic.\nMicrosoft Dynamics AX 2012 introduces the concept of attributes. Attributes provide a way to specify metadata about classes and methods. Two of these attributes are used when creating data contracts: the DataContractAttribute and DataMemberAttribute attributes.\nThe \u0026lsquo;DataContractAttribute\u0026rsquo; attribute is used to define that a class is a data contract. The\u0026rsquo;DataMemberAttribute\u0026rsquo; attribute is added to methods of data contracts that represent data members that have to be exposed. This way of defining data contracts is very similar to other programming languages such as C##.\nSupport for more complex data types such as collections and tables has been added so that these types can be serialized and deserialized without developers having to provide the logic themselves.\nIn a typical custom service you will find the following components:\nService contract : A service contract is an X++ class that contains methods with the SysEntryPointAttribute attribute. This identifies methods that will result in a service operation contract when the service is exposed. Data contracts : A data contract is an X++ class that is attributed with the DataContractAttribute attribute. It contains parameter methods that will be attributed as data members for each member variable that needs to be part of the data contract. Custom services can be deployed using the integration ports and any available adapter can be used.\n3. System services # These services are new since the release of Microsoft Dynamics AX 2012. The main difference between these services and the previous two types is that they are not customizable and are not mapped to a query or X++ code. They are not customizable because they are written by Microsoft in managed code. One exception is the user session service, which is written in X++ code but is generally considered as a system service.\nThere are three system services available for use in Microsoft Dynamics AX 2012: the query service, the metadata service, and the user session service.\n4. Query service # The query service provides the means to run queries of the following three types:\nStatic queries defined in the AOT. User-defined queries by using the QueryMetaData class in the service. Dynamic queries that are written in X++ classes. These classes need to extend the \u0026lsquo;AIFQueryBuilder\u0026rsquo; class. When queries are called by a service, the AOS authorization ensures that the caller has the correct permissions to retrieve the information. This means that unpermitted fields will be omitted from the query result. Furthermore, when joined data sources are not allowed to be used, the query call will result in an error that can be caught by the calling application.\nThe resulting rows will be returned as an ADO.NET DataSet object. This can be very useful when you make use of controls in your application that can be bound to a DataSet object.\nThe query service can be found at the following address:\nnet.tcp://hostname:port/DynamicsAX/Services/QueryService\n5. Metadata service # This system service can be used to retrieve metadata information about the AOT. Consumers of this service can get information such as which tables, classes, forms, and menu items are available in the system. An example usage of this service could be retrieving information about the AOT and using it in a dashboard application running on the Microsoft .NET Framework.\nThe metadata service can be found at the following address:\nnet.tcp://hostname:port/DynamicsAX/Services/MetaDataService\n6. User session service # The third system service is the user session service. With this service you can retrieve information about the caller\u0026rsquo;s user session. This information includes the user\u0026rsquo;s default company, language, preferred calendar, time zone, and currency.\nThe user session service can be found at the following address:\nnet.tcp://hostname:port/DynamicsAX/Services/UserSessionService\n7. The right service for the right job # Now that it is clear what types of services Microsoft Dynamics AX 2012 has to offer, the question arises as to when each type of service should be used. There is no simple answer for this due to the fact that every type has its strengths and weaknesses. Let us take a look at two factors that may help you make the right decision.\n8. Complexity # Both document services and custom services can handle any business entity complexity. The document services framework parses the incoming XML and validates it against an XML Schema Definition(XSD) document. After validation, the framework calls the appropriate service action. Custom services on the other hand use the .NET XML Serializer and no validation of data is done. This means that any validations of the data in the data contract need to be written in code. Another advantage of document services over custom services is that the AxBC classes already contain a lot of the logic that is needed for CRUD operations.\n9. Flexibility # Document services have service contracts that are tightly coupled with the AOT Query object. This means that when the query changes, the schema also changes. Data policies allow you to control which fields are exposed. When using custom services, this cannot be done by setup, but has to be done by attributing at design time.\nCustom services have the flexibility towards the service contract that the document services are lacking. Here the developer is in full control about what is in the contract and what is not. The operations, input parameters, and return types are all the responsibility of the developer.\nAnother benefit in using custom services is the ability to use shared data contracts as parameters for your operations. Think of a company-wide software solution that involves the use of Microsoft Dynamics AX 2012 together with SharePoint and .NET applications that are all linked through BizTalk. You could opt to share data contracts to make sure that entities are the same for all of the components in the architecture.\nIn that scenario, you\u0026rsquo;re able to create a data contract in managed code and reference it in Microsoft Dynamics AX 2012. Then you can use that .NET data contract in your service operations as a parameter.\nThere will probably be more factors that you will take into consideration to choose between the service types. But we can come to the following conclusion about when to use what type of service:\nCustom services : Custom services should be used when exposing entities that have a low complexity or data contracts that need to be shared between other applications. They are also ideal when custom logic needs to be exposed that may have nothing to do with data structures within Microsoft Dynamics AX.\nDocument services : Document services should be used when exposing entities that have a high complexity and when validation of the data and structure would require a lot of work for developers to implement on their own. Query service : The query service should be used when only read operations are needed and there is no need for updates, inserts, or delete actions. It can be used when writing .NET Framework applications that leverage the data from Microsoft Dynamics AX returned as an ADO.NET DataSet.\nMetadata service : Use the metadata service when metadata information about objects in the AOT is required. User session service : The user session service should be used when user session-related information is required. ","date":"10 November 2016","externalUrl":null,"permalink":"/posts/types-services-microsoft-dynamics-ax-2012/","section":"Posts","summary":"Complete overview of Microsoft Dynamics AX 2012 service types including document services, custom services, and system services. Learn when to use each service type for AIF integration.","title":"Types of services in Microsoft Dynamics AX 2012","type":"posts"},{"content":"","date":"10 November 2016","externalUrl":null,"permalink":"/tags/user-session-service/","section":"Tags","summary":"","title":"User-Session-Service","type":"tags"},{"content":"","date":"10 November 2016","externalUrl":null,"permalink":"/tags/wcf/","section":"Tags","summary":"","title":"Wcf","type":"tags"},{"content":"","date":"8 November 2016","externalUrl":null,"permalink":"/tags/bcp/","section":"Tags","summary":"","title":"Bcp","type":"tags"},{"content":"","date":"8 November 2016","externalUrl":null,"permalink":"/tags/data-management/","section":"Tags","summary":"","title":"Data Management","type":"tags"},{"content":" SUMMARY # Tool can be used for two different purposes. One is to install demo data and other one is elaborated as below. Customers often need to have a production dataset to use when building and validating customizations in non-production environments.\nThe Microsoft Dynamics AX 2012 Test Data Transfer Tool (beta) is a tool that helps move data between from production to non-production environments or from non-production environments to production environments to make a new production environment. But you must be careful becasue the tool imports data table by table and deletes the data in the table before importing. Hence it is highly advised against running the tool for import in production environments.\nBENEFITS # Export and import data outside AX, without running an AOS instance.\nExport and import processing are faster compared to other tools because this tool is based on SQL Server bcp.\nThe tool can work around the table/field metadata changes between builds and environments and hence can be used to move data from build to build, and environment to environment even when there are customizations, and metadata changes.\nThe tool minimally changes data during the import process. The only data the tool changes are the entity IDs (IDs related to table, field, etc.) that are stored as data and that could change with each deployment. The tool recognizes the changes and patches the data with the AXIDs of the system that the data is being imported into.\nThe data file format is the standard format produced by SQL Server bcp. The output is text based and can be stored and compared against other versions in a version control system.\nHow to # Download AX2012TestDataTransferTool.zip file from LCS Microsoft AX 2012 Test Data Transfer Tool PROD Environment\nRun the setup file in SQL SERVER environment and complete the installation.\n\u0026ldquo;C:\\Program Files (x86)\\Microsoft Dynamics AX 2012 Test Data Transfer Tool (Beta)\u0026rdquo; file appears automatically. Find the MetadataXMLGenerator.xpo file and import it into AX.\nA job named MetadataXMLGenrator appears among AOT/jobs. Find and run the job.\nJob generates a file named MetaData.Xml and gives you a file path via infolog.\nCopy MetaData.Xml file and paste in \u0026ldquo;C:\\Program Files (x86)\\Microsoft Dynamics AX 2012 Test Data Transfer Tool (Beta)[Lists]\u0026rdquo; file in Prod(Golden) SQL SERVER. Overwrite the existing MetaData.Xml file.\nDEV or TEST Environment\nRepeat the steps 2-6 for DEV environment.\nThe windows user who is going to execute the process should have access MicrosoftDynamicsAx ve Model database in DEV and Prod SQL servers. \u0026ldquo;Read\u0026rdquo; is enough for (Prod) exporting. \u0026ldquo;Full\u0026rdquo; right is enough for importing (DEV).\nThe windows user who is going to execute the process should have \u0026ldquo;full\u0026rdquo; access \u0026ldquo;C:\\Program Files (x86)\\Microsoft Dynamics AX 2012 Test Data Transfer Tool (Beta)\u0026rdquo; in both DEV and Prod SQL servers. System generates logs here.\nNow, Live (Golden) environment\u0026rsquo;s data will be exported. Prepare a file to export live(Golden) data on Live SQL Server. For instance C:\\DC_EXPORT\nType the following command in command line and initiate the exportation process: DP.exe EXPORT Directory\u0026gt;\u0026gt; Database name\u0026gt;\u0026gt; Server\u0026gt;\u0026gt;\nDP.exe EXPORT C:\\DC_EXPORT \u0026quot;MicrosoftDynamicsAX\u0026quot; \u0026quot;ServerName\u0026quot;\nCopy the exported file (C:\\DC_EXPORT) to DEV environment\nStop DEV AOS service\nType the following command in command line and initiate the importation process:\nDP.exe IMPORT Directory\u0026gt;\u0026gt; Database name\u0026gt;\u0026gt; Server\u0026gt;\u0026gt;\nStart DEV AOS service.\nNote: DP.exe EXPORT/IMPORT commands must be run from the related directories\n","date":"8 November 2016","externalUrl":null,"permalink":"/posts/microsoft_dyanmics_ax_2012_test_data_transfer_tool/","section":"Posts","summary":"Complete guide to using Microsoft Dynamics AX 2012 Test Data Transfer Tool for migrating production data to development environments. Learn step-by-step installation and usage procedures.","title":"Microsoft AX 2012 Test Data Transfer Tool","type":"posts"},{"content":"","date":"8 November 2016","externalUrl":null,"permalink":"/tags/production-data/","section":"Tags","summary":"","title":"Production-Data","type":"tags"},{"content":"","date":"8 November 2016","externalUrl":null,"permalink":"/tags/sql-server/","section":"Tags","summary":"","title":"Sql-Server","type":"tags"},{"content":"","date":"8 November 2016","externalUrl":null,"permalink":"/tags/test-data-transfer-tool/","section":"Tags","summary":"","title":"Test Data Transfer Tool","type":"tags"},{"content":"","date":"8 November 2016","externalUrl":null,"permalink":"/tags/field-events/","section":"Tags","summary":"","title":"Field Events","type":"tags"},{"content":"","date":"8 November 2016","externalUrl":null,"permalink":"/tags/modifiedfield/","section":"Tags","summary":"","title":"Modifiedfield","type":"tags"},{"content":"","date":"8 November 2016","externalUrl":null,"permalink":"/tags/table-methods/","section":"Tags","summary":"","title":"Table Methods","type":"tags"},{"content":"We use modifiedField() method to perform any actions after the field is modifed for example creating new table with 2 fields ItemId and ItemNameDisplay from Extended Data Types node in AOT then Override modifiedField() in Table\u0026rsquo;s method node, something likes:\npublic void modifiedField(FieldId _fieldId) { InventTable inventTable; super(_fieldId); switch (_fieldId) { case fieldNum(IBD_Invent,itemid): this.ItemNameDisplay = inventTable::find(this.itemid).NameAlias; break; } } The modifiedField() method is located on tables and it is called by a form (or a dataset) when any field is changed. It has field ID as a parameter and therefore it is very easy to write code reacting to a change of a particular field. It is so easy that the modifiedField() method is often used even in such cases, when it really shouldn’t be used.\nIf you want to get previous field value in the modifiedField() for comparative purpose, you can use this.orig() method:\npublic void modifiedField(fieldId _fieldId) { super(_fieldId); info(strfmt(\u0026#34;Field number %1 changed from %2 to %3\u0026#34;,_fieldId,this.orig().(_fieldId),this.(_fieldId))); } ","date":"8 November 2016","externalUrl":null,"permalink":"/posts/understanding-modifedfield-table-method-finops/","section":"Posts","summary":"Learn how to use the modifiedField() table method in D365 Finance Operations to handle field change events, with practical X++ code examples and best practices.","title":"Understanding modifiedField() Table method in Dynamics 365 Finance Operations","type":"posts"},{"content":"","date":"7 October 2016","externalUrl":null,"permalink":"/tags/expressions/","section":"Tags","summary":"","title":"Expressions","type":"tags"},{"content":"Expressions are usually used for appearance of the data in a report, change properties of the fields, calculate some values and display them in a proper way, compares values between data of fields and then display them.\nTypes of Expressions # We have 3 types:\nGlobals Operators - Arithmetic, Comparison,Concatenation, Logical Common Functions - Text, Date \u0026amp; Time, Math, Inspection, Program Flow, Aggregate, Financial, Conversion, Miscellaneous We can see each and every one very deataily\n1. Globals # Global expressions executes/works in Page Header and Footer parts only.\nExecutionTime Shows date and time at when report executes\nPageNumber shows page number of each and every page but allowed only in page header and footer\nReportName displays name of the active report what name we have assigned to the active report\nUserId shows current user name like company/userID\nLanguage displays language like US-English…\n2. Operators # Arithmetic # ^ power of\n*multiplication\n/ divides two numbers and returns a floating point result\n: divides two numbers and returns a integer result\nMod divides two numbers and returns remainder only\nadds two numbers and concatenation for two strings\n- subtraction and indicates negative value for numeric values\nComparison # Known operators : \u0026lt; \u0026lt;= \u0026gt; \u0026gt;= \u0026lt;\u0026gt;\nLike compares two strings and return true if matched or else returns False.\nEx: =Fields!Title.Value Like Fields!LoginID.Value\nIs compare two object reference variables\nEx: =Fields!Title.Value Is Null\nConcatenation # + and \u0026amp; symbols uses for concatenation\nLogical # Known: And, Not, Or, Xor\nSELECT * FROM users where firstname = \u0026#39;Larry\u0026#39; XOR lastname = \u0026#39;Smith\u0026#39;` AndAlso First condition will check first and if it is true only, goes to next or else it won\u0026rsquo;t need to check. Because our execution time is saving in a logical operation in which more conditions is combined using AndAlso function.\nOrElse same like above\n3. Common Functions # Text # Asc, AscW returns an integer value represents character code corresponding to a character.\nChr, chrw returns the character associated with the specified character code\nFilter =Filter(Fields!Title.Value,\u0026ldquo;Pr\u0026rdquo;,true,0)\nFormat=Format(Fields!Price.Value, \u0026ldquo;#,##0.00\u0026rdquo;), Format(Fields!Date.Value, \u0026ldquo;yyyy-MM-dd\u0026rdquo;)\nFormatCurrency =formatcurrency(Fields!SickLeaveHours.Value,3)\nFormatDateTime =FormatDateTime(Fields!BirthDate.Value,Integer)\nEx:\n0 returns 6/3/1977\n1 returns Friday, June 03, 1977\n2 returns 6/3/1977\n3 returns 12:00:00AM\n4 returns 00:00\nFormatNumber =FormatNumber(Fields!EmployeeID.Value,2), then result is 2.00\nFormatPercent =\u0026ldquo;Percentage : \u0026quot; \u0026amp; formatpercent(Fields!SickLeaveHours.Value)\nGetChar =GetChar(Fields!Title.Value,5)\nInStr =InStr(Fields!Title.Value,\u0026ldquo;a\u0026rdquo;)\nInStrRev =Instrrev(Fields!Title.Value,\u0026ldquo;a\u0026rdquo;)\nLCase =Lcase(Fields!Title.Value), Change strings into lower case\nLeft =Left(Fields!Title.Value,4), Returns left side characters from a string\nLen =Len(Fields!Title.Value), Finds length of a string\nLSet =Lset(Fields!Title.Value,5), Returns some length of a string from left\nLTrim =Ltrim(\u0026rdquo; \u0026ldquo;\u0026amp;Fields!Title.Value), Trim left side of a string\nMid =Mid(Fields!Title.Value,InSTrRev(Fields!Title.Value,\u0026ldquo;T\u0026rdquo;)), Returns characters from the mentioned starting position\nReplace =Replace(Fields!Title.Value,\u0026ldquo;a\u0026rdquo;,\u0026ldquo;A\u0026rdquo;), Replaces one string with another\nRight =Right(Fields!Title.Value,10), Returns right side characters from a string\nRSet =Rset(Fields!Title.Value,5),Returns some length of a string from left\nRTrim =Rtrim(Fields!Title.Value \u0026amp; \u0026quot; \u0026ldquo;), Trim left side of a string\nSpace =Fields!Title.Value \u0026amp; Space(5) \u0026amp; Fields!Title.Value, Specifies some spaces within strings\nStrComp Returns a value indicating the result of a string comparison\nvbBinaryCompare 0 Perform a binary comparison.\nvbTextCompare 1 Perform a textual comparison.\nstring1 is less than string2 -1\nstring1 is equal to string2 0\nstring1 is greater than string2 1\nstring1 or string2 is Null Null\nStrConv\n=Strconv(Fields!Title.Value,vbProperCase)\n=Strconv(Fields!Title.Value,vbLowerCase)\n=Strconv(Fields!Title.Value,vbUpperCase)\nStrDup =StrDup(3,\u0026ldquo;M\u0026rdquo;), Returns a string or object consisting of the specified character repeated the specified number of times.\nStrReverse =StrReverse(Fields!Title.Value)\nTrim =Trim(\u0026rdquo; \u0026ldquo;\u0026amp; Fields!Title.Value \u0026amp; \u0026quot; \u0026ldquo;)\nUCase =Ucase(Fields!Title.Value)\nDate \u0026amp; Time # CDate Converts a object into date format\n=Format(CDate(Fields!BirthDate.Value),\u0026ldquo;MMMM yyyy\u0026rdquo;)\nDateAdd Returns a datetime that is the result of adding the specified number of time interval units to the original datetime.\n=dateadd(\u0026ldquo;m\u0026rdquo;,12,Fields!BirthDate.Value)\nDateDiff Find number of days, months and years between two dates\n=datediff(\u0026ldquo;d\u0026rdquo;,Fields!BirthDate.Value,Now)\nDatePart DatePart(DateInterval.Weekday, CDate(\u0026ldquo;2009/11/13\u0026rdquo;), FirstDayOfWeek.Monday) returns 5 (Friday)\nDateSerial for first day of the month\n=DateSerial(Year(Now), Month(Now), 1)\nfor the last day of the month\n=DateSerial(Year(Now), Month(Now)+1, 0) DateString Returns string value of system date\n=datestring()\nDateValue Returns current date\nDay Returns day value from date\n=day(Fields!BirthDate.Value)\nFormatDateTime =FormatDateTime(Fields!BirthDate.Value,Integer) Examples: 0 returns 6/3/1977\n1 returns Friday, June 03, 1977\n2 returns 6/3/1977\n3 returns 12:00:00AM\n4 returns 00:00\nHour =Hour(Fields!BirthDate.Value)\nMinute =Minute(Fields!BirthDate.Value)\nMonth =Month(Fields!BirthDate.Value)\nMonthName =MonthName(Month(Fields!BirthDate.Value))\nNow Indicates current month\n=Now() or =Now\nSecond =Second(Fields!BirthDate.Value)\nTimeOfDay =TimeOfDay()\nReturns a date value containing the current time of day according to your system\nTimer =Timer() Returns number of seconds elapsed since midnight\nTimeSerial =TimeSerial(24,60,60)\nReturns a date value representing a specified hour, minute and second\nTimeString =TimeString()\nReturns string value representing the current time of day according to your system\nTimeValue Returns a date value set to jan 1 of year 1\n=TimeValue(Fields!BirthDate.Value)\nToday Returns Current date\nWeekday Returns an integer value representing day of week\n=WeekDay(Fields!BirthDate.Value)\nWeekdayName =WeekdayName(Weekday(Fields!BirthDate.Value))\nReturns name of the day of week\nYear =year(Fields!BirthDate.Value)\nReturns year of specified date\nMath # Abs=Abs(-2.36)\nReturns the absolute value\nBigMul =BigMul(2,3)\nReturns multiplication value of two specified numbers\nCeiling =Ceiling(2.67)\nReturns next highest value\nCos=Cos(2.33)\nReturns cos value for specified number\nCosh=Cosh(2.33) Returns hyperbolic cos value\nDivRem=DivRem(23,2,5)\nFix=Fix(23.89)\nReturns integer portion\nFloor=Floor(24.54)\nReturns largest integer\nInt=Int(24.78)\nReturns integer portion of a number\nLog=Log(24.78)\nReturns logarithm value\nLog10=Log10(24.78)\nReturns the base 10 logaritm value\nMax=Max(Fields!EmployeeID.Value)\nReturns larger value in the specified values\nMin=Min(Fields!EmployeeID.Value)\nReturns smaller value in the specified values\nPow=Pow(Fields!EmployeeID.Value,2)\nReturns power of value for specified number\nRnd=Rnd()\nReturns a random number\nRound=Round(43.16)\nReturns rounded value to the nearest integer\nSign=Sign(-34534543)\nSin=Sin(Fields!EmployeeID.Value) Returns the sin value\nSinh=Sinh(Fields!EmployeeID.Value) Returns the hyperbolic sin value\nInspection # IsArray =IsArray(Fields!EmployeeID.Value)\nReturns a boolean value indicating whether the specified object is array or not\nIsDate =IsDate(Fields!BirthDate.Value)\nReturns a boolean value indicating whether the specified object is Date or not\nIsNothing =IsNothing(Fields!EmployeeID.Value)\nReturns a boolean value depends on specified object is Nothing or not\nIsNumeric =IsNumeric(Fields!EmployeeID.Value)\nReturns a boolean value depends on specified object is Numeric value or not\nProgram Flow # Choose =CHOOSE(3, \u0026quot;Red\u0026quot;, \u0026quot;Yellow\u0026quot;, \u0026quot;Green\u0026quot;, \u0026quot;White\u0026quot;)\nReturns a specific value using index in a list of arguments\nIIf =IIF(Fields!EmployeeID.Value\u0026gt;10,\u0026quot;Yes\u0026quot;,\u0026quot;No\u0026quot;)\nReturns any one value depends on condition\nSwitch =Switch(Fields!EmployeeID.Value\u0026lt;10,\u0026quot;Red\u0026quot;,Fields!EmployeeID.Value\u0026gt;10,\u0026quot;Green\u0026quot;)\nEvaluates list of expressions\nAggregate # Avg =Avg(Fields!EmployeeID.Value)\nReturns average value for all specified values\nCount =Count(Fields!EmployeeID.Value)\nReturns count of all specified values\nCountDistinct =CountDistinct(Fields!EmployeeID.Value)\nReturns count of all distinct values\nCountRows =CountRows()\nReturns count of rows\nFirst =First(Fields!EmployeeID.Value)\nReturns first for all specified values\nLast =Last(Fields!EmployeeID.Value)\nReturns last for all specified values\nMax =Max(Fields!EmployeeID.Value)\nReturns max for all specified values\nMin =Min(Fields!EmployeeID.Value)\nReturns min for all specified values\nStDev =StDev(Fields!EmployeeID.Value)\nReturns standard deviation value\nStDevP =StDevP(Fields!EmployeeID.Value)\nReturns Population standard deviation value\nSum =Sum(Fields!EmployeeID.Value)\nReturns sum of all values\nVar =Var(Fields!EmployeeID.Value)\nReturns variance of all values\nVarP =Var(Fields!EmployeeID.Value)\nReturns population variance of all values\nRunningValue =RunningValue(Fields!EmployeeID.Value,sum,nothing)\nReturns running aggregate of the specified expression\nFinancial # DDB DDB (Double Declining Balance) method computes depreciation of an asset for a specified period.\nSyntax: DDB (Cost, Salvage, life, period, factor)\nFV FV (Future Value) of an investment based on periodic, constant payments and a constant interest rate.\nSyntax: FV (rate, nper, pmt, pv, type)\nIPmt IPmt (Interest Payment) for a given period for an investment based on periodic, constant payment and a constant interest rate\nIPMT (rate, per, nper, pv, fv, type)\nIRR IRR (Interest Rate of Return) for a series of cash flows represented by the numbers in values.\nIRR(values,guess)\nMIRR MIRR ( Modified internal rate of return ) for a series of periodic cash flows\nMIRR(values,finance_rate,reinvest_rate)\nNPer Returns the number of periods for an investment based on periodic, constant payments and a constant interest rate.\nNPER (rate, pmt, pv, fv, type)\nNPV Calculates the net present value of an investment by using a discount rate and a series of future payments (negative values) and income (positive values).\nSyntax: NPV(rate,value1,value2, ...)\nPmt Calculates the payment for a loan based on constant payments and a constant interest rate.\nPMT(rate,nper,pv,fv,type)\nPPmt Returns the payment on the principal for a given period for an investment based on periodic, constant payments and a constant interest rate.\nPPMT(rate,per,nper,pv,fv,type)\nPV Returns the present value of an investment. The present value is the total amount that a series of future payments is worth now. For example, when you borrow money, the loan amount is the present value to the lender.\nPV(rate,nper,pmt,fv,type)\nRate Returns the interest rate per period of an annuity. RATE is calculated by iteration and can have zero or more solutions.\nRATE(nper,pmt,pv,fv,type,guess)\nSLN Returns the straight-line depreciation of an asset for one period.\nSLN(cost,salvage,life)\nSYD Returns the sum-of-years\u0026rsquo; digits depreciation of an asset for a specified period. SYD(cost,salvage,life,per)\nConversion # CBool Convert to boolean\nCByte Convert to byte\nCChar Convert to char\nCDate Convert to date\nCDbl Convert to double\nCDec Convert to decimal\nCInt Convert to integer\nCLng Convert to long\nCObj Convert to object\nCShort Convert to short\nCSng Convert to single\nCStr Convert to string\nHex =Hex(Fields!EmployeeID.Value)\nReturns a hexadecimal value of a number\nInt =Int(43.44)\nReturns integer portion of a number\nOct =Oct(Fields!EmployeeID.Value)\nReturns a octal value of a number\nStr =Str(Fields!EmployeeID.Value)\nReturns string value of a number\nVal =Val(\u0026quot;32.43\u0026quot;)\nReturns numeric value in string format\nMiscellaneous # Previous =Previous(Fields!EmployeeID.Value)\nReturns the previous value\n","date":"7 October 2016","externalUrl":null,"permalink":"/posts/ssrs-sql-server-reporting-services-expressions-or-functions-used-in-ssrs/","section":"Posts","summary":"Comprehensive reference guide covering all SSRS expressions and functions including globals, operators, text, date/time, math, and aggregate functions for SQL Server Reporting Services.","title":"Expressions or Functions used in SSRS","type":"posts"},{"content":"","date":"7 October 2016","externalUrl":null,"permalink":"/tags/reference/","section":"Tags","summary":"","title":"Reference","type":"tags"},{"content":"Sometime we need this RecId value in DimansionAttributeValueCombination Table for some reasons likes putting new dimension in LedgerDimension field in LedgerJournalTrans Table, or somewhere else.\nSuppose my Account structure likes: MainAcct - Dept - Woker - SubAcct - Item, you can custom base on your struture.\nThis code is for creating a record into DimansionAttributeValueCombination in code and then get RecID of this.\nstatic void createDimensionAttributeValueCombination(Args _args) { DimensionAttributeValueContract ValueContract; DimensionAttributeValueCombination davc; MainAccount valueMainAccount; DimensionStorage dimStorage; DimensionServiceProvider DimensionServiceProvider = new DimensionServiceProvider(); LedgerAccountContract LedgerAccountContract = new LedgerAccountContract(); List ListValueContract = new List(Types::Class); // Get main account with structure : Mainacct - DE - woker - subacct - item valueMainAccount = MainAccount::findByMainAccountId(\u0026#39;910001\u0026#39;); //Get main account ValueContract = new DimensionAttributeValueContract(); ValueContract.parmName(\u0026#39;Department\u0026#39;) ; ValueContract.parmValue(\u0026#39;6020\u0026#39;); //Value for dimension Department ListValueContract.addEnd(ValueContract); ValueContract = new DimensionAttributeValueContract(); ValueContract.parmName(\u0026#39;Worker\u0026#39;) ; ValueContract.parmValue(\u0026#39;000001\u0026#39;); //Value for dimension ExpenseCode ListValueContract.addEnd(ValueContract); ValueContract = new DimensionAttributeValueContract(); ValueContract.parmName(\u0026#39;SubAcct\u0026#39;) ; ValueContract.parmValue(\u0026#39;교보생명\u0026#39;); //Value for dimension Project ListValueContract.addEnd(ValueContract); ValueContract = new DimensionAttributeValueContract(); ValueContract.parmName(\u0026#39;Item\u0026#39;) ; ValueContract.parmValue(\u0026#39;110329\u0026#39;); //Value for dimension Project ListValueContract.addEnd(ValueContract); LedgerAccountContract.parmMainAccount(valueMainAccount.MainAccountId); LedgerAccountContract.parmValues(ListValueContract); //if combination is not exist then create new one dimStorage = DimensionServiceProvider::buildDimensionStorageForLedgerAccount(LedgerAccountContract); davc = DimensionAttributeValueCombination::find(dimStorage.save()); info(strFmt(\u0026#34;RecId : %1 - DisplayValue : %2\u0026#34;, davc.RecId, davc.DisplayValue)); } or you can use this way\nstatic void createDimension(Args _args) { Struct struct = new Struct(); container financialDimension; LedgerDimensionAccount legder; //// Get main account with structure : Mainacct - DE - woker - subacct - item struct.add(\u0026#39;Department\u0026#39;, \u0026#39;6020\u0026#39;); struct.add(\u0026#39;Item\u0026#39;, \u0026#39;220006\u0026#39;); struct.add(\u0026#39;SubAcct\u0026#39;, \u0026#39;Max test account\u0026#39;); struct.add(\u0026#39;Worker\u0026#39;, \u0026#39;000002\u0026#39;); financialDimension += struct.fields(); financialDimension += struct.fieldName(1); financialDimension += struct.valueIndex(1); financialDimension += struct.fieldName(2); financialDimension += struct.valueIndex(2); financialDimension += struct.fieldName(3); financialDimension += struct.valueIndex(3); financialDimension += struct.fieldName(4); financialDimension += struct.valueIndex(4); legder = DimensionDefaultingService::serviceCreateLedgerDimension( DimensionStorage::getDefaultAccountForMainAccountNum(\u0026#34;910001\u0026#34;), AxdDimensionUtil::getDimensionAttributeValueSetId(financialDimension)); info(strFmt(\u0026#34;%1\u0026#34;,legder)); } ","date":"5 July 2016","externalUrl":null,"permalink":"/posts/create-record-in-dimensionattributevaluecombination-manually/","section":"Posts","summary":"X++ code examples to manually create records in DimensionAttributeValueCombination table for financial dimensions in Dynamics AX 2012. Two different approaches using DimensionServiceProvider and DimensionDefaultingService.","title":"Create record in DimensionAttributeValueCombination table manually","type":"posts"},{"content":"","date":"5 July 2016","externalUrl":null,"permalink":"/tags/dimensions/","section":"Tags","summary":"","title":"Dimensions","type":"tags"},{"content":"","date":"5 July 2016","externalUrl":null,"permalink":"/tags/ledger/","section":"Tags","summary":"","title":"Ledger","type":"tags"},{"content":"If you want to list items come along with their Actvie Dimension, you can do it easily with this simple job\ncs inventTable; InventDimParm inventDimParm; inventTable = InventTable::find(\u0026#39;110924\u0026#39;); inventDimParm = InventDimParm::activeDimFlag(InventDimGroupSetup::newInventTable(inventTable)); if(inventDimParm.InventSiteIdFlag) { info(\u0026#34;Site Actived\u0026#34;); } ","date":"17 January 2016","externalUrl":null,"permalink":"/posts/how-to-verify-active-inventory-dimensions-on-an-item/","section":"Posts","summary":"Simple X++ code example to verify which inventory dimensions are active on an item in Dynamics AX 2012. Use InventDimParm and InventDimGroupSetup to check dimension settings.","title":"How to verify active inventory dimensions on an item","type":"posts"},{"content":"","date":"17 January 2016","externalUrl":null,"permalink":"/tags/integrated-security/","section":"Tags","summary":"","title":"Integrated-Security","type":"tags"},{"content":"","date":"17 January 2016","externalUrl":null,"permalink":"/tags/inventdim/","section":"Tags","summary":"","title":"Inventdim","type":"tags"},{"content":"I updated my dynamics Ax development Environment by restoring Database from Production Database.\nAfter the restoring the database, when I run any report form Dynamics Ax, there is an error Only integrated security is supported for AX queries. Checking the SSRS is working fine.\nThe solution is to redeploy the reports, create a new report folder, open Microsoft Dynamics Ax 2012 Management Shell (make sure you run Powershell as Administrator). Publish-AXReport -ReportName *\n","date":"17 January 2016","externalUrl":null,"permalink":"/posts/only-integrated-security-is-supported-for-ax-queries/","section":"Posts","summary":"Fix \u0026ldquo;Only integrated security is supported for AX queries\u0026rdquo; error when running reports in Dynamics AX 2012 after database restore. Solution involves redeploying reports using PowerShell Publish-AXReport command.","title":"Only integrated security is supported for AX queries","type":"posts"},{"content":"","date":"15 January 2016","externalUrl":null,"permalink":"/tags/report-server/","section":"Tags","summary":"","title":"Report Server","type":"tags"},{"content":"Recently I updated my dynamics Ax development Environment by restoring Database from Production Dynamics AX DB and I got this problem\nMake sure that SQL Server Reporting Services is configured correctly. Verify the Web Service URL and Report Manager URL configuration in the SQL Reporting Services Configuration Manager.\nThe reporting Services are still working fine and I have already granted the AX Admin as System Administrator under site settings, Home folder settings and DynamicsAX folder with Browser, Content Manager, DynamicsAXBrowser, My Reports, Publisher, Report Builder roles.\nSolution is we need disable UAC (I\u0026rsquo;m using Windows Server 2012 R2) by Regedit\nGo to Regedit: HKEY_LOCAL_MACHINESOFTWAREMicrosoftWindowsCurrentVersionpoliciessystem and changing the DWORD EnableLUA from 1 to 0.\nAfter the reboot, UAC is disabled.\n","date":"15 January 2016","externalUrl":null,"permalink":"/posts/ssrs-report-server-settings-validation-error-ax-2012-r3-cu9/","section":"Posts","summary":"Resolve SSRS Report Server settings validation error in Dynamics AX 2012 R3 CU9 by disabling UAC through registry modification. Fix for Web Service URL and Report Manager URL configuration issues.","title":"SSRS Report Server Settings Validation Error- AX 2012 R3 CU9","type":"posts"},{"content":"","date":"15 January 2016","externalUrl":null,"permalink":"/tags/uac/","section":"Tags","summary":"","title":"UAC","type":"tags"},{"content":"","date":"7 January 2016","externalUrl":null,"permalink":"/tags/data-source/","section":"Tags","summary":"","title":"Data-Source","type":"tags"},{"content":"","date":"7 January 2016","externalUrl":null,"permalink":"/tags/jointype/","section":"Tags","summary":"","title":"Jointype","type":"tags"},{"content":" Link Type # Active: Parent and child data source is updated immediately when a new record in the parent data source is selected. Continuous updates consume lots of resources consuming.\nDelayed: Parent and child A pause is inserted before linked child data sources are updated. This enables faster navigation in the parent data source because the records from child data sources are not updated immediately.\nFor example, you can scroll a list of orders where you do not want to review the lines associated with the order until you stop scrolling.\nPassive: Parent and child Linked child data sources are not updated automatically. Updates of the child data source must be programmed on the active() method of the master data source.\nJoin Types # InnerJoin Combined data source select the record from the main table that matches records in the joined table and vice versa.\n//X++ select AccountNum from custTable join TaxGroupId from custGroup where custGroup.CustGroup == custTable.CustGroup; //CROSS JOIN in T-SQL: SELECT T1.ACCOUNTNUM, T1.RECID, T2.TAXGROUPID, T2.RECID FROM CUSTTABLE T1 CROSS JOIN CUSTGROUP T2 WHERE ((T1.PARTITION=?) AND (T1.DATAAREAID=?)) AND (((T2.PARTITION=?) AND (T2.DATAAREAID=?)) AND (T2.CUSTGROUP=T1.CUSTGROUP)) There is one record for each match. Records without related records in the other data source are eliminated from the result.\nOuter Join: Combined data source select the records from the main table. The records are retrieved whether they have matching records in the joined table\n//X++: select AccountNum from custTable outer join AccountID from custBankAccount where custBankAccount.CustAccount == custTable.AccountNum; //LEFT OUTER JOIN in T-SQL: SELECT T1.ACCOUNTNUM, T1.RECID, T2.ACCOUNTID, T2.RECID FROM CUSTTABLE T1 LEFT OUTER JOIN CUSTBANKACCOUNT T2 ON (((T2.PARTITION=?) AND (T2.DATAAREAID=?)) AND (T1.ACCOUNTNUM=T2.CUSTACCOUNT)) WHERE ((T1.PARTITION=?) AND (T1.DATAAREAID=?)) Exist Join: Combined data sourceThe data source retrieves a record from the main table for each matching record in the joined table.\n//X++: select AccountNum from custBankAccount exists join custTable where custBankAccount.CustAccount == custTable.AccountNum; //EXISTS (SELECT \u0026#39;x\u0026#39;...) in T-SQL: SELECT T1.ACCOUNTNUM, T1.RECID FROM CUSTBANKACCOUNT T1 WHERE ((T1.PARTITION=?) AND (T1.DATAAREAID=?)) AND EXISTS (SELECT \u0026#39;x\u0026#39; FROM CUSTTABLE T2 WHERE (((T2.PARTITION=?) AND (T2.DATAAREAID=?)) AND (T1.CUSTACCOUNT=T2.ACCOUNTNUM))) The differences between InnerJoin and ExistJoin are as follows:\nWhen the join type is ExistJoin, the search ends after the first match has been found.\nWhen the join type is InnerJoin, all matching records are searched for.\nNotExistJoin: Combined data source Select records from the main table that do not have a match in the joined table.\n","date":"7 January 2016","externalUrl":null,"permalink":"/posts/link-type-and-join-types-in-ax-2012/","section":"Posts","summary":"Comprehensive guide to Link Types (Active, Delayed, Passive) and Join Types (InnerJoin, OuterJoin, ExistJoin, NotExistJoin) in Dynamics AX 2012. Learn data source relationships and SQL query patterns.","title":"Link Type and Join Types in AX 2012","type":"posts"},{"content":"","date":"7 January 2016","externalUrl":null,"permalink":"/tags/linktype/","section":"Tags","summary":"","title":"Linktype","type":"tags"},{"content":"","date":"30 December 2015","externalUrl":null,"permalink":"/tags/conditional-logic/","section":"Tags","summary":"","title":"Conditional Logic","type":"tags"},{"content":"This blog post is show how to apply OR conditions in query build ranges in a simple way on same field in a table. Let\u0026rsquo;s see the simple query :\nselect * from CustTable where AccountNum == \u0026#39;2001\u0026#39; || AccountNum == \u0026#39;2002\u0026#39; We can find out solutions on MSDN by using expression in query ranges, but as it has lot of specifications which needs to be followed. However there is a simple way to do it :\nstatic void Job12(Args _args) { CustTable cust; Query query = new Query(); QueryBuildDataSource qbds; QueryBuildRange queryRange1, queryRange2; qbds = query.addDataSource(tableNum(CustTable)); queryRange1 = qbds.addRange(fieldNum(CustTable, AccountNum)); queryRange1.value(\u0026#39;1168201\u0026#39;); queryRange2 = qbds.addRange(fieldNum(CustTable, AccountNum)); queryRange2.value(\u0026#39;9034518\u0026#39;); qbds.addRange(fieldNum(CustTable, createdDateTime)); queryRange1.value(queryValue(dateNull()); qbds.addRange(fieldNum(CustTable, createdDateTime)); queryRange1.value(queryRange(today()+1, dateMax())); info(qbds.toString()); } Result in string format as below image:\nSELECT * FROM CustTable(CustTable_1) WHERE ((AccountNum = N\u0026#39;1168201\u0026#39;) OR (AccountNum = N\u0026#39;9034518\u0026#39;)) Ref: https://learn.microsoft.com/en-us/dynamicsax-2012/developer/using-expressions-in-query-ranges?redirectedfrom=MSDN\n","date":"30 December 2015","externalUrl":null,"permalink":"/posts/how-to-use-operator-in-querybuildrange/","section":"Posts","summary":"Learn how to implement OR operator logic in QueryBuildRange for Dynamics AX 2012. Simple method to create multiple range conditions on the same field without complex expressions.","title":"How to use operator OR in QueryBuildRange","type":"posts"},{"content":"","date":"30 December 2015","externalUrl":null,"permalink":"/tags/or-operator/","section":"Tags","summary":"","title":"Or Operator","type":"tags"},{"content":" Scenario: # I have 2 AOS AX (maybe same in one server or different servers), but only one server for reporting server (I will install and configure multiple SRS instances in this server). Thing is how can we install and configure 2 SSRS instances on same server and running for 2 AOS.\nTwo SSRS instance are running same server Problems: # First you need to install 2 SSRS instance in same server, and install reporting service component for first AOS, this step is very simple. The problems come when we install second reporting service component for second AOS.\nReporting service component uses business connector to connect to AX, and it\u0026rsquo;s saved on configuration in Registry. When we install second reporting service component it will through message that component already installed.\nHow to do: # After installed second instance into C:\\Program Files\\Microsoft SQL Server\\MSRS12.InstanceName\\Reporting Services\\ReportServer\\bin, we need to create one Dynamics.AX.ReportConfiguration.axc file by AX configuration client with second AOS information. Open MS Dyanmics AX Management Shell, run command below: Install-AXReportInstanceExtensions –ReportServerInstanceName [SSRSInstanceName] -Credential [DomainNameUserName]\nGo to C:\\Program Files\\Microsoft SQL Server\\MSRS12.SecondInstance\\Reporting Services\\ReportServer fix fileconfi with value from Execution to FullTrust how-to-install-2-instances-ssrs-on-1-server-4 After this, remember restart reporting services.\nhow-to-install-2-instances-ssrs-on-1-server-6 From now on, you can run 2 AX reporting instance in same server.\n","date":"16 December 2015","externalUrl":null,"permalink":"/posts/how-to-install-2-instances-ssrs-on-1-server/","section":"Posts","summary":"Complete guide to install and configure two SSRS instances on one server for multiple AX 2012 environments. Includes configuration steps, registry changes, and PowerShell commands for proper setup.","title":"How to install two instances SSRS on one server","type":"posts"},{"content":"","date":"16 December 2015","externalUrl":null,"permalink":"/tags/instances/","section":"Tags","summary":"","title":"Instances","type":"tags"},{"content":"When you try connecting between TFS and Dynamics AX CU8, CU9 and you got error like this:\nError: Team Foundation services are not available from server ****.visualstudio.com/defaultcollection.\nTechnical information (for administrator):\nTF400813: Resource not available for anonymous access. Client authentication required.\nError: Could not load file or assembly 'Microsoft.TeamFoundation.Client, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\nClient computers that are not running Visual Studio 2010 must have the Team Foundation Server 2010 SP1 Object Model installed to use TFS source control with Microsoft Dynamics AX.\nTFS support TFS 2010, TFS 2012, TFS 2013 and TFS online, but to connect to these from AX you will need TFS 2010 object model Sp1 which is client to connect to server.\nAfter install Team Foundation Server 2010 SP1 Object Model above. Client computers that are not running Visual Studio 2010 must have hotfix KB 2662296 installed to use TFS source control with Microsoft Dynamics AX.\nOnce you have installed the above ,restart your AOS and open AX client again, then try to check-in some Jobs.\n","date":"20 November 2015","externalUrl":null,"permalink":"/posts/ax-2012-r3-cu8-cu9-and-tfs-online-2013-error/","section":"Posts","summary":"Fix TFS connectivity issues in Dynamics AX 2012 R3 CU8/CU9 with TFS Online 2013. Solution requires installing Team Foundation Server 2010 SP1 Object Model and hotfix KB2662296.","title":"AX 2012 R3 CU8 CU9 and TFS Online 2013 Error","type":"posts"},{"content":"","date":"20 November 2015","externalUrl":null,"permalink":"/tags/tfs/","section":"Tags","summary":"","title":"Tfs","type":"tags"},{"content":"Scenario: Normally when we open form for the first time in Dynamics AX, it will take sometimes to compilte and cache into AOS. That\u0026rsquo;s why at second time always faster. If we often restart AOS, how can we keep performance ?\nSolution: After restart AOS we can let some scripts run to open up some often used forms then cache to AOS, then close those forms.\nHere is the code\nstatic void WarmupRF(Args _args) { UtilElements e; TreeNode treeNode; FormRun formRun; Args args = new Args(); while select e where e.utilLevel == UtilEntryLevel::var //\u0026lt;-- specify layer here \u0026amp;\u0026amp; e.recordType == UtilElementType::Form //\u0026lt;-- and only forms \u0026amp;\u0026amp; e.name like \u0026#34;nameofformPrefix\u0026#34; { try { treeNode = xUtilElements::getNodeInTree(xUtilElements::parentElement(e)); args.name(treeNode.AOTname()); formRun = ClassFactory.formRunClass(args); formRun.init(); //formRun.run(); //\u0026lt;-- No need to run the form, but sometimes it can load the data formRun.close(); } catch { Infolog.clear(); continue; } } } ","date":"17 November 2015","externalUrl":null,"permalink":"/posts/caching-form-into-aos-to-increase-performance-for-dynamics-ax/","section":"Posts","summary":"Improve Dynamics AX performance by pre-loading and caching frequently used forms into AOS after server restarts. X++ script to automatically warm up forms and reduce first-load compilation time.","title":"Caching form into AOS to increase performance for Dynamics AX","type":"posts"},{"content":"To make something as the LIKE operator in a query, just assign a value to the QueryRange including a wildcard.\nstatic void QueryBuildRange_Sample(Args _args) { Query query = new Query(); QueryRun queryRun; QueryBuildDataSource qbds; QueryBuildRange queryRange; CustTable custTable; qbds.addDataSource(tableNum(CustTable)); queryRange = qbds.addRange(fieldNum(CustTable, AccountNum)); queryRange.value(\u0026#34;axd*\u0026#34;); queryRun = new QueryRun(query); while(queryRun.next()) { custTable = queryRun.get(tableNum(CustTable)); print custTable.AccountNum; } pause; } ","date":"13 November 2015","externalUrl":null,"permalink":"/posts/how-to-use-like-operator-in-querybuildrange/","section":"Posts","summary":"Learn how to implement LIKE operator functionality in QueryBuildRange using wildcards in Dynamics AX 2012. Complete X++ example for pattern matching in database queries.","title":"How to use LIKE operator in QueryBuildRange","type":"posts"},{"content":"","date":"13 November 2015","externalUrl":null,"permalink":"/tags/like-operator/","section":"Tags","summary":"","title":"Like Operator","type":"tags"},{"content":"","date":"13 November 2015","externalUrl":null,"permalink":"/tags/wildcard/","section":"Tags","summary":"","title":"Wildcard","type":"tags"},{"content":"","date":"3 November 2015","externalUrl":null,"permalink":"/tags/alter-database/","section":"Tags","summary":"","title":"Alter-Database","type":"tags"},{"content":"","date":"3 November 2015","externalUrl":null,"permalink":"/tags/combobox/","section":"Tags","summary":"","title":"Combobox","type":"tags"},{"content":"","date":"3 November 2015","externalUrl":null,"permalink":"/tags/default-values/","section":"Tags","summary":"","title":"Default Values","type":"tags"},{"content":"","date":"3 November 2015","externalUrl":null,"permalink":"/tags/form-controls/","section":"Tags","summary":"","title":"Form Controls","type":"tags"},{"content":"","date":"3 November 2015","externalUrl":null,"permalink":"/tags/management-studio/","section":"Tags","summary":"","title":"Management-Studio","type":"tags"},{"content":"","date":"3 November 2015","externalUrl":null,"permalink":"/tags/rename/","section":"Tags","summary":"","title":"Rename","type":"tags"},{"content":" Open Microsoft SQL Server Management Studio.\nConnect to the server where in the DB you want to rename is located.\nModify the following script and run it\n-- Replace all MyDBs with the name of the DB you want to change its name USE [MyDB]; -- Changing Physical names and paths -- Replace all NewMyDB with the new name you want to set for the DB -- Replace \u0026#39;C:...NewMyDB.mdf\u0026#39; with full path of new DB file to be used ALTER DATABASE MyDB MODIFY FILE (NAME = \u0026#39; MyDB \u0026#39;, FILENAME = \u0026#39;C:...NewMyDB.mdf\u0026#39;); -- Replace \u0026#39;C:...NewMyDB_log.ldf\u0026#39; with full path of new DB log file to be used ALTER DATABASE MyDB MODIFY FILE (NAME = \u0026#39; MyDB _log\u0026#39;, FILENAME = \u0026#39;C:...NewMyDB_log.ldf\u0026#39;); -- Changing logical names ALTER DATABASE MyDB MODIFY FILE (NAME = MyDB, NEWNAME = NewMyDB); ALTER DATABASE MyDB MODIFY FILE (NAME = MyDB _log, NEWNAME = NewMyDB_log); Right click on the DB and select Tasks\u0026gt;Take Offline\nGo to the location that MDF and LDF files are located and rename them exactly as you specified in first two alter commands. If you changed the folder path, then you need to move them there.\nGo back to Microsoft SQL Server Management Studio and right click on the DB and select Tasks\u0026gt;Bring Online.\n","date":"3 November 2015","externalUrl":null,"permalink":"/posts/rename-a-database-in-sql-server/","section":"Posts","summary":"Step-by-step guide to rename a database in SQL Server including modifying file paths, logical names, and physical files. Complete process with ALTER DATABASE commands and file management.","title":"Rename a Database in SQL Server","type":"posts"},{"content":"Beside modify metadata on form properties, as best practice we can use code like below to assign default value for combobox.\nYou can use this code in the form\u0026rsquo;s init method after super(): ComboBoxName.selection(ComboBoxName::DefaultValue); If this is a table field we should you best practice overriding the initValue method in the table: this.ComboBoxName = ComboBoxName::DefaultValue; Override initValue in the form\u0026rsquo;s datasource only if it should be a specific behaviour in this form only. ","date":"3 November 2015","externalUrl":null,"permalink":"/posts/defaultvale-combobox-in-x/","section":"Posts","summary":"Learn different methods to set default values for combobox controls in Dynamics AX 2012 forms using X++ code. Best practices for form initialization, table initValue method, and datasource overrides.","title":"Set default value for a comboBox in Dynamics AX 2012 with X++","type":"posts"},{"content":"","date":"3 November 2015","externalUrl":null,"permalink":"/categories/sql/","section":"Categories","summary":"","title":"SQL","type":"categories"},{"content":"","date":"4 August 2015","externalUrl":null,"permalink":"/tags/aos-service/","section":"Tags","summary":"","title":"AOS Service","type":"tags"},{"content":"","date":"4 August 2015","externalUrl":null,"permalink":"/tags/domain-controller/","section":"Tags","summary":"","title":"Domain Controller","type":"tags"},{"content":"","date":"4 August 2015","externalUrl":null,"permalink":"/tags/iis/","section":"Tags","summary":"","title":"IIS","type":"tags"},{"content":"","date":"4 August 2015","externalUrl":null,"permalink":"/tags/sql-server-reporting-services/","section":"Tags","summary":"","title":"SQL Server Reporting Services","type":"tags"},{"content":"","date":"4 August 2015","externalUrl":null,"permalink":"/tags/web-services/","section":"Tags","summary":"","title":"Web Services","type":"tags"},{"content":"When I try to install Web Services on IIS for Retails POS Component, and I got the problem.\nThis scenario shouldn\u0026rsquo;t be common in a production environment, but, it is indeed quite common in a VM machine (I\u0026rsquo;m using virtual machine Hyper-V on Windows 8.1)\nexception_1 exception_2 Exception has been thrown by the target of an invocation\nexception_3 So, the problem is relate to thee AOS Service account, which by default is usually NT AUTHORITYNETWORK SERVICE account.\nexception_4 but because of we are running on a Domain Controller Server, we should use any specific Domain account created just for running AOS services, then you’ll success installing Web Services on IIS.\nNow please restart services and try again.\n","date":"4 August 2015","externalUrl":null,"permalink":"/posts/web-services-on-iis-exception-has-been-thrown-by-the-target-of-an-invocation-ax-installation/","section":"Posts","summary":"Troubleshoot \u0026ldquo;Exception has been thrown by the target of an invocation\u0026rdquo; error when installing Web Services on IIS for AX 2012. Solution involves configuring proper AOS service account on domain controllers.","title":"Web Services on IIS - Exception has been thrown by the target of an invocation","type":"posts"},{"content":"","date":"2 July 2015","externalUrl":null,"permalink":"/tags/extensions/","section":"Tags","summary":"","title":"Extensions","type":"tags"},{"content":"reportManagerWebConfig.ps1\n#Modify the Report Server Web.config file. ie replace MSRS11.VAS with your folder name Set-ExecutionPolicy Unrestricted $webConfig = \u0026#34;C:Program FilesMicrosoft SQL ServerMSRS11.VASReporting ServicesReportManagerWeb.config\u0026#34; $currentDate = (get-date).tostring(\u0026#34;mm_dd_yyyy-hh_mm_s\u0026#34;) # month_day_year - hours_mins_seconds $backup = $webConfig + \u0026#34;_$currentDate\u0026#34; $doc = new-object System.Xml.XmlDocument $doc.Load($webConfig) #save a backup copy $doc.Save($backup) Write-Host \u0026#34;Backup saved as \u0026#34; + $backup $node = $doc.get_DocumentElement().\u0026#34;system.web\u0026#34;.httpRuntime $attribute = $doc.CreateAttribute(\u0026#34;maxRequestLength\u0026#34;) $attribute.set_Value(\u0026#34;100000\u0026#34;) $node.SetAttributeNode($attribute ) $doc.Save($webConfig) Write-Host \u0026#34;1) Modified the Report Manager Web.config file\u0026#34; RsReportServer.ps1\n#Modify the Report Server Web.config file. ie replace MSRS11.VAS with your folder name Set-ExecutionPolicy Unrestricted $version = \u0026#34;6.3.0.0\u0026#34; $webConfig = \u0026#34;C:Program FilesMicrosoft SQL ServerMSRS11.VASReporting ServicesReportServerRsReportServer.config\u0026#34; $currentDate = (get-date).tostring(\u0026#34;mm_dd_yyyy-hh_mm_s\u0026#34;) # month_day_year - hours_mins_seconds $backup = $webConfig + \u0026#34;.xml\u0026#34; #\u0026#34;_$currentDate\u0026#34; $doc = new-object System.Xml.XmlDocument $doc.Load($webConfig) #save a backup copy $doc.Save($backup) Write Write-Host \u0026#34;Backup saved as \u0026#34; + $backup #remove node \u0026#34;RSWindowsNegotiate\u0026#34; $node = $doc.documentElement.SelectSingleNode(\u0026#34;//Configuration/Authentication/AuthenticationTypes/RSWindowsNegotiate\u0026#34;) if ($node) { { $node.ParentNode.RemoveChild($node) Write Write-Host \u0026#34;RSWindowsNegotiate Removed\u0026#34; } #Add node \u0026#34;IsRdceEnabled\u0026#34; $nodeService = $doc.documentElement.SelectSingleNode(\u0026#34;//Configuration/Service\u0026#34;) $nodeIsRdceEnabled = $doc.documentElement.SelectSingleNode(\u0026#34;//Configuration/Service/IsRdceEnabled\u0026#34;) #Set to true if already exists, otherwise create the node if ($nodeIsRdceEnabled) { { $nodeIsRdceEnabled.InnerXml = \u0026#34;True\u0026#34; } else { if ($nodeService) { { $subnodeService = $doc.createElement(\u0026#34;IsRdceEnabled\u0026#34;) $subnodeService.InnerXml = \u0026#34;True\u0026#34; $nodeService.appendChild($subnodeService) Write Write-Host \u0026#34;IsRdceEnabled added\u0026#34; } } #Find Data $nodeCodeAxQuery = $doc.documentElement.SelectSingleNode(\u0026#34;//Configuration/Extensions/Data/Extension[@Name=\u0026#39;AXQUERY\u0026#39;]\u0026#34;) #Add Data Extension if (-not($nodeCodeAxQuery)) { { $nodeData = $doc.documentElement.SelectSingleNode(\u0026#34;//Configuration/Extensions/Data\u0026#34;) if ($nodeData) { { $nodeData.InnerXml = $nodeData.InnerXml + \u0026#34;\u0026lt;Extension Name=\u0026#39;AXQUERY\u0026#39; Type=\u0026#39;Microsoft.Dynamics.Framework.Reports.AxQueryConnection,Microsoft.Dynamics.Framework.ReportsExtensions, Version=\u0026#34; + $version + \u0026#34;, Culture=neutral, PublicKeyToken=31bf3856ad364e35\u0026#39;/\u0026gt; \u0026lt;Extension Name=\u0026#39;AXDATAMETHOD\u0026#39; Type=\u0026#39;Microsoft.Dynamics.Framework.Reports.AxDataMethodConnection,Microsoft.Dynamics.Framework.ReportsExtensions, Version=\u0026#34; + $version + \u0026#34;, Culture=neutral, PublicKeyToken=31bf3856ad364e35\u0026#39;/\u0026gt; \u0026lt;Extension Name=\u0026#39;AXREPORTDATAPROVIDER\u0026#39; Type=\u0026#39;Microsoft.Dynamics.Framework.Reports.AxReportProviderConnection,Microsoft.Dynamics.Framework.ReportsExtensions, Version=\u0026#34; + $version + \u0026#34;, Culture=neutral, PublicKeyToken=31bf3856ad364e35\u0026#39;/\u0026gt; \u0026lt;Extension Name=\u0026#39;AXADOMD\u0026#39; Type=\u0026#39;Microsoft.Dynamics.Framework.Reports.AxAdomdConnection,Microsoft.Dynamics.Framework.ReportsExtensions, Version=\u0026#34; + $version + \u0026#34;, Culture=neutral, PublicKeyToken=31bf3856ad364e35\u0026#39;/\u0026gt; \u0026lt;Extension Name=\u0026#39;AXENUMDATAPROVIDER\u0026#39; Type=\u0026#39;Microsoft.Dynamics.Framework.Reports.EnumProviderConnection,Microsoft.Dynamics.Framework.ReportsExtensions, Version=\u0026#34; + $version + \u0026#34;, Culture=neutral, PublicKeyToken=31bf3856ad364e35\u0026#39;/\u0026gt;\u0026#34; Write-Host \u0026#34;Data Extension added\u0026#34; } } #Find Extensions $nodeExtensions = $doc.documentElement.SelectSingleNode(\u0026#34;//Configuration/Extensions\u0026#34;) $nodeReportDefinitionCustomization = $doc.documentElement.SelectSingleNode(\u0026#34;//Configuration/Extensions/ReportDefinitionCustomization\u0026#34;) if (-not($nodeReportDefinitionCustomization)) { { #Add ReportDefinitionCustomization if ($nodeExtensions) { { $subnodeExt = $doc.createElement(\u0026#34;ReportDefinitionCustomization\u0026#34;) $subnodeExt.InnerXml = \u0026#34;\u0026lt;Extension Name=\u0026#39;AXRDCE\u0026#39; Type=\u0026#39;Microsoft.Dynamics.Framework.Reports.AxRdce.CustomizationExtension,Microsoft.Dynamics.Framework.ReportsExtensions, Version=\u0026#34; + $version + \u0026#34;, Culture=neutral, PublicKeyToken=31bf3856ad364e35\u0026#39;/\u0026gt;\u0026#34; $nodeExtensions.appendChild($subnodeExt) Write Write-Host \u0026#34;ReportDefinitionCustomization added\u0026#34; } } else { $nodeAXRDCE= $doc.documentElement.SelectSingleNode(\u0026#34;//Configuration/Extensions/ReportDefinitionCustomization/Extension [@Name=\u0026#39;AXRDCE\u0026#39;]\u0026#34;) if (-not($nodeAXRDCE)) { { $nodeReportDefinitionCustomization.InnerXml = $nodeReportDefinitionCustomization.InnerXml + \u0026#34;\u0026lt;Extension Name=\u0026#39;AXRDCE\u0026#39; Type=\u0026#39;Microsoft.Dynamics.Framework.Reports.AxRdce.CustomizationExtension,Microsoft.Dynamics.Framework.ReportsExtensions, Version=\u0026#34; + $version + \u0026#34;, Culture=neutral, PublicKeyToken=31bf3856ad364e35\u0026#39;/\u0026gt;\u0026#34; } } $doc.Save($webConfig) Write Write-Host \u0026#34;2) Modified the Report Server Web.config file\u0026#34; text some thing ReportServerRsSrvPolicyConfig.ps1\n#Instructions: Modify the Report Server Web.config file. ie replace MSRS11.VAS with your folder name # Modify version 6.3.0.0 for Dynamics AX 2012 Set-ExecutionPolicy Unrestricted $version = \u0026#34;6.3.0.0\u0026#34; $webConfig = \u0026#34;C:Program FilesMicrosoft SQL ServerMSRS11.VASReporting ServicesReportServerrssrvpolicy.config\u0026#34; $currentDate = (get-date).tostring(\u0026#34;mm_dd_yyyy-hh_mm_s\u0026#34;) # month_day_year - hours_mins_seconds $backup = $webConfig + \u0026#34;.xml\u0026#34; #\u0026#34;_$currentDate\u0026#34; $doc = new-object System.Xml.XmlDocument $doc.Load($webConfig) #save a backup copy $doc.Save($backup) Write Write-Host \u0026#34;Backup saved as \u0026#34; + $backup #Add SecurityClass $nodeAxSessionPermission = $doc.documentElement.SelectSingleNode(\u0026#34;//configuration/mscorlib/security/policy/PolicyLevel/SecurityClasses/SecurityClass[@Name=\u0026#39;AxSessionPermission\u0026#39;]\u0026#34;) if (-not($nodeAxSessionPermission)) { { $nodeSecurityClasses = $doc.documentElement.SelectSingleNode(\u0026#34;//configuration/mscorlib/security/policy/PolicyLevel/SecurityClasses\u0026#34;) if ($nodeSecurityClasses) { { $nodeSecurityClass = $doc.createElement(\u0026#34;SecurityClass\u0026#34;) $nodeSecurityClass.InnerXml = \u0026#34;\u0026lt;SecurityClass Name=\u0026#39;AxSessionPermission\u0026#39; Description=\u0026#39;Microsoft.Dynamics.Framework.Reports.AxSessionPermission, Microsoft.Dynamics.Framework.Reports, Version=\u0026#34; + $version + \u0026#34;, Culture=neutral, PublicKeyToken=31bf3856ad364e35\u0026#39; /\u0026gt;\u0026#34; $nodeSecurityClasses.appendChild($nodeSecurityClass.FirstChild) Write Write-Host \u0026#34;SecurityClass added\u0026#34; } } #Add PermissionSet $nodeAxSessionPermissionSet = $doc.documentElement.SelectSingleNode(\u0026#34;//configuration/mscorlib/security/policy/PolicyLevel/NamedPermissionSets/PermissionSet[@class=\u0026#39;NamedPermissionSet\u0026#39; and @version=\u0026#39;1\u0026#39; and @Name=\u0026#39;AxSessionPermissionSet\u0026#39;]\u0026#34;) if (-not($nodeAxSessionPermissionSet)) { { $nodeNamedPermissionSets = $doc.documentElement.SelectSingleNode(\u0026#34;//configuration/mscorlib/security/policy/PolicyLevel/NamedPermissionSets\u0026#34;) if ($nodeNamedPermissionSets) { { $nodePermissionSet = $doc.createElement(\u0026#34;PermissionSet\u0026#34;) $nodePermissionSet.InnerXml = \u0026#34;\u0026lt;PermissionSet class=\u0026#39;NamedPermissionSet\u0026#39; version=\u0026#39;1\u0026#39; Name=\u0026#39;AxSessionPermissionSet\u0026#39;\u0026gt; \u0026lt;IPermission class=\u0026#39;AxSessionPermission\u0026#39; version=\u0026#39;1\u0026#39; Unrestricted=\u0026#39;true\u0026#39; /\u0026gt; \u0026lt;IPermission class=\u0026#39;SecurityPermission\u0026#39; version=\u0026#39;1\u0026#39; Flags=\u0026#39;Assertion\u0026#39; /\u0026gt; \u0026lt;/PermissionSet\u0026gt;\u0026#34; $nodeNamedPermissionSets.appendChild($nodePermissionSet.FirstChild) Write Write-Host \u0026#34;PermissionSet added\u0026#34; } } #Add CodeGroup $nodeAxStrongName = $doc.documentElement.SelectSingleNode(\u0026#34;//configuration/mscorlib/security/policy/PolicyLevel/CodeGroup[@class=\u0026#39;FirstMatchCodeGroup\u0026#39; and @version=\u0026#39;1\u0026#39; and @PermissionSetName=\u0026#39;Nothing\u0026#39;]/CodeGroup[@class=\u0026#39;UnionCodeGroup\u0026#39; and @version=\u0026#39;1\u0026#39; and @PermissionSetName=\u0026#39;FullTrust\u0026#39; and @Name=\u0026#39;AX_Reports_Strong_Name\u0026#39;]\u0026#34;) if (-not($nodeAxStrongName)) { { $nodeCodeGroup = $doc.documentElement.SelectSingleNode(\u0026#34;//configuration/mscorlib/security/policy/PolicyLevel/CodeGroup[@class=\u0026#39;FirstMatchCodeGroup\u0026#39; and @version=\u0026#39;1\u0026#39; and @PermissionSetName=\u0026#39;Nothing\u0026#39;]\u0026#34;) if ($nodeCodeGroup) { { $subnodeCodeGroup = $doc.createElement(\u0026#34;CodeGroup\u0026#34;) $subnodeCodeGroup.InnerXml = \u0026#34;\u0026lt;CodeGroup class=\u0026#39;UnionCodeGroup\u0026#39; version=\u0026#39;1\u0026#39; PermissionSetName=\u0026#39;FullTrust\u0026#39; Name=\u0026#39;AX_Reports_Strong_Name\u0026#39; Description=\u0026#39;This code group grants Dynamics AX Reports code full trust. \u0026#39;\u0026gt; \u0026lt;IMembershipCondition class=\u0026#39;StrongNameMembershipCondition\u0026#39; version=\u0026#39;1\u0026#39; PublicKeyBlob=\u0026#39;0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9\u0026#39; /\u0026gt; \u0026lt;/CodeGroup\u0026gt;\u0026#34; $nodeCodeGroup.appendChild($subnodeCodeGroup.FirstChild) Write Write-Host \u0026#34;CodeGroup added\u0026#34; } } #Add nodeReportExpressionPermission #http://blogs.msdn.com/b/axsupport/archive/2012/02/02/microsoft-dynamics-ax-2012-reporting-extensions-error-system-security-permissions-environmentpermission-while-running-report.aspx $nodeReportExpressionPermission = $doc.documentElement.SelectSingleNode(\u0026#34;//configuration/mscorlib/security/policy/PolicyLevel/CodeGroup[@class=\u0026#39;FirstMatchCodeGroup\u0026#39; and @version=\u0026#39;1\u0026#39; and @PermissionSetName=\u0026#39;Nothing\u0026#39;]/CodeGroup[@class=\u0026#39;UnionCodeGroup\u0026#39; and @version=\u0026#39;1\u0026#39; and @PermissionSetName=\u0026#39;Execution\u0026#39; and @Name=\u0026#39;Report_Expressions_Default_Permissions\u0026#39;]\u0026#34;) if ($nodeReportExpressionPermission) { { $attribute = $doc.CreateAttribute(\u0026#34;PermissionSetName\u0026#34;) $attribute.set_Value(\u0026#34;FullTrust\u0026#34;) $nodeReportExpressionPermission.SetAttributeNode($attribute ) } } $doc.Save($webConfig) Write Write-Host \u0026#34;3) Modified the Report Server rssrvpolicy.config file\u0026#34; ","date":"2 July 2015","externalUrl":null,"permalink":"/posts/modify-microsoft-dynamics-ax-2012-r3-ssrs-configurations/","section":"Posts","summary":"PowerShell scripts to modify SSRS configuration files for Dynamics AX 2012 R3 including Report Manager, Report Server, and security policy configurations. Complete automation scripts for SSRS setup.","title":"Modify Microsoft Dynamics AX 2012 R3 SSRS configurations using PowerShell","type":"posts"},{"content":"","date":"2 July 2015","externalUrl":null,"permalink":"/tags/security/","section":"Tags","summary":"","title":"Security","type":"tags"},{"content":"","date":"2 July 2015","externalUrl":null,"permalink":"/tags/ssrs-report/","section":"Tags","summary":"","title":"SSRS Report","type":"tags"},{"content":"","date":"2 July 2015","externalUrl":null,"permalink":"/tags/xml-config/","section":"Tags","summary":"","title":"Xml-Config","type":"tags"},{"content":"","date":"1 July 2015","externalUrl":null,"permalink":"/tags/axbuild/","section":"Tags","summary":"","title":"Axbuild","type":"tags"},{"content":"If you have only 10 mins to build AX, try this\nIn AOS server, go to C:\\Program Files\\Microsoft Dynamics AX\\60\\Server\\DAX\\bin and open cmd from here then run this command\naxbuild.exe xppcompileall /s=01 /altbin=\u0026#34;C:\\Program Files (x86)\\Microsoft Dynamics AX\\60\\Client\\Bin\u0026#34; /s is your AOS number instance, you can check it in windows services /altbin the path to AX client\naxbuild Here is the result axbuild Once compile complete, you can import compile log file at C:\\Program Files\\Microsoft Dynamics AX\\60\\Server\\DAX\\log into compiler output of AX client axbuild Reference\nMSDN: https://msdn.microsoft.com/en-us/library/dn528954.aspx\n","date":"1 July 2015","externalUrl":null,"permalink":"/posts/axbuild-exe-for-parallel-compile-on-aos/","section":"Posts","summary":"Fast compilation technique for Dynamics AX 2012 using AxBuild.exe for parallel compilation on AOS server. Complete command-line guide with parameters and log importing process.","title":"AxBuild.exe for Parallel Compile on AOS","type":"posts"},{"content":"","date":"1 July 2015","externalUrl":null,"permalink":"/tags/build/","section":"Tags","summary":"","title":"Build","type":"tags"},{"content":"","date":"1 July 2015","externalUrl":null,"permalink":"/tags/compile/","section":"Tags","summary":"","title":"Compile","type":"tags"},{"content":"","date":"1 July 2015","externalUrl":null,"permalink":"/tags/parallel/","section":"Tags","summary":"","title":"Parallel","type":"tags"},{"content":"","date":"1 July 2015","externalUrl":null,"permalink":"/tags/performance/","section":"Tags","summary":"","title":"Performance","type":"tags"},{"content":"","date":"9 June 2015","externalUrl":null,"permalink":"/tags/interaction-class/","section":"Tags","summary":"","title":"Interaction Class","type":"tags"},{"content":"Form interaction classes that allow user interface control logic to be shared across forms. For instance, controlling which buttons are available to a list page and the associated detail form.\nThe interaction classes are extending a base ListPageInteraction class. This has some methods supported by the kernel to interact e.g. with initializations of the list page form. Other classes can be build stand alone to execute e.g. a batch process or represent a web service or posting classes.\nForm interaction classes are not mandatory for list pages but should be used on data entry forms that require logic. This ensures consistency and allows easier maintenance of logic.\nThis class inherits from SysListPageInteractionBase, here is some methods we need to know\ninitializing: Called when the form is initializing – Similar to the form init method\nintializeQuery: Also called when the form is initializing – Similar to the datasource init method.\nselectionChanged: Called when the active record changes – Similar to the datasource active method.\nsetButtonEnabled: Should be overridden to dynamically enable/disable buttons based on the current selection. This is called from the selectionChanged method.\npublic void selectionChanged() { Requisition requisition = this.listPage().activeRecord(queryDataSourceStr(RequisitionQuery,Requisition)); super(); if(requisition.WorkflowApprovalStatus == WorkflowApprovalStatus::Approved) this.listPage().actionPaneControlEnabled(formControlStr(RequisitionListPage,Edit),true); else this.listPage().actionPaneControlEnabled(formControlStr(RequisitionListPage,Edit),false); } setButtonVisibility: Should be overridden to show/hide buttons when the form first opens. This is used more to do a one-off layout adjustment based on system configuration/parameters, as well as the menu-item used to open the form. eg If you have a menu-item that opens a form based on status, you may want to hide the relevant status field to reduce clutter.\nThank you for reading!\n","date":"9 June 2015","externalUrl":null,"permalink":"/posts/list-page-interaction-class/","section":"Posts","summary":"Learn about List Page Interaction Classes in Dynamics AX 2012 that extend SysListPageInteractionBase to control form behavior, button states, and UI logic across multiple forms.","title":"List Page Interaction Class","type":"posts"},{"content":"","date":"9 June 2015","externalUrl":null,"permalink":"/tags/listpage/","section":"Tags","summary":"","title":"Listpage","type":"tags"},{"content":"This is to show a method to execute external database stored procedures from X++ code. Create a job in AOT with following code. Follow the steps as explained here in the code like replace Server Name, Database name , Stored Procedure name.\nThe below code is executed through the ODBC Connection.\nstatic void execExternalDatabase(Args _args) { LoginProperty loginProperty; ODBCConnection odbcConnection; Statement statement; ResultSet resultSet; ResultSetMetaData resultSetMetaData; Counter counter; str sql; SqlStatementExecutePermission perm; ; loginProperty = new LoginProperty(); loginProperty.setServer(\u0026#34;SERVERNAME Here\u0026#34;); // Replace your Database Server Name here loginProperty.setDatabase(\u0026#34;DemoDB\u0026#34;); //Replace your Database name here odbcConnection = new ODBCConnection(loginProperty); // setting odbc connection here. // ODBC Connection to create statement statement = odbcConnection.createStatement(); // Replace the StoredProcedure you want to execute. sql = strfmt(\u0026#39;EXEC[myStoredProcedureName]\u0026#39;); // Set code access permission to Execute perm = new SqlStatementExecutePermission(sql); perm.assert(); try { // if Stored Procedure has Select query use executeQuery method. resultSet = statement.executeQuery(sql); resultSet.next(); resultSetMetaData = resultSet.getMetaData(); for (counter = 1; counter \u0026lt;= resultSetMetaData.getColumnCount(); counter++) { switch(resultSetMetaData.getColumnType(counter)) { case 0,1 : info(resultSet.getString(counter)); break; case 3: info(date2StrUsr(resultSet.getdate(counter))); break; } } } catch (exception::Error) { print \u0026#34;An error occured in the query.\u0026#34;; pause; } // Code access permission scope ends here. CodeAccessPermission::revertAssert(); } Used a simple select query in the stored procedure and the result will be displayed on the infolog.\n","date":"13 May 2015","externalUrl":null,"permalink":"/posts/execute-external-database-stored-procedure-from-x-code-using-odbc-connectivity/","section":"Posts","summary":"Learn how to execute stored procedures in external databases from X++ code using ODBC connectivity in Dynamics AX 2012. Complete example with connection setup and query execution.","title":"Execute external database Stored Procedure from X++ code using ODBC connectivity","type":"posts"},{"content":"Login to the AX AOS server and follow below steps.\nClick Start \u0026gt; Administrative Tools.\nRight-click the Microsoft Dynamics AX 2012 Management Shell option.\nClick Run as administrator.\nGo to PowerShell command prompt and run with command\nPublish-AXReport –ReportName *\nWait up to getting Deployment successful message in command prompt.\n","date":"13 May 2015","externalUrl":null,"permalink":"/posts/how-to-deploy-all-the-reports-in-ax2012-by-using-management-shell/","section":"Posts","summary":"Quick guide to deploy all SSRS reports in Dynamics AX 2012 using PowerShell Management Shell with the Publish-AXReport command. Step-by-step process for report deployment.","title":"How to deploy all the reports in AX2012 by using Management Shell","type":"posts"},{"content":"","date":"13 May 2015","externalUrl":null,"permalink":"/tags/management-shell/","section":"Tags","summary":"","title":"Management-Shell","type":"tags"},{"content":"","date":"13 May 2015","externalUrl":null,"permalink":"/tags/publish-axreport/","section":"Tags","summary":"","title":"Publish-Axreport","type":"tags"},{"content":"","date":"13 May 2015","externalUrl":null,"permalink":"/tags/stored-procedure/","section":"Tags","summary":"","title":"Stored Procedure","type":"tags"},{"content":"To execute a stored procedure from X++ use the Server method, the Client method does not have permissions; you don’t require any special privileges or permissions to execute a stored procedure. If we use other than Server method, a message should appear like this\nRequest for the permission of type SqlStatementExecutePermission failed. public static void main(AssemblyLoadEventArgs _args) { Connection con = new Connection(); Statement stmt = new Con.createStatement(); ResultSet r; str sql; SqlStatementExecutePermission perm; sql = stmt(\u0026#39;EXEC [StoreprocedureName]\u0026#39;); perm = new SqlStatementExecutePermission(sql); perm.assert(); try { stmt.executeUpdate(sql); } catch (Exception::Error) { print \u0026#34;An error occured in the query\u0026#34;; pause; } CodeAccessPermission::revertAssert(); } ","date":"12 May 2015","externalUrl":null,"permalink":"/posts/execute-stored-procedure-from-x-code/","section":"Posts","summary":"Learn how to execute SQL stored procedures from X++ code in Dynamics AX 2012 using server-side methods with proper SqlStatementExecutePermission and error handling.","title":"Execute Stored Procedure from X++ code","type":"posts"},{"content":"","date":"12 February 2015","externalUrl":null,"permalink":"/tags/loops/","section":"Tags","summary":"","title":"Loops","type":"tags"},{"content":"","date":"12 February 2015","externalUrl":null,"permalink":"/tags/optimization/","section":"Tags","summary":"","title":"Optimization","type":"tags"},{"content":" Repost from http://www.artofcreation.be/ Tip 1: Measure execution time of your code # Measuring is knowing. Before you start changing code, make sure you have a set of data you can keep reusing for your tests. Measure the performance of your code on that data after each change in code so you know the impact of your changes.\nOne way to do this is by using the Winapi::getTickCount() or WinApiServer::getTickCount() if your code runs on server method.\nstatic void KlForTickCountSample(Args _args) { int ticks; ; // get the tickcount before the process starts ticks = winapi::getTickCount(); // start the process sleep(2000); // simulate 2 seconds of processing // compare tickcount ticks = winapi::getTickCount() – ticks; // display result info(strfmt(\u0026#39;Number of ticks: %1\u0026#39;, ticks)); } Tip 2: limit the number of loops # A LOT of time goes into loops. If you have a performance problem, start looking for loops. Code can run really fast, but it can get slow when it is executed too many time, eg, in a loop.\nTip 3: avoid if in while select # When there is a if in a while select, see if you can rewrite it a a where statement in your select. Don’t be affraid use a join either. Consider the following example:\nstatic void KlForIfInLoop(Args _args) { VendTable vendTable; ; // usually slower while select vendTable { if(vendTable.VendGroup == \u0026#39;VG1\u0026#39;) { info(vendTable.AccountNum); } } // usually faster while select vendTable where vendTable.VendGroup == \u0026#39;VG1\u0026#39; { info(vendTable.AccountNum); } } Tip 4: avoid double use of table methods # Using table methods a lot can get really slow if you do it wrong. Consider the following example:\nstatic void klForTableMethodsSlow(Args _args) { SalesLine salesLine; InventDim inventDim; ; // select a salesline select firstonly salesLine; inventDim.InventColorId = salesLine.inventDim().InventColorId; inventDim.InventSizeId = salesLine.inventDim().InventSizeId; inventDim.inventBatchId = salesLine.inventDim().inventBatchId; } This example code looks nice, but there’s a problem. The salesLine.inventDim() method contains the following:\nInventDim inventDim(boolean _forUpdate = false) { return InventDim::find(this.InventDimId, _forUpdate); } This means that the invendDim record is read three times from the database. It is better to declare the inventDim record locally and only retrieve it once:\nstatic void klForTableMethodsFast(Args _args) { SalesLine salesLine; InventDim inventDim; InventDim inventDimLoc; ; // select a salesline select firstonly salesLine; inventDimLoc = salesLine.inventDim(); inventDim.InventColorId = inventDimLoc.InventColorId; inventDim.InventSizeId = inventDimLoc.InventSizeId; inventDim.inventBatchId = inventDimLoc.inventBatchId; } Tip 5: Don’t put too much code on tables # Code on tables is usually fast, but things can get slow if you use it to much. Say you have a table with an InventDimId field. If you have 5 methods that need the InventDim record, because you don’t have a classDeclaration method on your table, you need to call this function 5 times, once in every method:\nInventDim::find(this.inventDim) When you put these methods on a class, you could optimise it by fetching the record only once and storing it in the classDeclaration, or better, passing it as a parameter to your methods. An other example is fetching parameters from parameter tables, eg InventParameters::find(). On a table, you have to fetch it each time you call a method. In a class, you would probably optimize your code to only fetch the parameter record once.\nTip 6: Use the fastest code # For some tasks, there is special code that is faster than the code you would normally write. For example:\n// slower while select forupdate custTable where custTable.custGroup == \u0026#39;TST\u0026#39; { custTable.delete(); } // faster delete_from custTable where custTable.custGroup == \u0026#39;TST\u0026#39;; The same applies to update_recordset for updating records. Also, when adding values to the end of a container\ncont += \u0026#34;a value\u0026#34;; is faster than\ncont = conins(cont, conlen(cont), \u0026#34;a value\u0026#34;); Tip 7: Every optimization counts # Remember that every optimization you do to you code counts, even if it’s a little one. Small performance tweaks can have a huge effect once you process large quantities of data. So don’t be lazy, and optimize.\n","date":"12 February 2015","externalUrl":null,"permalink":"/posts/x-performance-tips/","section":"Posts","summary":"Essential X++ performance optimization tips for Dynamics AX 2012 including measuring execution time, avoiding if statements in loops, optimizing table methods, and using specialized fast code patterns.","title":"X++ Performance tips","type":"posts"},{"content":"In this post let\u0026rsquo;s explore creating XML using X++ code in Dynamics AX.\nThe following example shows how to create and write data to an XML file by using the XmlDocument, XmlElement, and XmlWriter classes. It loops through all of the records in the CarTable and find all the fields in the table automatically by using the DictTable and DictField classes.\nstatic void WriteXml(Args _args) { XmlDocument xmlDoc; XmlElement xmlRoot; XmlElement xmlField; XmlElement xmlRecord; XMLWriter xmlWriter; CarTable carTable; DictTable dTable = new DictTable(tablenum(CarTable)); DictField dField; int i, fieldId; str value; ; #CarsXmlTags // Create a new object of the XmlDocument class xmlDoc = XmlDocument::newBlank(); // Create the root node xmlRoot = xmlDoc.createElement(#CarRootNode); // Loop through all the records in the carTable while select carTable { // Create a XmlElement (record) to hold the // contents of the current record. xmlRecord = xmlDoc.createElement(#CarRecords); // Loop through all the fields in the record for (i=1; i\u0026lt;=dTable.fieldCnt(); i++) { // Get the fieldId from the field-count fieldId = dTable.fieldCnt2Id(i); // Find the DictField object that matches the fieldId dField = dTable.fieldObject(fieldId); // Skip system fields if (dField.isSystem()) continue; // Create a new XmlElement (field) and // have the name equal to the name of the // dictField xmlField = xmlDoc.createElement(dField.name()); // Convert values to string. I have just added // a couple of conversion as an example. // Use tableName.(fieldId) instead of fieldname // to get the content of the field. switch (dField.baseType()) { case Types::Int64 : value = int642str(carTable.(fieldId)); break; case Types::Integer : value = int2str(carTable.(fieldId)); break; default : value = carTable.(fieldId); break; } // Set the innerText of the XmlElement (field) // to the value from the table xmlField.innerText(value); // Append the field as a child node to the record xmlRecord.appendChild(xmlField); } // Add the record as a child node to the root xmlRoot.appendChild(xmlRecord); } // Add the root to the XmlDocument xmlDoc.appendChild(xmlRoot); // Create a new object of the XmlWriter class // in order to be able to write the xml to a file xmlWriter = XMLWriter::newFile(@\u0026#34;c:tempcars.xml\u0026#34;); // Write the content of the XmlDocument to the // file as specified by the XmlWriter xmlDoc.writeTo(xmlWriter); } The file that is created looks like the one in the following screenshot(only first part of the file is shown):\ncreate-and-write-to-xml As you can see, this file is based on a standard XML format with tags and values only. You can, however, use tag attributes as well. To put the values from the table into tag attributes instead of their own tags, simply change the following code snippet in the example above\n// Set the innerText of the XmlElement (field) // to the value from the table xmlField.innerText(value); // Append the field as a child node to the record xmlRecord.appendChild(xmlField); With these lines:\n// Add the attribute to the record xmlRecord.setAttribute(dField.name(), value); The file that is created now looks like the one in the following screenshot:\ncreate-and-write-to-xml ","date":"4 February 2015","externalUrl":null,"permalink":"/posts/create-and-write-to-xml-file-in-dynamics-ax/","section":"Posts","summary":"Learn how to create and write XML files in Dynamics AX using X++ code with XmlDocument, XmlElement, and XmlWriter classes. Complete example shows generating XML from table data with attributes and tags.","title":"Create and write to XML file in Dynamics AX","type":"posts"},{"content":"","date":"4 February 2015","externalUrl":null,"permalink":"/tags/file-generation/","section":"Tags","summary":"","title":"File Generation","type":"tags"},{"content":"","date":"27 January 2015","externalUrl":null,"permalink":"/tags/action/","section":"Tags","summary":"","title":"Action","type":"tags"},{"content":"","date":"27 January 2015","externalUrl":null,"permalink":"/tags/display/","section":"Tags","summary":"","title":"Display","type":"tags"},{"content":"","date":"27 January 2015","externalUrl":null,"permalink":"/tags/menu-items/","section":"Tags","summary":"","title":"Menu Items","type":"tags"},{"content":"","date":"27 January 2015","externalUrl":null,"permalink":"/tags/output/","section":"Tags","summary":"","title":"Output","type":"tags"},{"content":"The answer is that there is no difference, the difference is a conceptual one rather than a functional or a technical one. So I think you will make a better choice for your scenario base on functional side.\nhello Display Menu item # This folder is used to contain menu items that reference runnable application objects that primarily present forms, ddialog and so on, to the user. May be this forms, dialog called from another forms.\nOutput Menu item # An output menu item application objects whose primarily function is to print a result or report.\nAction Menu item # You should create a menu item under this folder if your runnable application objects whose primarily function is to do some kind of a job, such as creating or updating transactions in the database.\n","date":"27 January 2015","externalUrl":null,"permalink":"/posts/difference-display-output-and-action-in-dynamics-ax/","section":"Posts","summary":"Understand the conceptual differences between Display, Output, and Action menu items in Dynamics AX 2012. Learn when to use each type for forms, reports, and database operations in the AOT.","title":"What is the difference difference between menu item Display, Output and Action","type":"posts"},{"content":"Software engineer focused on Dynamics 365 Finance \u0026amp; Operations and the Microsoft business stack (Power Platform, Azure) with 10+ years delivering business-critical systems across APAC and the U.S. Built, deployed, and supported AX 2009/2012 (AX5/AX6) and D365FO, with strengths in Financial Services and Supply Chain. Based in Los Angeles, CA.\nD365FO (Dev/Tech) # X++, Chain of Command, extensions (forms/tables/classes), Data Entities (DMF), Electronic Reporting (ER), workflows \u0026amp; batch, SSRS, performance tuning (Trace Parser, LCS, query tuning), security \u0026amp; ALM (LCS, models/projects, ISV mgmt).\nIntegrations \u0026amp; Data # OData, DMF Recurring Integrations \u0026amp; Package API, Business Events → Azure (Functions/Service Bus/Event Grid), Dual-write; F\u0026amp;O ↔ Dataverse patterns.\nAnalytics # Synapse Link from F\u0026amp;O via Dataverse → ADLS/Fabric lakehouse, Power BI via connector/TDS endpoint; Parquet/Delta patterns\nAutomation \u0026amp; DevOps # Azure DevOps YAML CI/CD for D365FO builds/releases; RSAT in pipelines; scripted cross-environment DB copy/refresh; environment provisioning (LCS API/PowerShell); Key Vault; App Insights/Log Analytics.\nAP \u0026amp; Globalization # Invoice Capture (OCR → review/correct → post), Electronic Invoicing (RCS/Globalization Studio), ER configurations, tax calc service patterns.\nPower Platform # Model-driven \u0026amp; canvas apps, Dataverse schema, Power Automate (approvals/integrations), governance (DLP/CoE), Synapse Link → Fabric analytics hand-off.\nCopilot / AI # Extend F\u0026amp;O Copilot with client actions/plugins (surface X++ logic), Copilot Studio/low-code plugins, Dataverse-backed MCP actions.\nAzure # Functions, Logic Apps, Storage/ADLS Gen2, Data Factory/Synapse, Managed Identity, Key Vault, App Insights; ARM/Bicep; API design \u0026amp; Postman.\nTooling # Git/Azure Repos, branching/PRs, RSAT, SQL Server/SSMS, PowerShell, ER/Config designer, LCS admin.\nDetails Minimize the footprint of changes — lower merge pain across partners, upgrades, and hot-fixes. Change at the right layer — prefer highest applicable level: class → table → form data source field/method → form control. Use field groups — drive forms from field groups to reduce maintenance and improve upgrade resilience. Prioritize maintainability — design for clean upgrades and low technical debt. Service-oriented design — favor clear service boundaries for scalability and integrations. Code reuse — modular, testable components for faster delivery and easier QA. Best practices — apply D365 design patterns and coding standards consistently. ","date":"1 January 2015","externalUrl":null,"permalink":"/about/","section":"","summary":"\u003cp\u003eSoftware engineer focused on Dynamics 365 Finance \u0026amp; Operations and the Microsoft business stack (Power Platform, Azure) with 10+ years delivering business-critical systems across APAC and the U.S. Built, deployed, and supported AX 2009/2012 (AX5/AX6) and D365FO, with strengths in Financial Services and Supply Chain. Based in Los Angeles, CA.\u003c/p\u003e","title":"About","type":"page"},{"content":"","date":"10 October 2014","externalUrl":null,"permalink":"/tags/aod/","section":"Tags","summary":"","title":"Aod","type":"tags"},{"content":"","date":"10 October 2014","externalUrl":null,"permalink":"/tags/architectural/","section":"Tags","summary":"","title":"Architectural","type":"tags"},{"content":"","date":"10 October 2014","externalUrl":null,"permalink":"/tags/axutil/","section":"Tags","summary":"","title":"Axutil","type":"tags"},{"content":"","date":"10 October 2014","externalUrl":null,"permalink":"/tags/layers/","section":"Tags","summary":"","title":"Layers","type":"tags"},{"content":"","date":"10 October 2014","externalUrl":null,"permalink":"/tags/models/","section":"Tags","summary":"","title":"Models","type":"tags"},{"content":"The model store is the portion of the Microsoft Dynamics AX database where all Microsoft Dynamics AX application elements are stored, including customization. The model store replaces the AOD (application object definition) files used in previous releases of Microsoft Dynamics AX (I mean from 4.0 to 2009).\nLayer and model information are integral parts of the store. The AOS has access to the model store, handles layer-flattening, and provides model data to all the Microsoft Dynamics AX sub-systems, such as form- and report-rendering and X++ code.\nmodel_layer_elements Microsoft Dynamics AX contains sixteen layers. Each layer consists of one or more logical parts called models. A system generated model exists for each layer.\nFor example, the VAR Model is the system generated model for the VAR layer. You can use the system generated models to install and start working with the base Microsoft Dynamics AX system. You can leverage the capabilities of models, and tools and functionality that support the models, during customization of the Microsoft Dynamics AX application.\nunderstand-model-store-architectural The model store is the portion of the Microsoft Dynamics AX database where all Microsoft Dynamics AX application elements are stored, including customization.\nThe model store replaces the AOD files used in previous releases of Microsoft Dynamics AX. It can be managed through the AXUtil command line utility, or by using Windows PowerShell.\nThe baseline model store database holds model store tables for the previous version of metadata. Use it only during an upgrade.\nThe baseline model store is similar to the old folder in previous releases of Microsoft Dynamics AX.\nThank you for reading.\n","date":"10 October 2014","externalUrl":null,"permalink":"/posts/understand-model-store-architectural/","section":"Posts","summary":"Learn about AX 2012 model store architecture, layers, and models that replaced AOD files from previous versions. Understand how the model store manages application elements and customizations in the database.","title":"Understand model store architectural in AX 2012","type":"posts"},{"content":" Understanding the internal architecture of Microsoft Dynamics AX 2012 can help you make decision when planning and developing a Microsoft Dynamics AX 2012 system. Here are some pointers on DAX 2012 architecture primarily for DAX 2012 architects \u0026amp; solution developers. This topic provides a high-level overview of the system architecture of Microsoft Dynamics AX.\nSystem architecture # This diagram provides a high-level over of a Microsoft Dynamics AX 2012 system with all components installed, and describes how communications flow between the components.\nAXSystemArchitechture 1. Application Object Server (AOS) architecture # This diagram describes the functionality within the AOS Windows service, and describes how communications flow within it.\nAOSWindowsService Note: Clients communicate with an AOS by using remote procedure calls (RPCs), Windows Communication Foundation (WCF), or AOS services. In previous releases, other components and third-party programs could communicate with an AOS by using either .NET Business Connector or Application Integration Framework (AIF). For this release, we recommend that third-party programs use AOS services to communicate with AOS.\n2. Business Connector architecture # The differences between the client kernel as it runs on a standard client and a Business Connector client are:\nThe Session Manager in the client kernel manages only a single instance–in the Business Connector kernel, it manages multiple instances.\nhe client kernel includes forms security, while the Business Connector kernel does not.\nThis diagram describes the architecture of the Business Connector version of the client kernel, and describes how communications flow within it.\nBusiness_Connector_Client 3. Application file server architecture # App_file_server_architechture Model store architecture # Microsoft Dynamics AX contains sixteen layers. Each layer consists of one or more logical parts called models. A model is generated for each layer. For example, VAR Model is the model that the system generates for the VAR layer. The system generated models let you install and work with the base Microsoft Dynamics AX system.\nWhen you customize the Microsoft Dynamics AX program, you can take advantage of the capabilities of models.\nModel_store_architecture The following table describes the application object layers in Microsoft Dynamics AX 2012:\nLayer Client architecture # This diagram describes the functionality within the client, and describes how communications flow within it.\nClient_architecture Client/server communication # ClientServer_communication The client communicates with various Microsoft Dynamics AX components in the following ways:\nThe client uses the remote procedure call (RPC) protocol to communicate with Application Object Server (AOS). The client never accesses the database or metadata directly. AOS sends the application objects and data to the client.\nThe data layer that the client uses is based on data sources that are specified in metadata for forms and queries. In addition, any X++ code that is required to retrieve data can use the built-in language support to query and adjust data.\nThe client uses a report Web Part to interact with the report server. By calling the web services that are exposed by the report server, the report control in the Web Part displays information that is contained in Reporting Services reports. These reports can include either transnational data from the Microsoft Dynamics AX application or OLAP cubes from Microsoft SQL Server Analysis Services. Cubes provide business analytic and key performance indicators (KPIs).\nThe client provides workflow forms, alerts, and controls so that users can participate in the business process by using the Workflow system. The Workflow system is a Microsoft Dynamics AX component that enables workflow processes by using Windows Communication Foundation classes.\nThe client provides a Help viewer, which is an application that displays context-sensitive Help topics. The Help topics are retrieved from a Help server that is located on-premises.\nThe client also provides Role Centers, or role-based home pages, for users. Role Centers provide role-specific tasks, activities, alerts, reports, and business intelligence that help users increase their productivity. To interact with the Role Centers that are provided by Enterprise Portal and hosted on Internet Information Services (IIS), the client uses a browser control.\nServices and AIF architecture # AX 2012 exposes its functionality through services that are based on Windows Communication Foundation (WCF) and hosted on Application Object Server (AOS). External applications and client applications on the local area network consume AX services by accessing them directly from AOS.\nThese clients and applications include AX components such as the AX client, Office Add-, and Enterprise Portal.\nInternet-based external applications and clients access the AX services through Internet Information Services (IIS). IIS routes the incoming requests for AX services to AOS. All services requests, regardless of their origin, are handled by the WCF runtime that is hosted on AOS.\nThe AIF request preprocessor, if it is configured, can intercept the inbound request messages for custom preprocessing, such as message transforms or value substitutions. The AX service invokes the necessary business logic to process the inbound request message.\nSimilarly, the AIF response postprocessor, if it is configured, can intercept the outbound response messages for custom post-processing, such as message transforms or value substitutions. The AIF response postprocessor then returns the response to the client.\nWCF_architecture Enterprise Portal architecture # This diagram provides a logical overview of a Microsoft Dynamics AX 2012 system with an Enterprise Portal server, and also describes the various components of the Enterprise Portal architecture.\nEP_Architecture Security architecture # This following diagram provides a high-level overview of the security architecture of Microsoft Dynamics AX 2012.\nSecurity_architecture Workflow system architecture # This following diagram provides a high-level architecture of the workflow infrastructure.\nThe workflow infrastructure consists of two components that are hosted on Application Object Server (AOS): the X++ workflow run-time and the managed workflow run-time.\nWorkflow_system_arcitechture Analytic architecture # The following diagram shows the Microsoft SQL Server Analysis Services cubes that are included with Microsoft Dynamics AX, and the components that are used to access them.\nAnalytic_architecture Reporting architecture # The following diagram illustrates the architecture of the reporting functionality in Microsoft Dynamics AX.\nreporting_architecture Thank you for reading.\n","date":"1 January 2013","externalUrl":null,"permalink":"/posts/microsoft-dynamics-ax-2012-architecture-overview/","section":"Posts","summary":"Comprehensive architectural overview of Microsoft Dynamics AX 2012 system components including AOS, client-server communication, model store, Enterprise Portal, security, workflow, and reporting infrastructure. Essential guide for AX 2012 architects and solution developers.","title":"Architecture overview Microsoft Dynamics AX 2012","type":"posts"},{"content":"","date":"1 January 2013","externalUrl":null,"permalink":"/tags/client-server/","section":"Tags","summary":"","title":"Client-Server","type":"tags"},{"content":"","date":"1 January 2013","externalUrl":null,"permalink":"/tags/enterprise-portal/","section":"Tags","summary":"","title":"Enterprise-Portal","type":"tags"},{"content":"","date":"1 January 2013","externalUrl":null,"permalink":"/tags/system-architecture/","section":"Tags","summary":"","title":"System-Architecture","type":"tags"},{"content":"","date":"1 January 2011","externalUrl":null,"permalink":"/tags/fun/","section":"Tags","summary":"","title":"Fun","type":"tags"},{"content":"I don’t know exactly how I ended up where I am. I mean, programming, and lovin’ it. Even if I’m not so good.\nI’ve heard a thousand of guys telling stories like: “When I was twelve my parents bought me my first computer and I started learning on my own.” or “I won a programming contest when I was in highschool”. Great. Well done. I’ve never noticed about what coding was until I was eighteen, when I had to decide what to study at the University.\nDo you want to know what was I thinking about? First option: Computer Science. Second option: Arts (wtf?). Third option: Philosophy (WTF?). I’ve ever liked computers, yes, but I’d never thought I could do that amazing things with them. I also liked maths, puzzles, things that made my brain think hard and get fun at the same time. You know, quizes, enigmas, games… The conclusion was that I wanted to do something creative, where I could put my imagination on, where I could challenge myself in order to create new stuff.\nMy first programming class was awful. I didn’t get nothing, and everyone seemed to be so cool on it, everyone with this big “Hello World” in their screens and a smile in their faces like ‘Yeah dude, I did it.”. I didn’t even know what to write down, or what was the teacher talking about. I was so frustrated, my first exam was… well, I don’t want to talk about my first exam.\nOne day, I don’t know how, something changed. Suddenly, I realized what programming was. I really abstracted my mind, I looked at it from another perspective, and it came with me so clear and so beautiful and I can not explain with words what I felt.\nWas it easier from then? Not at all. In fact, I left Computer Science after the first year, with almost all the subjects passed, because there was still something that made me think I was not made for it. I was so lost, I didn’t know what to do with my life. I really liked programming, but there were so much thinks that seemed to be so far away from me. And I felt that everyone around me was going good on it, it was so frustrating that I couldn’t stand it anymore.\nThen, I decided I had to change my situation because there should be something out there waiting for me. I looked for other degrees in a lot of universities.\nIt was. I do really love what I’m studying now, but the truth is that I think I’ve found my way. Actually, I will finish also Computer Science someday, but in a different place. And I’m still getting frustrated, of course, who doesn’t?, but I know I learned to love that frustration. Let me explain myself.\nProgramming is that. Is try it out thousand of times. Is try to find a mistake between a million lines of code, it’s to abstract your mind to find an answer, it’s… beautiful. I know really good programmers that honestly, I think I’ll never reach out, I have not that brilliant brain. But I keep on trying it, I’m not the best, I just love what I do.\nMaybe this post is not just about programming, maybe is more about to find out what do you really love. Even if sometimes you hate it, or it makes you cry, or it makes you feel so stupid because you are not able to understand it, or if it makes you think there is a lot of people smarter than you doing the same thing better. Just… enjoy your time, fight for what you want, challenge yourself to go to the next step.\n","date":"1 January 2011","externalUrl":null,"permalink":"/posts/start-programming/","section":"Posts","summary":"A personal journey of discovering programming, from initial struggles and frustration to finding passion and purpose in coding. Learn about perseverance and finding what you truly love despite challenges.","title":"Start programming","type":"posts"},{"content":" One-stop Dynamics 365 Finance Operations 1. Offical document Development and administration for Finance and operations apps Dynamics 365 Finance Dynamics 365 Supply Chain Management Dynamics 365 Commerce Dynamics 365 Human Resources Dynamics 365 Finance Product updates 2. Unified admin experience for finance and operations apps Unified admin trials Unified developer experience Announcing Unified Trial and Developer Environments for Dynamics 365 Finance and Operations apps 3. Learning and Certificate Microsoft learn Dynamics 365 Success by Design Implementation Guide Exam MB-300: Microsoft Dynamics 365: Core Finance and Operations Dynamics 365 and Power Platform certificates practice labs 4. FastTrack resource Dynamics 365 Finance Operations FastTrack TechTalks Dynamics 365 Finance Operations FastTrack Blog Dynamics 365 Finance Operations FastTrack Architecture Insights - Catch up on the recommended implementation practices across Customer Engagement and Finance \u0026amp; Operations apps. The content is created and shared by the solution architects from Dynamics 365 engineering team. Dynamics 365 Finance Operations FastTrack Implementation guides - The Dynamics 365 FastTrack team uses this repository to share Dynamics 365 Customer Service, Dynamics 365 F\u0026amp;O and Commerce best implementation guidelines Dynamics AX Integration samples and demos Sample code for customer/partner telemetry emitted by the Dynamics 365 Supply Chain product. 5. Tools and Scripts https://microsoft.github.io/finops-toolkit/guide File-based integration scenarios for Dynamics 365 Finance and Dynamics 365 Supply Chain Management CI-CD Pipeline X++ Samples MXT - X++ Interpreter d365fo.tools - Powershell module to handle the different management tasks d365fo.integrations - Powershell functions for integration with D365FO. DynamicsAxTools - Scripts set to monitor and generate AX performance reports. Scripts for running documentation reports for Dynamics 365 Finance The Dynamics Application checker Custom help system for Microsoft Dynamics 365 Finance and Operations Lifecycle Services Companion App for administrators LabelFileGenerator - Generate label files for D365FO core models in specific languages. 6. Co-pilot Fin\u0026amp;SCM Copilot international availabitity report 7. Add-ins Sample Power Apps for Dynamics 365 Project Operations Sample code for Dynamics 365 Supply Chain Management - Inventory Visibility Add-in Samples, templates and setup guides in order to run demand forecasting in Azure Machine Learning Service and integrate with Dynamics 365 SCM Dynamics 365 Commerce end to end sample solutions 8. Development and utilities XppTools - Useful X++ utilities and code samples. TRUDUtilsD365 - A set of add-ins to perform quickly common development tasks. AOT Browser - Dynamics 365 for Finance and Operations AOT Browser. D365FO Admin Toolkit. Driv.XTB.FinOpsVirtualEntityManager Docentric AX Free Edition - Improves print destinations for all your reports in MS Dynamics 365 for Finance and Operations. 9. Youtube channels Dynamics 365 for Finance and Operations - Aimed to software engineers and those involved in developing solutions. This channel is NOT a Microsoft official. Microsoft Dynamics 365 Unified Operations - Official Microsoft D365FO playlist. 10. Cool features are under Preview About business performance analytics The Visual Studio 2022 add-in is now available for Dynamics 365 for Financials and Operations. X++ And Git: A Basic Setup ","externalUrl":null,"permalink":"/awesomefinops/","section":"","summary":"\u003cscript async src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-6612671638545440\"\n     crossorigin=\"anonymous\"\u003e\u003c/script\u003e\n\n\u003ch1 class=\"relative group\"\u003e\u003ca\n  href=\"https://github.com/Dynamics365/One-stop-Dynamics-365-Finance-Operations\"\n    target=\"_blank\"\n  \u003eOne-stop Dynamics 365 Finance Operations\u003c/a\u003e \n    \u003cdiv id=\"one-stop-dynamics-365-finance-operations\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n\u003c/h1\u003e\n\n\u003ch2 class=\"relative group\"\u003e1. Offical document \n    \u003cdiv id=\"1-offical-document\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca\n  href=\"https://learn.microsoft.com/en-us/dynamics365/fin-ops-core/fin-ops/\"\n    target=\"_blank\"\n  \u003eDevelopment and administration for Finance and operations apps\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca\n  href=\"https://learn.microsoft.com/en-us/dynamics365/finance/finance-welcome\"\n    target=\"_blank\"\n  \u003eDynamics 365 Finance\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca\n  href=\"https://learn.microsoft.com/en-us/dynamics365/supply-chain/supply-chain-management-welcome\"\n    target=\"_blank\"\n  \u003eDynamics 365 Supply Chain Management\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca\n  href=\"https://learn.microsoft.com/en-us/dynamics365/commerce/welcome\"\n    target=\"_blank\"\n  \u003eDynamics 365 Commerce\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca\n  href=\"https://learn.microsoft.com/en-us/dynamics365/human-resources/welcome\"\n    target=\"_blank\"\n  \u003eDynamics 365 Human Resources\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca\n  href=\"https://cloudblogs.microsoft.com/dynamics365/product/dynamics-365-finance/?sort-by=newest-oldest\u0026amp;date=any\"\n    target=\"_blank\"\n  \u003eDynamics 365 Finance Product updates\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 class=\"relative group\"\u003e2. Unified admin experience for finance and operations apps \n    \u003cdiv id=\"2-unified-admin-experience-for-finance-and-operations-apps\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca\n  href=\"https://learn.microsoft.com/en-us/power-platform/admin/unified-experience/admin-trials\"\n    target=\"_blank\"\n  \u003eUnified admin trials\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca\n  href=\"https://learn.microsoft.com/en-us/power-platform/developer/unified-experience/finance-operations-dev-overview\"\n    target=\"_blank\"\n  \u003eUnified developer experience\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca\n  href=\"https://cloudblogs.microsoft.com/dynamics365/it/2023/09/15/announcing-unified-trial-and-developer-environments-for-dynamics-365-finance-and-operations-apps/\"\n    target=\"_blank\"\n  \u003eAnnouncing Unified Trial and Developer Environments for Dynamics 365 Finance and Operations apps\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 class=\"relative group\"\u003e3. Learning and Certificate \n    \u003cdiv id=\"3-learning-and-certificate\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca\n  href=\"https://docs.microsoft.com/en-us/learn/browse/?expanded=dynamics-365\u0026amp;products=dynamics-finance-operations%2Cdynamics-scm\u0026amp;roles=developer\"\n    target=\"_blank\"\n  \u003eMicrosoft learn\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca\n  href=\"https://www.d365implementationguide.com/books/asvr/#p=iii\"\n    target=\"_blank\"\n  \u003eDynamics 365 Success by Design Implementation Guide\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca\n  href=\"/ms-learning/ms-certificate-learning/2023-02-05-mb-300/\"\u003eExam MB-300: Microsoft Dynamics 365: Core Finance and Operations\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca\n  href=\"/ms-learning/lab\"\u003eDynamics 365 and Power Platform certificates practice labs\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 class=\"relative group\"\u003e4. FastTrack resource \n    \u003cdiv id=\"4-fasttrack-resource\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca\n  href=\"https://community.dynamics.com/blogs/?blogid=e624b369-bfb9-4c57-8f1b-b3656ac91f5a\u0026amp;groupid=fe7f279c-2\"\n    target=\"_blank\"\n  \u003eDynamics 365 Finance Operations FastTrack TechTalks\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca\n  href=\"https://community.dynamics.com/blogs/?blogid=5628282d-694f-46c5-9393-48307ffb33e1\"\n    target=\"_blank\"\n  \u003eDynamics 365 Finance Operations FastTrack Blog\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca\n  href=\"https://learn.microsoft.com/en-us/shows/dynamics-365-fasttrack-architecture-insights/\"\n    target=\"_blank\"\n  \u003eDynamics 365 Finance Operations FastTrack Architecture Insights\u003c/a\u003e - Catch up on the recommended implementation practices across Customer Engagement and Finance \u0026amp; Operations apps. The content is created and shared by the solution architects from Dynamics 365 engineering team.\u003c/li\u003e\n\u003cli\u003e\u003ca\n  href=\"https://github.com/microsoft/Dynamics-365-FastTrack-Implementation-Assets\"\n    target=\"_blank\"\n  \u003eDynamics 365 Finance Operations FastTrack Implementation guides\u003c/a\u003e - The Dynamics 365 FastTrack team uses this repository to share Dynamics 365 Customer Service, Dynamics 365 F\u0026amp;O and Commerce best implementation guidelines\u003c/li\u003e\n\u003cli\u003e\u003ca\n  href=\"https://github.com/Microsoft/Dynamics-AX-Integration\"\n    target=\"_blank\"\n  \u003eDynamics AX Integration samples and demos\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca\n  href=\"https://github.com/microsoft/d365-scm-telemetry\"\n    target=\"_blank\"\n  \u003eSample code for customer/partner telemetry emitted by the Dynamics 365 Supply Chain product.\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 class=\"relative group\"\u003e5. Tools and Scripts \n    \u003cdiv id=\"5-tools-and-scripts\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca\n  href=\"https://microsoft.github.io/finops-toolkit/guide\"\n    target=\"_blank\"\n  \u003ehttps://microsoft.github.io/finops-toolkit/guide\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca\n  href=\"https://github.com/Microsoft/Recurring-Integrations-Scheduler\"\n    target=\"_blank\"\n  \u003eFile-based integration scenarios for Dynamics 365 Finance and Dynamics 365 Supply Chain Management\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca\n  href=\"https://github.com/microsoft/Dynamics365-Xpp-Samples-Tools\"\n    target=\"_blank\"\n  \u003eCI-CD Pipeline X++ Samples\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca\n  href=\"https://github.com/milnet92/MXTXppInterpreter\"\n    target=\"_blank\"\n  \u003eMXT - X++ Interpreter\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca\n  href=\"https://github.com/d365collaborative/d365fo.tools\"\n    target=\"_blank\"\n  \u003ed365fo.tools\u003c/a\u003e - Powershell module to handle the different management tasks\u003c/li\u003e\n\u003cli\u003e\u003ca\n  href=\"https://github.com/d365collaborative/d365fo.integrations\"\n    target=\"_blank\"\n  \u003ed365fo.integrations\u003c/a\u003e - Powershell functions for integration with D365FO.\u003c/li\u003e\n\u003cli\u003e\u003ca\n  href=\"https://github.com/bferreti/DynamicsAxTools\"\n    target=\"_blank\"\n  \u003eDynamicsAxTools\u003c/a\u003e - Scripts set to monitor and generate AX performance reports.\u003c/li\u003e\n\u003cli\u003e\u003ca\n  href=\"https://github.com/microsoft/fin-ops-doc-scripts/\"\n    target=\"_blank\"\n  \u003eScripts for running documentation reports for Dynamics 365 Finance\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca\n  href=\"https://github.com/microsoft/Dynamics365FO-AppChecker\"\n    target=\"_blank\"\n  \u003eThe Dynamics Application checker\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca\n  href=\"https://github.com/microsoft/dynamics365f-o-custom-help\"\n    target=\"_blank\"\n  \u003eCustom help system for Microsoft Dynamics 365 Finance and Operations\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca\n  href=\"https://github.com/microsoft/2LCS\"\n    target=\"_blank\"\n  \u003eLifecycle Services Companion App for administrators\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca\n  href=\"https://github.com/ptornich/LabelFileGenerator\"\n    target=\"_blank\"\n  \u003eLabelFileGenerator\u003c/a\u003e - Generate label files for D365FO core models in specific languages.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 class=\"relative group\"\u003e6. Co-pilot Fin\u0026amp;SCM \n    \u003cdiv id=\"6-co-pilot-finscm\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca\n  href=\"https://dynamics.microsoft.com/en-us/availability-reports/copilotreport/\"\n    target=\"_blank\"\n  \u003eCopilot international availabitity report\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 class=\"relative group\"\u003e7. Add-ins \n    \u003cdiv id=\"7-add-ins\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca\n  href=\"https://github.com/microsoft/Dynamics365-Project-Operations-PowerApps\"\n    target=\"_blank\"\n  \u003eSample Power Apps for Dynamics 365 Project Operations\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca\n  href=\"https://github.com/microsoft/Inventory-Visibility-Add-in-Examples\"\n    target=\"_blank\"\n  \u003eSample code for Dynamics 365 Supply Chain Management - Inventory Visibility Add-in\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca\n  href=\"https://github.com/microsoft/Templates-For-Dynamics-365-Supply-Chain-Management-Demand-Forecasting-With-Azure-Machine-Learning\"\n    target=\"_blank\"\n  \u003eSamples, templates and setup guides in order to run demand forecasting in Azure Machine Learning Service and integrate with Dynamics 365 SCM\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca\n  href=\"https://github.com/microsoft/Dynamics365Commerce.Solutions\"\n    target=\"_blank\"\n  \u003eDynamics 365 Commerce end to end sample solutions\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 class=\"relative group\"\u003e8. Development and utilities \n    \u003cdiv id=\"8-development-and-utilities\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca\n  href=\"https://github.com/TrudAX/XppTools\"\n    target=\"_blank\"\n  \u003eXppTools\u003c/a\u003e - Useful X++ utilities and code samples.\u003c/li\u003e\n\u003cli\u003e\u003ca\n  href=\"https://github.com/TrudAX/TRUDUtilsD365\"\n    target=\"_blank\"\n  \u003eTRUDUtilsD365\u003c/a\u003e - A set of add-ins to perform quickly common development tasks.\u003c/li\u003e\n\u003cli\u003e\u003ca\n  href=\"https://github.com/arbelatech/aotbrowser\"\n    target=\"_blank\"\n  \u003eAOT Browser\u003c/a\u003e - Dynamics 365 for Finance and Operations AOT Browser.\u003c/li\u003e\n\u003cli\u003e\u003ca\n  href=\"https://github.com/ameyer505/D365FOAdminToolkit\"\n    target=\"_blank\"\n  \u003eD365FO Admin Toolkit\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003e\u003ca\n  href=\"https://github.com/drivardxrm/Driv.XTB.FinOpsVirtualEntityManager\"\n    target=\"_blank\"\n  \u003eDriv.XTB.FinOpsVirtualEntityManager\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca\n  href=\"https://ax.docentric.com/free-edition/\"\n    target=\"_blank\"\n  \u003eDocentric AX Free Edition\u003c/a\u003e - Improves print destinations for all your reports in MS Dynamics 365 for Finance and Operations.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 class=\"relative group\"\u003e9. Youtube channels \n    \u003cdiv id=\"9-youtube-channels\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca\n  href=\"https://www.youtube.com/channel/UCBO2POgO41qokZzwSFTsn2Q/featured\"\n    target=\"_blank\"\n  \u003eDynamics 365 for Finance and Operations\u003c/a\u003e - Aimed to software engineers and those involved in developing solutions. This channel is NOT a Microsoft official.\u003c/li\u003e\n\u003cli\u003e\u003ca\n  href=\"https://www.youtube.com/watch?v=46ylO7raZAo\u0026amp;list=PLcakwueIHoT_SYfIaPGoOhloFoCXiUSyW\"\n    target=\"_blank\"\n  \u003eMicrosoft Dynamics 365 Unified Operations\u003c/a\u003e - Official Microsoft D365FO playlist.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 class=\"relative group\"\u003e10. Cool features are under Preview \n    \u003cdiv id=\"10-cool-features-are-under-preview\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca\n  href=\"https://learn.microsoft.com/en-us/dynamics365/finance/business-performance-analytics/business-performance-analytics-home-page\"\n    target=\"_blank\"\n  \u003eAbout business performance analytics\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca\n  href=\"https://devblogs.microsoft.com/powerplatform/the-visual-studio-2022-add-in-is-now-available-for-dynamics-365-for-financials-and-operations/\"\n    target=\"_blank\"\n  \u003eThe Visual Studio 2022 add-in is now available for Dynamics 365 for Financials and Operations.\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca\n  href=\"https://devblogs.microsoft.com/ise/2022/06/14/xpp-and-git/\"\n    target=\"_blank\"\n  \u003eX++ And Git: A Basic Setup\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"","type":"page"},{"content":"","externalUrl":null,"permalink":"/series/finops/","section":"Series","summary":"","title":"Finops","type":"series"}]